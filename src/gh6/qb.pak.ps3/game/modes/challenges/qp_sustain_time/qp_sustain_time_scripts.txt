Unknown [1c0000000000000000000a100000000000000000]SectionStruct g_qp_sustain_time_core{	StructHeader	{		StructStruct player_data		{			StructHeader			{				StructInt current_progress = 0				StructInt section_base_value = 0				StructInt previous_progress = 0				StructInt hitting_sustain_note = 0				StructInt old_whammy_pos = 0			}		}		StructArray checkpoints		{			ArrayStruct			[				StructHeader				{					StructString name = "main"					StructArray tools					{						ArrayStruct						[							StructHeader							{								StructString name = "sustain_event"								StructQBKey type = event_listener								StructQBKey got_event = qp_sustain_time_main_sustain_event								StructQBKey callback_mode = any								StructArray events								{									ArrayQBKey									[										whammy_onp1										whammy_onp2										whammy_onp3										whammy_onp4										whammy_offp1										whammy_offp2										whammy_offp3										whammy_offp4									]								}							}							StructHeader							{								StructString name = "sustain_event_drums"								StructQBKey type = event_listener								StructQBKey got_event = qp_sustain_time_main_sustain_event_drums								StructQBKey callback_mode = any								StructArray events								{									ArrayQBKey									[										drumsustain_startscorep1										drumsustain_startscorep2										drumsustain_startscorep3										drumsustain_startscorep4										drumsustain_stopscorep1										drumsustain_stopscorep2										drumsustain_stopscorep3										drumsustain_stopscorep4									]								}							}							StructHeader							{								StructString name = "timer"								StructQBKey type = timer								StructInt start_time = 0								StructInt end_time = 600								StructQBKey dont_start_on_enter								StructQBKey dont_show_on_enter								StructQBKey dont_show_expire_message								StructQBKey tic = qp_sustain_time_main_timer_tic								StructInt tic_interval_ms = 10								StructQBKey is_song_timer							}							StructHeader							{								StructString name = "whammy_watcher"								StructQBKey var_updated = qp_sustain_time_main_whammy_watcher								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = playerinfo											StructQBKey var = whammy_control											StructQBKey type = float										}																		]								}							}							StructHeader							{								StructString name = "progress_watcher"								StructQBKey type = var_watcher								StructQBKey var_updated = challenge_qp_evaluate_progress								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = goalplayerdata											StructQBKey var = current_progress											StructQBKey type = float										}																		]								}							}							StructHeader							{								StructString name = "section_watcher"								StructQBKey type = section_watcher							}												]					}				}						]		}	}}Script qp_sustain_time_main_sustain_event ed653347 [	:i %GLOBAL%$player$ = (%GLOBAL%$event_data$->$player$)	:i if NOT $challenge_qp_current_section_is_valid$$goal_id$ = %GLOBAL%$goal_id$		:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$hitting_sustain_note$ = %i(0):s}		:i $qp_sustain_time_stop_timer$$goal_id$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$		:i return 	:i endif	:i $FormatText$$checksumname$ = $whammy_off$%s("whammy_offp%t")$t$ = %GLOBAL%$player$	:i $FormatText$$checksumname$ = $whammy_on$%s("whammy_onp%t")$t$ = %GLOBAL%$player$	:i switch %GLOBAL%$event$		:i case (%GLOBAL%$whammy_on$)			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$hitting_sustain_note$ = %i(1):s}			:i $GMan_GetConstant$$goal$ = %GLOBAL%$goal_id$$name$ = $required_modifier$$return_name$ = $required_modifier$			:i if NOT (%GLOBAL%$required_modifier$ = $whammy$)				:i $GMan_TimerFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $timer$$func$ = $start$			:i endif			:i endcase		case (%GLOBAL%$whammy_off$)			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$hitting_sustain_note$ = %i(0):s}			:i $qp_sustain_time_stop_timer$$goal_id$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$	:i end_switch	:i endfunction]Script qp_sustain_time_main_sustain_event_drums 0x895fd4a8 [	:i %GLOBAL%$player$ = (%GLOBAL%$assigned_player$)	:i $FormatText$$checksumname$ = $whammy_off$%s("whammy_offp%t")$t$ = %GLOBAL%$player$	:i $FormatText$$checksumname$ = $whammy_on$%s("whammy_onp%t")$t$ = %GLOBAL%$player$	:i $FormatText$$checksumname$ = $drumsustain_startscore$%s("drumsustain_startscorep%t")$t$ = %GLOBAL%$player$	:i $FormatText$$checksumname$ = $drumsustain_stopscore$%s("drumsustain_stopscorep%t")$t$ = %GLOBAL%$player$	:i switch %GLOBAL%$event$		:i case (%GLOBAL%$drumsustain_startscore$)			:i %GLOBAL%$event$ = (%GLOBAL%$whammy_on$)			:i endcase		case (%GLOBAL%$drumsustain_stopscore$)			:i %GLOBAL%$event$ = (%GLOBAL%$whammy_off$)	:i end_switch	:i $qp_sustain_time_main_sustain_event$ isNull 	:i endfunction]Script qp_sustain_time_stop_timer 0x318fbd63 [	${		StructInt player = -1		StructQBKey goal_id = null	}$		:i $FormatText$$checksumname$ = $timeout_script_id$%s("whammy_timeout_%t")$t$ = %GLOBAL%$player$	:i $KillSpawnedScript$$id$ = %GLOBAL%$timeout_script_id$	:i $GMan_TimerFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $timer$$func$ = $stop$	:i endfunction]Script qp_sustain_time_main_timer_tic 0x045390af [	:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$assigned_player$$params$ = :s{$current_progress$ = %GLOBAL%$time_ms$:s}	:i endfunction]Script qp_sustain_time_main_whammy_watcher 0x6c584dfb [	:i $GMan_GetConstant$$goal$ = %GLOBAL%$goal_id$$name$ = $required_modifier$$return_name$ = $required_modifier$	:i if NOT (%GLOBAL%$required_modifier$ = $whammy$)		:i return 	:i endif	:i if NOT $challenge_qp_current_section_is_valid$$goal_id$ = %GLOBAL%$goal_id$		:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$hitting_sustain_note$ = %i(0):s}		:i $qp_sustain_time_stop_timer$$goal_id$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$		:i return 	:i endif	:i $FormatText$$checksumname$ = $timeout_script_id$%s("whammy_timeout_%t")$t$ = %GLOBAL%$player$	:i $getplayerinfo$%GLOBAL%$player$$is_local_client$	:i if (%GLOBAL%$is_local_client$ = %i(0))		:i return 	:i endif	:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $hitting_sustain_note$	:i if (%GLOBAL%$hitting_sustain_note$ = %i(1))		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $old_whammy_pos$		:i if ((%GLOBAL%$current_value$ > (%GLOBAL%$old_whammy_pos$ + %f(0.1000000))) OR (%GLOBAL%$current_value$ < (%GLOBAL%$old_whammy_pos$ - %f(0.1000000))))			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$old_whammy_pos$ = %GLOBAL%$current_value$:s}			:i $GMan_TimerFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $timer$$func$ = $start$			:i $KillSpawnedScript$$id$ = %GLOBAL%$timeout_script_id$			:i $spawnscriptnow$$qp_sustain_time_main_whammy_timeout$$params$ = :s{$player$ = %GLOBAL%$player$$goal_id$ = %GLOBAL%$goal_id$:s}$id$ = %GLOBAL%$timeout_script_id$			:i return 		:i endif	:i else 		:i $GMan_TimerFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $timer$$func$ = $stop$		:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$old_whammy_pos$ = %i(0):s}	:i endif	:i endfunction]Script qp_sustain_time_main_whammy_timeout 0x2aabd74c [	:i $wait$${		StructFloat 0.10000000149011612		StructQBKey second	}$		:i if $GMan_GoalIsActive$$goal$ = %GLOBAL%$goal_id$		:i $GMan_TimerFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $timer$$func$ = $stop$		:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$old_whammy_pos$ = %i(0):s}	:i endif	:i endfunction]Script qp_sustain_time_display_seconds_conversion 0x9be0bfed [	:i $out_score$ = (%GLOBAL%$Score$ * %f(0.0010000))	:i return $Score$ = %GLOBAL%$out_score$	:i endfunction]