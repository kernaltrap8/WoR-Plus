Unknown [1c0000000000000000002f2c0000000000000000]Script challenge_qp_calculate_current_progress be8035b4 [	${		StructQBKey goal_id = null		StructInt player = -1		StructInt current_value = 0		StructQBKey var_type = null	}$		:i if $GMan_SectionWatcherFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $section_watcher$$func$ = $in_watched_section$		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $section_base_value$		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $previous_progress$		:i if (%GLOBAL%$var_type$ = $incremental$)			:i %GLOBAL%$current_progress$ = (%GLOBAL%$current_value$ + %GLOBAL%$previous_progress$)		:i else 			:i %GLOBAL%$current_progress$ = (%GLOBAL%$current_value$ - %GLOBAL%$section_base_value$ + %GLOBAL%$previous_progress$)		:i endif	:i else 		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $current_progress$		:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$section_base_value$ = %GLOBAL%$current_value$$previous_progress$ = %GLOBAL%$current_progress$:s}	:i endif	:i return $current_progress$ = %GLOBAL%$current_progress$	:i endfunction]Script challenge_qp_calculate_total_band_progress 0x951a8583 [	${StructQBKey goal_id = null}$	:i %GLOBAL%$total_band_progress$ = %i(0)	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(1))		:i $GetFirstPlayer$		:i while 		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $current_progress$		:i %GLOBAL%$total_band_progress$ = (%GLOBAL%$total_band_progress$ + %GLOBAL%$current_progress$)		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i return $total_band_progress$ = %GLOBAL%$total_band_progress$	:i endfunction]Script challenge_qp_current_section_is_valid dd396dd7 [	${StructQBKey goal_id = null}$	:i if $GMan_SectionWatcherFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $section_watcher$$func$ = $in_watched_section$		:i return ${StructQBKey true}$	:i else 		:i return ${StructQBKey false}$	:i endif	:i endfunction]Script challenge_qp_evaluate_progress 0x86a5d814 [	${		StructInt current_value = 0		StructQBKey goal_id = null		StructInt player = 0	}$		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $calculated_targets$	:i if (%GLOBAL%$current_value$ >= (%GLOBAL%$calculated_targets$:a{%i(2):a}))		:i %GLOBAL%$new_grade$ = %i(3)	:i elseif (%GLOBAL%$current_value$ >= (%GLOBAL%$calculated_targets$:a{%i(1):a}))		:i %GLOBAL%$new_grade$ = %i(2)	:i elseif (%GLOBAL%$current_value$ >= (%GLOBAL%$calculated_targets$:a{%i(0):a}))		:i %GLOBAL%$new_grade$ = %i(1)	:i else 		:i %GLOBAL%$new_grade$ = %i(0)	:i endif	:i if (%GLOBAL%$new_grade$ > %i(0))		:i $quickplay_get_grade$$goal_id$ = %GLOBAL%$goal_id$		:i if (%GLOBAL%$new_grade$ > %GLOBAL%$pending_grade$)			:i $GMan_SetPendingGrade$$goal$ = %GLOBAL%$goal_id$$grade$ = %GLOBAL%$new_grade$			:i $orig_player$ = %GLOBAL%$player$			:i if (%GLOBAL%$player$ < %i(1))				:i $player$ = (~$g_leader_player_num$)			:i endif			:i if (%GLOBAL%$player$ > %i(0))				:i $Playlist_GetCurrentSong$				:i $GMan_GetGoalName$$goal$ = %GLOBAL%$goal_id$				:i $GMan_GetQPSaveChecksums$$song$ = %GLOBAL%$current_song$$goal_name$ = %GLOBAL%$goal_name$$assigned_player$ = %GLOBAL%$player$				:i $getplayerinfo$%GLOBAL%$player$$bot_play$				:i if (%GLOBAL%$bot_play$ = %i(1))					:i $getplayerinfo$%GLOBAL%$player$$bot_original_controller$					:i %GLOBAL%$controller$ = %GLOBAL%$bot_original_controller$				:i else 					:i $getplayerinfo$%GLOBAL%$player$$controller$				:i endif				:i $GetSavegameFromController$$controller$ = %GLOBAL%$controller$				:i $GetGlobalTags$$savegame$ = %GLOBAL%$savegame$%GLOBAL%$current_song$				:i if (%GLOBAL%$new_grade$ > isNull ->%GLOBAL%$grade_checksum$)					:i $GetGlobalTags$$savegame$ = %GLOBAL%$savegame$$user_options$$param$ = $show_challenge_icons_save$					:i if (%GLOBAL%$show_challenge_icons_save$ = %i(1))						:i $add_quickplay_challenge_alert$:s{$challenge_instance_id$ = %GLOBAL%$goal_id$$grade$ = %GLOBAL%$new_grade$:s}					:i endif				:i endif			:i else 				:i $printf$%s("WARNING: Leader Player Number (%p) is INVALID (challenge_qp_evaluate_progress)")$p$ = %GLOBAL%$player$			:i endif			:i if NOT $cd$				:i $challenge_store_grade_mark$$player$ = %GLOBAL%$orig_player$$goal_id$ = %GLOBAL%$goal_id$$grade$ = %GLOBAL%$new_grade$			:i endif		:i endif	:i endif	:i endfunction]Script challenge_store_grade_mark 0x9dab0f9e [	${		StructInt player = -1		StructQBKey goal_id = null		StructInt grade = 0	}$		:i $GetSongTime$	:i $Playlist_GetCurrentSong$	:i %GLOBAL%$song_info$ = ((~$gh_songlist_props$)->%GLOBAL%$current_song$)	:i %GLOBAL%$song_progress$ = ((%GLOBAL%$songtime$ / (%GLOBAL%$song_info$->$duration$ + %i(5))) * %i(100))	:i if (%GLOBAL%$player$ > %i(0))		:i switch %GLOBAL%$grade$			:i case %i(1)				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$gold_mark$ = %GLOBAL%$song_progress$:s}				:i endcase			case %i(2)				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$platinum_mark$ = %GLOBAL%$song_progress$:s}				:i endcase			case %i(3)				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$diamond_mark$ = %GLOBAL%$song_progress$:s}				:i endcase			default 				:i $printf$${					StructQBKey channel = challenge_info					StructString 0x00000000 = "passed invalid grade to challenge_store_grade_time"				}$						:i end_switch	:i else 		:i switch %GLOBAL%$grade$			:i case %i(1)				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$gold_mark$ = %GLOBAL%$song_progress$:s}				:i endcase			case %i(2)				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$platinum_mark$ = %GLOBAL%$song_progress$:s}				:i endcase			case %i(3)				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$diamond_mark$ = %GLOBAL%$song_progress$:s}				:i endcase			default 				:i $printf$${					StructQBKey channel = challenge_info					StructString 0x00000000 = "passed invalid grade to challenge_store_grade_time"				}$						:i end_switch	:i endif	:i endfunction]Script challenge_is_band_subtype 0x7dfd9659 [	${StructQBKey goal_id = null}$	:i $GMan_GetGoalSubtype$$goal$ = %GLOBAL%$goal_id$	:i $GMan_GetAssignedPlayer$$goal_name$ = %GLOBAL%$goal_id$	:i if (%GLOBAL%$goal_subtype$ = $band$)		:i if (%GLOBAL%$assigned_player$ = %i(0))			:i return ${StructQBKey true}$		:i else 			:i $scriptassert$%s("Quickplay Challenge [%c] assigned to a band that is not a band variant!")$c$ = %GLOBAL%$goal_id$		:i endif	:i else 		:i return ${StructQBKey false}$	:i endif	:i endfunction]SectionArray g_qp_autotest_stats{	Floats [0.00000, 0.00000]}SectionInteger g_qp_autotest_failed 0Script challenge_output_grade_marks 0x6ca38767 [	${		StructQBKey goal_id = null		StructInt assigned_player = 1	}$		:i if $cd$		:i return 	:i endif	:i if (~$autotest_on$ = %i(0))		:i return 	:i endif	:i $wait$${		StructInt 1		StructQBKey second	}$		:i $player$ = %GLOBAL%$assigned_player$	:i %GLOBAL%$gold_mark$ = %i(0)	:i %GLOBAL%$platinum_mark$ = %i(0)	:i %GLOBAL%$diamond_mark$ = %i(0)	:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $calculated_targets$	:i %GLOBAL%$gold_target$ = (%GLOBAL%$calculated_targets$:a{%i(0):a})	:i %GLOBAL%$platinum_target$ = (%GLOBAL%$calculated_targets$:a{%i(1):a})	:i %GLOBAL%$diamond_target$ = (%GLOBAL%$calculated_targets$:a{%i(2):a})	:i $GMan_GetAssignedPlayer$$goal_name$ = %GLOBAL%$goal_id$	:i $Playlist_GetCurrentSong$	:i if (%GLOBAL%$assigned_player$ > %i(0))		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$assigned_player$		:i $getplayerinfo$%GLOBAL%$assigned_player$$part$		:i $getplayerinfo$%GLOBAL%$assigned_player$$difficulty$		:i $getAvgMultiplierFromDetailedStats$$player$ = %GLOBAL%$assigned_player$		:i $get_percent_notes_hit$$player_index$ = %GLOBAL%$assigned_player$	:i else 		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$		:i %GLOBAL%$part$ = $band$		:i %GLOBAL%$difficulty$ = $None$		:i $GetFirstPlayer$		:i $getplayerinfo$%GLOBAL%$player$$band$		:i $avg_multiplier$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$high_mult$)		:i $get_percent_notes_hit_for_band$$band$ = %GLOBAL%$band$		:i $player$ = %i(0)	:i endif	:i $stats_struct$ = :s{		:i $name$ = %GLOBAL%$goal_id$		:i $player$ = %GLOBAL%$assigned_player$		:i $current_song$ = %GLOBAL%$current_song$		:i $part$ = %GLOBAL%$part$		:i $difficulty$ = %GLOBAL%$difficulty$		:i $gold_target$ = %GLOBAL%$gold_target$		:i $gold_mark$ = %GLOBAL%$gold_mark$		:i $platinum_target$ = %GLOBAL%$platinum_target$		:i $platinum_mark$ = %GLOBAL%$platinum_mark$		:i $diamond_target$ = %GLOBAL%$diamond_target$		:i $diamond_mark$ = %GLOBAL%$diamond_mark$		:i $final_progress$ = %GLOBAL%$current_progress$		:i $avg_mult$ = %GLOBAL%$avg_multiplier$		:i $percent_notes_hit$ = %GLOBAL%$percent_notes_hit$	:i :s}	:i $printstruct$$channel$ = $challenge_info$%GLOBAL%$stats_struct$	:i $printf$$channel$ = $challenge_info_csv$%s("%s, %r, %y, %p, %c, %g, %a, %n, %b, %d, %e, %t, %j")$s$ = %GLOBAL%$current_song$$r$ = %GLOBAL%$part$$y$ = %GLOBAL%$difficulty$$p$ = %GLOBAL%$assigned_player$$c$ = %GLOBAL%$goal_id$$g$ = %GLOBAL%$gold_target$$a$ = %GLOBAL%$gold_mark$$n$ = %GLOBAL%$platinum_target$$b$ = %GLOBAL%$platinum_mark$$d$ = %GLOBAL%$diamond_target$$e$ = %GLOBAL%$diamond_mark$$t$ = %GLOBAL%$current_progress$$j$ = %GLOBAL%$percent_notes_hit$	:i if (~$autotest_on$ = %i(1))		:i $temp_stats$ = (~$g_qp_autotest_stats$)		:i $AddArrayElement$$array$ = %GLOBAL%$temp_stats$$element$ = %GLOBAL%$stats_struct$		:i $change$$g_qp_autotest_stats$ = %GLOBAL%$array$		:i if (%GLOBAL%$difficulty$ = $easy$)			:i $test_target_progress$ = %i(0)		:i elseif (%GLOBAL%$difficulty$ = $medium$)			:i $test_target_progress$ = %GLOBAL%$gold_target$		:i elseif (%GLOBAL%$difficulty$ = $hard$)			:i $test_target_progress$ = %GLOBAL%$platinum_target$		:i elseif (%GLOBAL%$difficulty$ = $expert$)			:i $test_target_progress$ = %GLOBAL%$diamond_target$		:i else 			:i $test_target_progress$ = %i(0)		:i endif		:i if (%GLOBAL%$current_progress$ < %GLOBAL%$test_target_progress$)			:i $change$${StructInt g_qp_autotest_failed = 1}$		:i endif	:i endif	:i endfunction]Script quickplay_autotest_write_log 0x4149e742 [	:i $GetArraySize$(~$g_qp_autotest_stats$)	:i if (%GLOBAL%$array_size$ = %i(0))		:i $printf$${StructString 0x00000000 = "Quickplay Autotest - No challenge stats found, something went horribly wrong!"}$		:i return 	:i endif	:i $first_challenge_stat$ = (~$g_qp_autotest_stats$:a{%i(0):a})	:i $current_song$ = (%GLOBAL%$first_challenge_stat$->$current_song$)	:i if $StructureContains$$structure$ = ((~$gh_songlist_props$)->%GLOBAL%$current_song$)$allowed_in_quickplay$		:i if (((~$gh_songlist_props$)->%GLOBAL%$current_song$)->$allowed_in_quickplay$ = %i(0))			:i return 		:i endif	:i endif	:i if (~$g_qp_autotest_failed$ = %i(1))		:i $FormatText$$textname$ = $filename$%s("%a")$a$ = %GLOBAL%$song_name$$DontAssertForChecksums$		:i $FormatText$$textname$ = $csv_filename$%s("%a_CSV")$a$ = %GLOBAL%$song_name$$DontAssertForChecksums$	:i else 		:i $FormatText$$textname$ = $filename$%s("%a")$a$ = %GLOBAL%$song_name$$DontAssertForChecksums$		:i $FormatText$$textname$ = $csv_filename$%s("%a_CSV")$a$ = %GLOBAL%$song_name$$DontAssertForChecksums$	:i endif	:i $TextOutputStart$$filename$ = %GLOBAL%$filename$	:i $GetLocalSystemTime$	:i $FormatText$:s{		:i $textname$ = $temp_text$		:i ^[1085b745]^		:i $a$ = (%GLOBAL%$localsystemtime$->$month$ + %i(1))		:i $b$ = (%GLOBAL%$localsystemtime$->$dayofmonth$)		:i $c$ = (%GLOBAL%$localsystemtime$->$year$)		:i $d$ = (%GLOBAL%$localsystemtime$->$hour$)		:i $e$ = (%GLOBAL%$localsystemtime$->$minute$)	:i :s}	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i if (~$g_qp_autotest_failed$ = %i(1))		:i $TextOutput$${StructQBStringQs text = 0x89610145}$		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i else 		:i $TextOutput$${StructQBStringQs text = a2689597}$		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i endif	:i $i$ = %i(0)	:i while 	:i $challenge_stats$ = (~$g_qp_autotest_stats$:a{%GLOBAL%$i$:a})	:i if ((%GLOBAL%$challenge_stats$->$difficulty$) = $easy$)		:i $test_target_progress$ = %i(0)	:i elseif ((%GLOBAL%$challenge_stats$->$difficulty$) = $medium$)		:i $test_target_progress$ = (%GLOBAL%$challenge_stats$->$gold_target$)	:i elseif ((%GLOBAL%$challenge_stats$->$difficulty$) = $hard$)		:i $test_target_progress$ = (%GLOBAL%$challenge_stats$->$platinum_target$)	:i elseif ((%GLOBAL%$challenge_stats$->$difficulty$) = $expert$ OR (%GLOBAL%$challenge_stats$->$difficulty$) = $None$)		:i $test_target_progress$ = (%GLOBAL%$challenge_stats$->$diamond_target$)	:i else 		:i $test_target_progress$ = %i(0)	:i endif	:i if ((%GLOBAL%$challenge_stats$->$final_progress$) >= %GLOBAL%$test_target_progress$)		:i $FormatText$$textname$ = $temp_text$^[3435a984]^$a$ = (%GLOBAL%$challenge_stats$->$name$)$DontAssertForChecksums$		:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i else 		:i $FormatText$$textname$ = $temp_text$^[c734bd57]^$a$ = (%GLOBAL%$challenge_stats$->$name$)$DontAssertForChecksums$		:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i endif	:i $FormatText$$textname$ = $temp_text$^[c1a656dc]^$a$ = (%GLOBAL%$challenge_stats$->$name$)$DontAssertForChecksums$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[617df3ff]^$a$ = (%GLOBAL%$challenge_stats$->$current_song$)$DontAssertForChecksums$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[46a5881b]^$a$ = (%GLOBAL%$challenge_stats$->$part$)$DontAssertForChecksums$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[0bbe44ff]^$a$ = (%GLOBAL%$challenge_stats$->$difficulty$)$DontAssertForChecksums$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[d6d46fdf]^$a$ = (%GLOBAL%$challenge_stats$->$player$)$DontAssertForChecksums$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i if ((%GLOBAL%$challenge_stats$->$gold_mark$) = %i(0))		:i $FormatText$$textname$ = $temp_text$^[2ca488f6]^$a$ = (%GLOBAL%$challenge_stats$->$gold_target$)$decimalplaces$ = %i(2)$usecommas$	:i else 		:i $FormatText$$textname$ = $temp_text$^[748be1d5]^$a$ = (%GLOBAL%$challenge_stats$->$gold_target$)$b$ = (%GLOBAL%$challenge_stats$->$gold_mark$)$decimalplaces$ = %i(2)$usecommas$	:i endif	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i if ((%GLOBAL%$challenge_stats$->$platinum_mark$) = %i(0))		:i $FormatText$$textname$ = $temp_text$^[bc03063b]^$a$ = (%GLOBAL%$challenge_stats$->$platinum_target$)$decimalplaces$ = %i(2)$usecommas$	:i else 		:i $FormatText$$textname$ = $temp_text$^[2d61cfc4]^$a$ = (%GLOBAL%$challenge_stats$->$platinum_target$)$b$ = (%GLOBAL%$challenge_stats$->$platinum_mark$)$decimalplaces$ = %i(2)$usecommas$	:i endif	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i if ((%GLOBAL%$challenge_stats$->$diamond_mark$) = %i(0))		:i $FormatText$$textname$ = $temp_text$^[97cfee87]^$a$ = (%GLOBAL%$challenge_stats$->$diamond_target$)$decimalplaces$ = %i(2)$usecommas$	:i else 		:i $FormatText$$textname$ = $temp_text$^[0496dfcf]^$a$ = (%GLOBAL%$challenge_stats$->$diamond_target$)$b$ = (%GLOBAL%$challenge_stats$->$diamond_mark$)$decimalplaces$ = %i(2)$usecommas$	:i endif	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $FormatText$$textname$ = $temp_text$^[561df95b]^$a$ = (%GLOBAL%$challenge_stats$->$final_progress$)$usecommas$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i if (%GLOBAL%$challenge_stats$->$player$ = %i(0))		:i $FormatText$$textname$ = $temp_text$^[40fe5221]^$a$ = (%GLOBAL%$challenge_stats$->$avg_mult$)$decimalplaces$ = %i(2)	:i else 		:i $FormatText$$textname$ = $temp_text$^[6ecd4547]^$a$ = (%GLOBAL%$challenge_stats$->$avg_mult$)$decimalplaces$ = %i(2)	:i endif	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[a15be774]^$a$ = (%GLOBAL%$challenge_stats$->$percent_notes_hit$)	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i $TextOutputEnd$$output_text$$filename$ = %GLOBAL%$filename$	:i $TextOutputStart$$filename$ = %GLOBAL%$csv_filename$	:i $GetLocalSystemTime$	:i $i$ = %i(0)	:i while 	:i $challenge_stats$ = (~$g_qp_autotest_stats$:a{%GLOBAL%$i$:a})	:i $FormatText$$textname$ = $csv_data$:s{		:i ^[3ee47ae3]^		:i $p$ = (%GLOBAL%$localsystemtime$->$month$ + %i(1))		:i $q$ = (%GLOBAL%$localsystemtime$->$dayofmonth$)		:i $r$ = (%GLOBAL%$localsystemtime$->$year$)		:i $s$ = (%GLOBAL%$localsystemtime$->$hour$)		:i $t$ = (%GLOBAL%$localsystemtime$->$minute$)		:i $a$ = (%GLOBAL%$challenge_stats$->$name$)		:i $b$ = (%GLOBAL%$challenge_stats$->$current_song$)		:i $c$ = (%GLOBAL%$challenge_stats$->$part$)		:i $d$ = (%GLOBAL%$challenge_stats$->$difficulty$)		:i $e$ = (%GLOBAL%$challenge_stats$->$player$)		:i $f$ = (%GLOBAL%$challenge_stats$->$gold_target$)		:i $g$ = (%GLOBAL%$challenge_stats$->$gold_mark$)		:i $h$ = (%GLOBAL%$challenge_stats$->$platinum_target$)		:i $i$ = (%GLOBAL%$challenge_stats$->$platinum_mark$)		:i $j$ = (%GLOBAL%$challenge_stats$->$diamond_target$)		:i $k$ = (%GLOBAL%$challenge_stats$->$diamond_mark$)		:i $l$ = (%GLOBAL%$challenge_stats$->$final_progress$)		:i $m$ = (%GLOBAL%$challenge_stats$->$avg_mult$)		:i $n$ = (%GLOBAL%$challenge_stats$->$percent_notes_hit$)		:i $DontAssertForChecksums$	:i :s}	:i $TextOutput$$text$ = %GLOBAL%$csv_data$	:i $i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i $TextOutputEnd$$output_text$$filename$ = %GLOBAL%$csv_filename$	:i endfunction]Script career_autotest_write_log d6fea7f6 [	:i $Playlist_GetCurrentSong$	:i $FormatText$$textname$ = $filename$%s("%a")$a$ = %GLOBAL%$current_song$$DontAssertForChecksums$	:i $FormatText$$textname$ = $csv_filename$%s("%a_CSV")$a$ = %GLOBAL%$current_song$$DontAssertForChecksums$	:i $TextOutputStart$$filename$ = %GLOBAL%$filename$	:i $GetLocalSystemTime$	:i $FormatText$:s{		:i $textname$ = $temp_text$		:i ^[1085b745]^		:i $a$ = (%GLOBAL%$localsystemtime$->$month$ + %i(1))		:i $b$ = (%GLOBAL%$localsystemtime$->$dayofmonth$)		:i $c$ = (%GLOBAL%$localsystemtime$->$year$)		:i $d$ = (%GLOBAL%$localsystemtime$->$hour$)		:i $e$ = (%GLOBAL%$localsystemtime$->$minute$)	:i :s}	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $TextOutput$${StructQBStringQs text = cfdd656c}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $FormatText$$textname$ = $temp_text$^[617df3ff]^$a$ = %GLOBAL%$current_song$$DontAssertForChecksums$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $judy_stars_cur$ = %i(0)	:i $judy_stars_max$ = %i(0)	:i $axel_stars_cur$ = %i(0)	:i $axel_stars_max$ = %i(0)	:i $casey_stars_cur$ = %i(0)	:i $casey_stars_max$ = %i(0)	:i $johny_stars_cur$ = %i(0)	:i $johny_stars_max$ = %i(0)	:i $autotest_powers$ = (~$g_autotest_career_powers$)	:i $GetArraySize$%GLOBAL%$autotest_powers$$param$ = $num_powers$	:i $power_index$ = %i(0)	:i $TextOutput$${StructQBStringQs text = b12af73a}$	:i $TextOutput$${StructQBStringQs text = 0x8e59c26b}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $GetFirstPlayer$	:i while 	:i $getplayerinfo$%GLOBAL%$player$$band$	:i $current_power$ = (%GLOBAL%$autotest_powers$:a{%GLOBAL%$power_index$:a})	:i if (%GLOBAL%$current_power$->$level$ !== %i(0))		:i $FormatText$$textname$ = $temp_text$^[97393b35]^$a$ = (%GLOBAL%$current_power$->$power$)$b$ = (%GLOBAL%$current_power$->$level$)$DontAssertForChecksums$		:i $TextOutput$$text$ = %GLOBAL%$temp_text$		:i switch (%GLOBAL%$current_power$->$power$)			:i case $GH_Rocker_Judy$				:i $GetBandInfo$%GLOBAL%$band$$crowd_meter_bonus_stars$				:i $judy_stars_cur$ = %GLOBAL%$crowd_meter_bonus_stars$				:i if (%GLOBAL%$current_power$->$level$ = %i(1))					:i $judy_stars_max$ = (~$g_crowd_meter_star_bonus_max_1$)					:i $FormatText$$textname$ = $temp_text$^[a9d5efbb]^$a$ = %GLOBAL%$crowd_meter_bonus_stars$$b$ = (~$g_crowd_meter_star_bonus_max_1$)				:i else 					:i $judy_stars_max$ = (~$g_crowd_meter_star_bonus_max_2$)					:i $FormatText$$textname$ = $temp_text$^[a9d5efbb]^$a$ = %GLOBAL%$crowd_meter_bonus_stars$$b$ = (~$g_crowd_meter_star_bonus_max_2$)				:i endif				:i $TextOutput$$text$ = %GLOBAL%$temp_text$				:i endcase			case $GH_Rocker_Axel$				:i $GetBandInfo$%GLOBAL%$band$$used_resurrection_lives$				:i $GetBandInfo$%GLOBAL%$band$$max_resurrection_lives$				:i $axel_stars_cur$ = (%GLOBAL%$max_resurrection_lives$ - %GLOBAL%$used_resurrection_lives$)				:i $axel_stars_max$ = %GLOBAL%$max_resurrection_lives$				:i $FormatText$$textname$ = $temp_text$^[78298375]^$a$ = %GLOBAL%$axel_stars_cur$$b$ = %GLOBAL%$max_resurrection_lives$				:i $TextOutput$$text$ = %GLOBAL%$temp_text$				:i endcase			case $GH_Rocker_Casey$				:i $GetBandInfo$%GLOBAL%$band$$streak_bonus_stars$				:i $casey_stars_cur$ = %GLOBAL%$streak_bonus_stars$				:i if (%GLOBAL%$current_power$->$level$ = %i(1))					:i $GetArraySize$(~$g_casey_notestreak_thresholds_1$)					:i $casey_stars_max$ = %GLOBAL%$array_size$				:i else 					:i $GetArraySize$(~$g_casey_notestreak_thresholds_2$)					:i $casey_stars_max$ = %GLOBAL%$array_size$				:i endif				:i $FormatText$$textname$ = $temp_text$^[d6af51ed]^$a$ = %GLOBAL%$streak_bonus_stars$$b$ = %GLOBAL%$array_size$				:i $TextOutput$$text$ = %GLOBAL%$temp_text$				:i endcase			case $gh_rocker_Casey_2$				:i $GetBandInfo$%GLOBAL%$band$$streak_bonus_stars$				:i $GetArraySize$(~$g_casey_notestreak_thresholds_2$)				:i $casey_stars_cur$ = %GLOBAL%$streak_bonus_stars$				:i $casey_stars_max$ = %GLOBAL%$array_size$				:i endcase			case $GH_Rocker_Johnny$				:i $GetBandInfo$%GLOBAL%$band$$mult_timer_bonus_stars$				:i $johny_stars_cur$ = %GLOBAL%$mult_timer_bonus_stars$				:i if (%GLOBAL%$current_power$->$level$ = %i(1))					:i $johny_stars_max$ = (~$g_multiplier_star_bonus_max_1$)					:i $FormatText$$textname$ = $temp_text$^[83322d2e]^$a$ = %GLOBAL%$mult_timer_bonus_stars$$b$ = (~$g_multiplier_star_bonus_max_1$)				:i else 					:i $johny_stars_max$ = (~$g_multiplier_star_bonus_max_2$)					:i $FormatText$$textname$ = $temp_text$^[83322d2e]^$a$ = %GLOBAL%$mult_timer_bonus_stars$$b$ = (~$g_multiplier_star_bonus_max_2$)				:i endif				:i $TextOutput$$text$ = %GLOBAL%$temp_text$		:i end_switch		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i endif	:i $power_index$ = (%GLOBAL%$power_index$ + %i(1))	:i loop_to %GLOBAL%$num_powers$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i if (~$g_autotest_career_target_stars$ > %i(0))		:i $TextOutput$${StructQBStringQs text = b12af73a}$		:i if (~$g_autotest_career_target_hit$ > %i(0))			:i $FormatText$$textname$ = $temp_text$^[ecc3e979]^$a$ = (~$g_autotest_career_target_stars$)$b$ = (~$g_autotest_career_target_hit$ * %i(100))$decimalplaces$ = %i(0)		:i else 			:i $FormatText$$textname$ = $temp_text$^[f8a80ba2]^$a$ = (~$g_autotest_career_target_stars$)		:i endif		:i $TextOutput$$text$ = %GLOBAL%$temp_text$		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i endif	:i $GetNumPlayersInGame$	:i $GetFirstPlayer$	:i $TextOutput$${StructQBStringQs text = b12af73a}$	:i $TextOutput$${StructQBStringQs text = c8e84f5a}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $getplayerinfo$%GLOBAL%$player$$band$	:i $band_score$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$Score$)	:i $CastToInteger$${StructQBKey band_score}$	:i $FormatText$$textname$ = $temp_text$^[02af8dde]^$a$ = %GLOBAL%$band_score$$usecommas$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[f85aef1a]^$a$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$stars$)	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[6367938c]^$a$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$high_mult$)$decimalplaces$ = %i(1)	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[a6d78276]^$a$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$band_moments_hit$)$b$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$band_moments_possible$)	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $player_data$ = :a{		:i :s{			:i $part$ = $None$			:i $diff$ = $None$			:i $Score$ = %i(0)			:i $stars$ = %i(0)			:i $mult$ = %i(0)			:i $acc$ = %i(0)		:i :s}		:i :s{			:i $part$ = $None$			:i $diff$ = $None$			:i $Score$ = %i(0)			:i $stars$ = %i(0)			:i $mult$ = %i(0)			:i $acc$ = %i(0)		:i :s}		:i :s{			:i $part$ = $None$			:i $diff$ = $None$			:i $Score$ = %i(0)			:i $stars$ = %i(0)			:i $mult$ = %i(0)			:i $acc$ = %i(0)		:i :s}		:i :s{			:i $part$ = $None$			:i $diff$ = $None$			:i $Score$ = %i(0)			:i $stars$ = %i(0)			:i $mult$ = %i(0)			:i $acc$ = %i(0)		:i :s}	:i :a}	:i $TextOutput$${StructQBStringQs text = b12af73a}$	:i $TextOutput$${StructQBStringQs text = a52fef73}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i while 	:i $Data$ = (%GLOBAL%$player_data$:a{%GLOBAL%$player$%i(4294967295):a})	:i $song_stats$ = (~$song_stats_backup$:a{%GLOBAL%$player$ - %i(1):a})	:i $FormatText$$textname$ = $temp_text$^[d6d46fdf]^$a$ = %GLOBAL%$player$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i $FormatText$$textname$ = $temp_text$^[46a5881b]^$a$ = %GLOBAL%$part$$DontAssertForChecksums$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $getplayerinfo$%GLOBAL%$player$$difficulty$	:i $FormatText$$textname$ = $temp_text$^[0bbe44ff]^$a$ = %GLOBAL%$difficulty$$DontAssertForChecksums$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[374c819b]^$a$ = (%GLOBAL%$song_stats$->$Score$)$usecommas$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $getplayerinfo$%GLOBAL%$player$$projected_song_stars$	:i $FormatText$$textname$ = $temp_text$^[7eca0126]^$a$ = %GLOBAL%$projected_song_stars$$decimalplaces$ = %i(1)	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $FormatText$$textname$ = $temp_text$^[6ecd4547]^$a$ = (%GLOBAL%$song_stats$->$avg_multiplier$)$decimalplaces$ = %i(1)	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $get_percent_notes_hit$$player_index$ = %GLOBAL%$player$	:i $FormatText$$textname$ = $temp_text$^[a15be774]^$a$ = %GLOBAL%$percent_notes_hit$	:i $TextOutput$$text$ = %GLOBAL%$temp_text$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $Data$ = :s{		:i $part$ = %GLOBAL%$part$		:i $diff$ = %GLOBAL%$difficulty$		:i $Score$ = (%GLOBAL%$song_stats$->$Score$)		:i $stars$ = %GLOBAL%$projected_song_stars$		:i $mult$ = (%GLOBAL%$song_stats$->$avg_multiplier$)		:i $acc$ = %GLOBAL%$percent_notes_hit$	:i :s}	:i $SetArrayElement$$arrayName$ = $player_data$$index$ = (%GLOBAL%$player$%i(4294967295))$newValue$ = %GLOBAL%$Data$	:i $GetNextPlayer$$player$ = %GLOBAL%$player$	:i loop_to %GLOBAL%$num_players$	:i $TextOutputEnd$$output_text$$filename$ = %GLOBAL%$filename$	:i $TextOutputStart$$filename$ = %GLOBAL%$csv_filename$	:i $GetLocalSystemTime$	:i $FormatText$:s{		:i $textname$ = $temp_date$		:i ^[9c5b8f4e]^		:i $a$ = (%GLOBAL%$localsystemtime$->$month$ + %i(1))		:i $b$ = (%GLOBAL%$localsystemtime$->$dayofmonth$)		:i $c$ = (%GLOBAL%$localsystemtime$->$year$)		:i $d$ = (%GLOBAL%$localsystemtime$->$hour$)		:i $e$ = (%GLOBAL%$localsystemtime$->$minute$)	:i :s}	:i $GetFirstPlayer$	:i $getplayerinfo$%GLOBAL%$player$$band$	:i $band_score$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$Score$)	:i $CastToInteger$${StructQBKey band_score}$	:i $FormatText$$textname$ = $csv_data1$:s{		:i ^[5c660f08]^		:i $a$ = %GLOBAL%$current_song$		:i $b$ = (%GLOBAL%$autotest_powers$:a{%i(0):a}->$level$)		:i $c$ = (%GLOBAL%$autotest_powers$:a{%i(1):a}->$level$)		:i $d$ = (%GLOBAL%$autotest_powers$:a{%i(2):a}->$level$)		:i $e$ = %GLOBAL%$johny_stars_cur$		:i $f$ = %GLOBAL%$johny_stars_max$		:i $g$ = (%GLOBAL%$autotest_powers$:a{%i(3):a}->$level$)		:i $h$ = %GLOBAL%$axel_stars_cur$		:i $i$ = %GLOBAL%$axel_stars_max$		:i $j$ = (%GLOBAL%$autotest_powers$:a{%i(4):a}->$level$)		:i $k$ = %GLOBAL%$judy_stars_cur$		:i $l$ = %GLOBAL%$judy_stars_max$		:i $m$ = (%GLOBAL%$autotest_powers$:a{%i(5):a}->$level$)		:i $n$ = (%GLOBAL%$autotest_powers$:a{%i(6):a}->$level$)		:i $o$ = (%GLOBAL%$autotest_powers$:a{%i(7):a}->$level$)		:i $p$ = %GLOBAL%$casey_stars_cur$		:i $q$ = %GLOBAL%$casey_stars_max$		:i $r$ = (~$g_autotest_career_target_stars$)		:i $s$ = (~$g_autotest_career_target_hit$ * %i(100))		:i $t$ = %GLOBAL%$band_score$		:i $u$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$stars$)		:i $v$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a}->$high_mult$)		:i $DontAssertForChecksums$	:i :s}	:i $FormatText$$textname$ = $csv_data2$:s{		:i ^[8249614d]^		:i $a$ = (%GLOBAL%$player_data$:a{%i(0):a}->$part$)		:i $b$ = (%GLOBAL%$player_data$:a{%i(0):a}->$diff$)		:i $c$ = (%GLOBAL%$player_data$:a{%i(0):a}->$Score$)		:i $d$ = (%GLOBAL%$player_data$:a{%i(0):a}->$stars$)		:i $e$ = (%GLOBAL%$player_data$:a{%i(0):a}->$mult$)		:i $f$ = (%GLOBAL%$player_data$:a{%i(0):a}->$acc$)		:i $g$ = (%GLOBAL%$player_data$:a{%i(1):a}->$part$)		:i $h$ = (%GLOBAL%$player_data$:a{%i(1):a}->$diff$)		:i $i$ = (%GLOBAL%$player_data$:a{%i(1):a}->$Score$)		:i $j$ = (%GLOBAL%$player_data$:a{%i(1):a}->$stars$)		:i $k$ = (%GLOBAL%$player_data$:a{%i(1):a}->$mult$)		:i $l$ = (%GLOBAL%$player_data$:a{%i(1):a}->$acc$)		:i $DontAssertForChecksums$	:i :s}	:i $FormatText$$textname$ = $csv_data3$:s{		:i ^[fe150ca5]^		:i $m$ = (%GLOBAL%$player_data$:a{%i(2):a}->$part$)		:i $n$ = (%GLOBAL%$player_data$:a{%i(2):a}->$diff$)		:i $o$ = (%GLOBAL%$player_data$:a{%i(2):a}->$Score$)		:i $p$ = (%GLOBAL%$player_data$:a{%i(2):a}->$stars$)		:i $q$ = (%GLOBAL%$player_data$:a{%i(2):a}->$mult$)		:i $r$ = (%GLOBAL%$player_data$:a{%i(2):a}->$acc$)		:i $s$ = (%GLOBAL%$player_data$:a{%i(3):a}->$part$)		:i $t$ = (%GLOBAL%$player_data$:a{%i(3):a}->$diff$)		:i $u$ = (%GLOBAL%$player_data$:a{%i(3):a}->$Score$)		:i $v$ = (%GLOBAL%$player_data$:a{%i(3):a}->$stars$)		:i $w$ = (%GLOBAL%$player_data$:a{%i(3):a}->$mult$)		:i $x$ = (%GLOBAL%$player_data$:a{%i(3):a}->$acc$)		:i $DontAssertForChecksums$	:i :s}	:i $csv_data$ = (%GLOBAL%$temp_date$ + %GLOBAL%$csv_data1$ + %GLOBAL%$csv_data2$ + %GLOBAL%$csv_data3$)	:i $TextOutput$$text$ = %GLOBAL%$csv_data$	:i $TextOutputEnd$$output_text$$filename$ = %GLOBAL%$csv_filename$	:i endfunction]SectionArray debug_grade_times{	ArrayStruct	[		StructHeader		{			StructInt player = 1			StructInt gold = -1			StructInt platinum = -1			StructInt diamond = -1		}		StructHeader		{			StructInt player = 2			StructInt gold = -1			StructInt platinum = -1			StructInt diamond = -1		}		StructHeader		{			StructInt player = 3			StructInt gold = -1			StructInt platinum = -1			StructInt diamond = -1		}		StructHeader		{			StructInt player = 4			StructInt gold = -1			StructInt platinum = -1			StructInt diamond = -1		}		]}Script challenge_store_grade_time e6569dfa [	:i if NOT $GotParam$${StructQBKey player}$		:i %GLOBAL%$player$ = %i(1)	:i endif	:i %GLOBAL%$i$ = %i(0)	:i while 	:i if ((~$debug_grade_times$:a{%GLOBAL%$i$:a}->$player$) = %GLOBAL%$player$)		:i $GetSongTime$		:i $getplayerinfo$%GLOBAL%$player$$current_song_name$		:i %GLOBAL%$song_info$ = ((~$gh_songlist_props$)->%GLOBAL%$current_song_name$)		:i %GLOBAL%$song_progress$ = ((%GLOBAL%$songtime$ / (%GLOBAL%$song_info$->$duration$ + %i(5))) * %i(100))		:i switch %GLOBAL%$level$			:i case %i(2)				:i %GLOBAL%$new_entry$ = :s{$player$ = %GLOBAL%$player$$gold$ = %GLOBAL%$song_progress$$platinum$ = (~$debug_grade_times$:a{%GLOBAL%$i$:a}->$platinum$)$diamond$ = (~$debug_grade_times$:a{%GLOBAL%$i$:a}->$diamond$):s}				:i endcase			case %i(3)				:i %GLOBAL%$new_entry$ = :s{$player$ = %GLOBAL%$player$$gold$ = (~$debug_grade_times$:a{%GLOBAL%$i$:a}->$gold$)$platinum$ = %GLOBAL%$song_progress$$diamond$ = (~$debug_grade_times$:a{%GLOBAL%$i$:a}->$diamond$):s}				:i endcase			case %i(4)				:i %GLOBAL%$new_entry$ = :s{$player$ = %GLOBAL%$player$$gold$ = (~$debug_grade_times$:a{%GLOBAL%$i$:a}->$gold$)$platinum$ = (~$debug_grade_times$:a{%GLOBAL%$i$:a}->$platinum$)$diamond$ = %GLOBAL%$song_progress$:s}				:i endcase			default 				:i %GLOBAL%$new_entry$ = :s{$invalid_level_passed$ = %GLOBAL%$level$:s}		:i end_switch		:i $SetArrayElement$$globalarray$$arrayName$ = $debug_grade_times$$index$ = %GLOBAL%$i$$newValue$ = %GLOBAL%$new_entry$		:i continue	:i endif	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %i(4)	:i endfunction]Script challenge_init_meter 0x56888c93 [	:i %GLOBAL%$target_list$ = :a{:a}	:i %GLOBAL%$target_list$ = ((((%GLOBAL%$target_list$ + (~%GLOBAL%$goal_id$->$gold_descrip$)) + (~%GLOBAL%$goal_id$->$platinum_descrip$)) + (~%GLOBAL%$goal_id$->$diamond_descrip$)))	:i if NOT $GotParam$${StructQBKey player}$		:i $GetArraySize$(~%GLOBAL%$goal_id$->$required_band$)		:i if (%GLOBAL%$array_size$ > %i(1))			:i %GLOBAL%$player$ = $band$		:i else 			:i %GLOBAL%$player$ = $all$		:i endif	:i endif	:i if (%GLOBAL%$player$ = $band$)		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $band_setup$		:i if (%GLOBAL%$band_setup$ = $valid$)			:i $GMan_MeterFunc$:s{				:i $goal$ = %GLOBAL%$goal_id$				:i $tool$ = $challenge_meter$				:i $func$ = $add_challenge_meter$				:i $params$ = :s{$band_meter$$band_index$ = %i(1)$targets$ = %GLOBAL%$target_list$:s}			:i :s}			:i $GetFirstPlayer$			:i $getplayerinfo$%GLOBAL%$player$$band$			:i $GetNumPlayersInGame$			:i if (%GLOBAL%$num_players$ > %i(0))				:i $GetFirstPlayer$				:i %GLOBAL%$meter_starting_value$ = %i(0)				:i while 				:i %GLOBAL%$player_instrument$ = $valid$				:i $challenge_validate_player_instrument$$goal_id$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$				:i if (%GLOBAL%$player_instrument$ = $valid$)					:i $GMan_GetConstant$$goal$ = %GLOBAL%$goal_id$$name$ = $challenge_metric$					:i if NOT $GotParam$${StructQBKey challenge_metric}$						:i $scriptassert$%s("Bank Progress requires challenge metric to be defined in goal constants! %g")$g$ = %GLOBAL%$goal_id$					:i endif					:i switch %GLOBAL%$challenge_metric$						:i case $Score$							:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $banked_progress$							:i %GLOBAL%$meter_starting_value$ = %GLOBAL%$banked_progress$							:i continue							:i endcase						case $calculated_value$							:i endcase						case $streak$							:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $banked_progress$							:i %GLOBAL%$meter_starting_value$ = (%GLOBAL%$meter_starting_value$ + %GLOBAL%$banked_progress$)							:i endcase						default 							:i $scriptassert$%s("challenge_bank_progress does not have a case for challenge metric (%m) defined in goal constants! %g ")$g$ = %GLOBAL%$goal_id$$m$ = %GLOBAL%$challenge_metric$					:i end_switch				:i endif				:i $GetNextPlayer$$player$ = %GLOBAL%$player$				:i loop_to %GLOBAL%$num_players$			:i endif			:i $GetFirstPlayer$			:i $challenge_meter_watcher_varUpdated$$player$ = %GLOBAL%$player$$current_value$ = %GLOBAL%$meter_starting_value$		:i endif	:i else 		:i if (%GLOBAL%$player$ = $all$)			:i $GetNumPlayersInGame$		:i else 			:i %GLOBAL%$num_players$ = %i(1)		:i endif		:i if (%GLOBAL%$num_players$ > %i(0))			:i if (%GLOBAL%$player$ = $all$)				:i $GetFirstPlayer$			:i endif			:i while 			:i %GLOBAL%$player_instrument$ = $valid$			:i $challenge_validate_player_instrument$$goal_id$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$			:i if (%GLOBAL%$player_instrument$ = $valid$)				:i $GMan_MeterFunc$:s{					:i $goal$ = %GLOBAL%$goal_id$					:i $tool$ = $challenge_meter$					:i $func$ = $add_challenge_meter$					:i $params$ = :s{$player_meter$$player_index$ = %GLOBAL%$player$$targets$ = %GLOBAL%$target_list$:s}				:i :s}				:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $banked_progress$				:i $challenge_meter_watcher_varUpdated$$player$ = %GLOBAL%$player$$current_value$ = %GLOBAL%$banked_progress$			:i endif			:i if (%GLOBAL%$num_players$ > %i(1))				:i $GetNextPlayer$$player$ = %GLOBAL%$player$			:i endif			:i loop_to %GLOBAL%$num_players$		:i endif	:i endif	:i endfunction]Script challenge_update_meter c8c22fa7 [	:i if (%GLOBAL%$player$ = $band$)		:i %GLOBAL%$band$ = %i(1)		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $band_setup$		:i if (%GLOBAL%$band_setup$ = $valid$)			:i $GetFirstPlayer$			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_displayed$ = %GLOBAL%$current_progress$:s}			:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $meter_high$			:i if $GotParam$${StructQBKey meter_high}$				:i if (%GLOBAL%$meter_high$ < %GLOBAL%$current_progress$)					:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_high$ = %GLOBAL%$current_progress$:s}				:i endif			:i else 				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_high$ = %i(0):s}			:i endif		:i endif	:i else 		:i if (%GLOBAL%$player$ = $all$)			:i $GetNumPlayersInGame$		:i else 			:i %GLOBAL%$num_players$ = %i(1)		:i endif		:i if (%GLOBAL%$num_players$ > %i(0))			:i if (%GLOBAL%$player$ = $all$)				:i $GetFirstPlayer$			:i endif			:i while 			:i %GLOBAL%$player_instrument$ = $valid$			:i $challenge_validate_player_instrument$$goal_id$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$			:i if (%GLOBAL%$player_instrument$ = $valid$)				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_displayed$ = %GLOBAL%$current_progress$:s}				:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $meter_high$				:i if $GotParam$${StructQBKey meter_high}$					:i if (%GLOBAL%$meter_high$ < %GLOBAL%$current_progress$)						:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_high$ = %GLOBAL%$current_progress$:s}					:i endif				:i else 					:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_high$ = %i(0):s}				:i endif			:i endif			:i if (%GLOBAL%$player$ = $all$)				:i $GetNextPlayer$$player$ = %GLOBAL%$player$			:i endif			:i loop_to %GLOBAL%$num_players$		:i endif	:i endif	:i endfunction]Script challenge_meter_watcher_varUpdated 0x1e96afa3 [	:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $band_setup$	:i if NOT (%GLOBAL%$band_setup$ = $valid$)		:i return 	:i endif	:i $GetArraySize$(~%GLOBAL%$goal_id$->$required_band$)	:i if (%GLOBAL%$array_size$ > %i(1))		:i $getplayerinfo$%GLOBAL%$player$$band$		:i $GMan_MeterFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $challenge_meter$$func$ = $update_progress$$params$ = :s{$band_meter$$band_index$ = %GLOBAL%$band$$current_progress$ = %GLOBAL%$current_value$:s}	:i else 		:i $GMan_MeterFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $challenge_meter$$func$ = $update_progress$$params$ = :s{$player_meter$$player_index$ = %GLOBAL%$player$$current_progress$ = %GLOBAL%$current_value$:s}	:i endif	:i endfunction]Script challenge_get_lowest_band_difficulty_setting 0x0a06814e [	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i %GLOBAL%$difficulties$ = :a{$beginner$$easy$$medium$$hard$$expert$:a}		:i %GLOBAL%$diff_index$ = %i(4)		:i while 		:i $getplayerinfo$%GLOBAL%$player$$difficulty$		:i switch %GLOBAL%$difficulty$			:i case $beginner$				:i $diff_index$ = %i(0)				:i continue				:i endcase			case $easy$				:i $diff_index$ = %i(1)				:i endcase			case $medium$				:i if (%GLOBAL%$diff_index$ > %i(1))					:i $diff_index$ = %i(2)				:i endif				:i endcase			case $hard$				:i if (%GLOBAL%$diff_index$ > %i(2))					:i $diff_index$ = %i(3)				:i endif				:i endcase			case $expert$				:i if (%GLOBAL%$diff_index$ > %i(3))					:i $diff_index$ = %i(4)				:i endif		:i end_switch		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i $lowest_difficulty$ = (%GLOBAL%$difficulties$:a{%GLOBAL%$diff_index$:a})	:i return $lowest_band_difficulty_setting$ = %GLOBAL%$lowest_difficulty$	:i endfunction]Script challenge_display_message 0x6872105e [	${		StructQBStringQs text = 0x7223952e		StructInt time = 3		StructFloatX2 Pos		{			Floats [640.000, 250.000]		}	}$		:i if $ScreenElementExists$${StructQBKey id = challenge_text_container}$		:i $DestroyScreenElement$${StructQBKey id = challenge_text_container}$	:i endif	:i $CreateScreenElement$${		StructQBKey id = challenge_text_container		StructQBKey type = ContainerElement		StructQBKey parent = root_window	}$		:i $CreateScreenElement$:s{		:i $id$ = $challenge_text$		:i $type$ = $TextElement$		:i $parent$ = $challenge_text_container$		:i $font$ = $debug$		:i $text$ = %GLOBAL%$text$		:i $Scale$ = %f(1.0)		:i $Pos$ = %GLOBAL%$Pos$		:i $just$ = :a{$center$$center$:a}		:i $rgba$ = :a{%i(150)%i(185)%i(200)%i(255):a}		:i $z_priority$ = %i(80)	:i :s}	:i $CreateScreenElement$:s{		:i $id$ = $challenge_text_shadow$		:i $type$ = $TextElement$		:i $parent$ = $challenge_text_container$		:i $font$ = $debug$		:i $text$ = %GLOBAL%$text$		:i $Scale$ = %f(1.0)		:i $Pos$ = (%GLOBAL%$Pos$ + %vec2(1.0,1.0))		:i $just$ = :a{$center$$center$:a}		:i $rgba$ = :a{%i(0)%i(0)%i(0)%i(255):a}		:i $z_priority$ = %i(79)	:i :s}	:i $challenge_text$.$se_setprops$${StructInt alpha = 0}$	:i $challenge_text_shadow$.$se_setprops$${StructInt alpha = 0}$	:i $challenge_text$.$se_setprops$${StructInt alpha = 1}$	:i $challenge_text_shadow$.$se_setprops$${StructInt alpha = 1}$	:i $challenge_text$.$se_waitprops$	:i endfunction]Script challenge_validate_band_setup 0x8baf2f9b [	${StructQBKey goal_id = null}$	:i %GLOBAL%$required_band$ = (~%GLOBAL%$goal_id$->$required_band$)	:i %GLOBAL%$instruments$ = :a{$lead$$Bass$$drum$$vocal$:a}	:i %GLOBAL%$num_required$ = :a{%i(0)%i(0)%i(0)%i(0):a}	:i %GLOBAL%$num_in_band$ = :a{%i(0)%i(0)%i(0)%i(0):a}	:i %GLOBAL%$band_setup$ = $valid$	:i %GLOBAL%$valid_players$ = :a{:a}	:i $GetArraySize$(%GLOBAL%$required_band$)	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i %GLOBAL%$num_valid_players$ = %i(0)		:i $GetFirstPlayer$		:i while 		:i $getplayerinfo$%GLOBAL%$player$$difficulty$		:i if NOT (%GLOBAL%$difficulty$ = $beginner$)			:i $getplayerinfo$%GLOBAL%$player$$difficulty$			:i $Playlist_GetCurrentSongIndex$			:i if (%GLOBAL%$current_song_index$ = %i(1))				:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$difficulty_check$ = %GLOBAL%$difficulty$:s}			:i endif			:i $challenge_validate_player_instrument$$goal_id$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$			:i if (%GLOBAL%$player_instrument$ = $valid$)				:i %GLOBAL%$valid_players$ = (%GLOBAL%$valid_players$ + %GLOBAL%$player$)				:i %GLOBAL%$num_valid_players$ = (%GLOBAL%$num_valid_players$ + %i(1))			:i endif		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$		:i if (%GLOBAL%$num_valid_players$ >= %GLOBAL%$array_size$)			:i %GLOBAL%$i$ = %i(0)			:i while 			:i %GLOBAL%$ii$ = %i(0)			:i while 			:i if (%GLOBAL%$required_band$:a{%GLOBAL%$i$:a} = %GLOBAL%$instruments$:a{%GLOBAL%$ii$:a})				:i $SetArrayElement$$arrayName$ = $num_required$$index$ = %GLOBAL%$ii$$newValue$ = (%GLOBAL%$num_required$:a{%GLOBAL%$ii$:a} + %i(1))				:i continue			:i endif			:i %GLOBAL%$ii$ = (%GLOBAL%$ii$ + %i(1))			:i loop_to %i(4)			:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))			:i loop_to %GLOBAL%$array_size$			:i $GetFirstPlayer$			:i while 			:i %GLOBAL%$ii$ = %i(0)			:i while 			:i $getplayerinfo$%GLOBAL%$player$$part$			:i $getplayerinfo$%GLOBAL%$player$$difficulty$			:i if NOT (%GLOBAL%$difficulty$ = $beginner$)				:i %GLOBAL%$instruments$ = :a{$guitar$$Bass$$drum$$Vocals$:a}				:i if (%GLOBAL%$part$ = %GLOBAL%$instruments$:a{%GLOBAL%$ii$:a})					:i $SetArrayElement$$arrayName$ = $num_in_band$$index$ = %GLOBAL%$ii$$newValue$ = (%GLOBAL%$num_in_band$:a{%GLOBAL%$ii$:a} + %i(1))					:i continue				:i endif			:i endif			:i %GLOBAL%$ii$ = (%GLOBAL%$ii$ + %i(1))			:i loop_to %i(4)			:i $GetNextPlayer$$player$ = %GLOBAL%$player$			:i loop_to %GLOBAL%$num_players$			:i $GetFirstPlayer$			:i while 			:i $getplayerinfo$%GLOBAL%$player$$difficulty$			:i if ((%GLOBAL%$num_in_band$:a{%GLOBAL%$player$:a}) < (%GLOBAL%$num_required$:a{%GLOBAL%$player$:a}))				:i %GLOBAL%$band_setup$ = $missing_part$				:i continue			:i elseif (%GLOBAL%$difficulty$ = $beginner$)				:i $GetArraySize$(%GLOBAL%$required_band$)				:i if (%GLOBAL%$array_size$ > %i(1))					:i %GLOBAL%$band_setup$ = $beginner_in_band$				:i endif			:i endif			:i $GetNextPlayer$$player$ = %GLOBAL%$player$			:i loop_to %GLOBAL%$num_players$		:i else 			:i %GLOBAL%$band_setup$ = $too_small$		:i endif	:i else 		:i %GLOBAL%$band_setup$ = $no_band$	:i endif	:i return $band_setup$ = %GLOBAL%$band_setup$$valid_players$ = %GLOBAL%$valid_players$	:i endfunction]Script challenge_validate_player_instrument 0x646e9b80 [	${		StructQBKey goal_id = null		StructInt player = 0	}$		:i %GLOBAL%$player_instrument$ = $invalid$	:i %GLOBAL%$required_band$ = (~%GLOBAL%$goal_id$->$required_band$)	:i $getplayerinfo$%GLOBAL%$player$$difficulty$	:i if $GMan_GoalIsActive$$goal$ = %GLOBAL%$goal_id$		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $difficulty_check$	:i else 		:i %GLOBAL%$difficulty_check$ = $goal_inactive$	:i endif	:i if NOT (%GLOBAL%$difficulty_check$ = $invalid$)		:i if NOT (%GLOBAL%$difficulty$ = $beginner$)			:i $getplayerinfo$%GLOBAL%$player$$part$			:i switch %GLOBAL%$part$				:i case $guitar$					:i %GLOBAL%$Instrument$ = $lead$					:i endcase				case $Vocals$					:i %GLOBAL%$Instrument$ = $vocal$					:i endcase				case $Bass$					:i endcase				case $drum$					:i %GLOBAL%$Instrument$ = %GLOBAL%$part$			:i end_switch			:i if (($ArrayContains$$array$ = %GLOBAL%$required_band$$contains$ = %GLOBAL%$Instrument$) OR ($ArrayContains$$array$ = %GLOBAL%$required_band$$contains$ = $any$))				:i %GLOBAL%$player_instrument$ = $valid$			:i endif		:i else 			:i %GLOBAL%$player_instrument$ = $invalid_is_beginner$		:i endif	:i else 		:i %GLOBAL%$player_instrument$ = $invalid_was_beginner$	:i endif	:i return $player_instrument$ = %GLOBAL%$player_instrument$	:i endfunction]Script challenge_section_valid 0x02897956 [	:i if $StructureContains$$structure$ = (~%GLOBAL%$goal_id$)$song_sections$		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $current_section$		:i $Playlist_GetCurrentSongIndex$		:i %GLOBAL%$current_song_index$ = (%GLOBAL%$current_song_index$ - %i(1))		:i %GLOBAL%$required_sections$ = (~%GLOBAL%$goal_id$->$song_sections$:a{%GLOBAL%$current_song_index$:a})		:i if $ArrayContains$$array$ = %GLOBAL%$required_sections$$contains$ = %GLOBAL%$current_section$			:i return ${StructQBKey true}$		:i else 			:i return ${StructQBKey false}$		:i endif	:i else 		:i return ${StructQBKey true}$	:i endif	:i endfunction]Script challenge_bank_progress 0x46386244 [	:i $GetArraySize$(~%GLOBAL%$goal_id$->$required_band$)	:i %GLOBAL%$required_band_size$ = %GLOBAL%$array_size$	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i %GLOBAL%$player_instrument$ = $valid$		:i $challenge_validate_player_instrument$$goal_id$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$		:i if (%GLOBAL%$player_instrument$ = $valid$)			:i $GMan_GetConstant$$goal$ = %GLOBAL%$goal_id$$name$ = $challenge_metric$			:i if NOT $GotParam$${StructQBKey challenge_metric}$				:i $scriptassert$%s("Bank Progress requires challenge metric to be defined in goal constants! %g")$g$ = %GLOBAL%$goal_id$			:i endif			:i switch %GLOBAL%$challenge_metric$				:i case $Score$					:i if $StructureContains$$structure$ = (~%GLOBAL%$goal_id$)$song_sections$						:i $getplayerinfo$%GLOBAL%$player$$band$						:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$band$						:i %GLOBAL%$current_progress$ = (%GLOBAL%$current_section_progress$ + %GLOBAL%$valid_sections_progress$)					:i else 						:i if (%GLOBAL%$required_band_size$ > %i(1))							:i $getplayerinfo$%GLOBAL%$player$$band$							:i $GetBandInfo$%GLOBAL%$band$$Score$							:i %GLOBAL%$current_progress$ = %GLOBAL%$Score$						:i else 							:i $getplayerinfo$%GLOBAL%$player$$Score$							:i %GLOBAL%$current_progress$ = %GLOBAL%$Score$						:i endif					:i endif					:i endcase				case $calculated_value$					:i $GMan_GetConstant$$goal$ = %GLOBAL%$goal_id$$name$ = $calculated_value$					:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = %GLOBAL%$calculated_value$					:i %GLOBAL%$current_progress$ = ( isNull ->%GLOBAL%$calculated_value$)					:i endcase				case $streak$					:i if $StructureContains$$structure$ = (~%GLOBAL%$goal_id$)$song_sections$						:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$						:i %GLOBAL%$current_progress$ = (%GLOBAL%$current_section_progress$ + %GLOBAL%$valid_sections_progress$)					:i else 						:i $getplayerinfo$%GLOBAL%$player$$current_run$						:i %GLOBAL%$current_progress$ = (%GLOBAL%$current_run$)					:i endif					:i endcase				default 					:i $scriptassert$%s("challenge_bank_progress does not have a case for challenge metric (%m) defined in goal constants! %g ")$g$ = %GLOBAL%$goal_id$$m$ = %GLOBAL%$challenge_metric$			:i end_switch			:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $banked_progress$			:i %GLOBAL%$current_progress$ = (%GLOBAL%$current_progress$ + %GLOBAL%$banked_progress$)			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$banked_progress$ = %GLOBAL%$current_progress$$reset_progress$ = %GLOBAL%$banked_progress$:s}		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script challenge_multi_song_difficulty_check b82b84f0 [	:i $Playlist_GetCurrentSongIndex$	:i if (%GLOBAL%$current_song_index$ > %i(1))		:i $GetNumPlayersInGame$		:i $GetFirstPlayer$		:i while 		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $difficulty_check$		:i if NOT (%GLOBAL%$difficulty_check$ = $invalid$)			:i $getplayerinfo$%GLOBAL%$player$$difficulty$			:i if NOT (%GLOBAL%$difficulty_check$ = %GLOBAL%$difficulty$)				:i $GetArraySize$(~%GLOBAL%$goal_id$->$required_band$)				:i if (%GLOBAL%$array_size$ > %i(1))					:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$band_setup$ = $invalid$:s}					:i continue				:i else 					:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$banked_progress$ = %i(0):s}					:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$difficulty_check$ = $invalid$:s}					:i $GMan_SetPendingGrade$$goal$ = %GLOBAL%$goal_id$$grade$ = %i(0)				:i endif			:i endif		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script challenge_store_meter_high_and_grade 0x6d041c7d [	:i $quickplay_get_grade$$goal$ = %GLOBAL%$goal_id$	:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$retry_grade$ = %GLOBAL%$pending_grade$:s}	:i $GetNumPlayersInGame$	:i $GetFirstPlayer$	:i while 	:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $meter_high$	:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_high_retry$ = %GLOBAL%$meter_high$:s}	:i $GetNextPlayer$$player$ = %GLOBAL%$player$	:i loop_to %GLOBAL%$num_players$	:i endfunction]Script challenge_restore_meter_high_and_grade cae6016b [	:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $retry_grade$	:i $GMan_SetPendingGrade$$goal$ = %GLOBAL%$goal_id$$grade$ = %GLOBAL%$retry_grade$	:i $GetNumPlayersInGame$	:i $GetFirstPlayer$	:i while 	:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $meter_high_retry$	:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_displayed$ = %GLOBAL%$meter_high_retry$:s}	:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$meter_high$ = %GLOBAL%$meter_high_retry$:s}	:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$params$ = :s{$valid_sections_progress$ = %i(0):s}	:i $GetNextPlayer$$player$ = %GLOBAL%$player$	:i loop_to %GLOBAL%$num_players$	:i endfunction]Script qp_get_score_string 0x50b9fdf8 [	${Unknown [00012600bfecc45b696969690000001800012400cd66c8ae6969696900000000]}$	:i $score_txt$ = ^[4569cb67]^	:i $units_txt$ = ^[00000000]^	:i $extendcrc$%GLOBAL%$goal_name$%s("_info")$out$ = $challenge_struct$	:i if $StructureContains$$structure$ = (~%GLOBAL%$challenge_struct$->$constants$)$units_txt$		:i $units_txt$ = (~%GLOBAL%$challenge_struct$->$constants$->$units_txt$)	:i endif	:i if $StructureContains$$structure$ = (~%GLOBAL%$challenge_struct$->$constants$)$score_converion_script$		:i $conversion_script$ = (~%GLOBAL%$challenge_struct$->$constants$->$score_converion_script$)		:i %GLOBAL%$conversion_script$$Score$ = %GLOBAL%$Score$	:i endif	:i $FormatText$$textname$ = $score_txt$^[c05908d1]^$s$ = %GLOBAL%$Score$$u$ = %GLOBAL%$units_txt$$usecommas$$decimalplaces$ = %i(2)	:i return $score_text$ = %GLOBAL%$score_txt$	:i endfunction]Script quickplay_get_grade 0x7e899e3c [	${Unknown [000126009982e5016969696900000000]}$	:i %GLOBAL%$grade$ = %i(0)	:i %GLOBAL%$last_grade$ = %i(0)	:i %GLOBAL%$previous_grade$ = %i(0)	:i %GLOBAL%$pending_grade$ = %i(0)	:i if $GMan_GoalIsActive$$goal$ = %GLOBAL%$goal_id$		:i if $GMan_IsPowerScoreEnabled$			:i $GMan_GetAssignedPlayer$$goal_name$ = %GLOBAL%$goal_id$			:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$assigned_player$$name$ = $pending_grade$			:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$assigned_player$$name$ = $previous_grade$		:i else 			:i $GMan_GetGrade$$goal$ = %GLOBAL%$goal_id$		:i endif	:i endif	:i return $grade$ = %GLOBAL%$grade$$last_grade$ = %GLOBAL%$last_grade$$previous_grade$ = %GLOBAL%$previous_grade$$pending_grade$ = %GLOBAL%$pending_grade$	:i endfunction]