Unknown [1c0000000000000000000b940000000000000000]SectionStruct qp_trigger_spower_test_info{	StructHeader	{		StructString name = "qp_trigger_spower_test"		StructQBKey goal_type = quickplay_challenge		StructStruct constants		{			StructHeader			{				StructQBKey target_value = duration				StructQBStringQs desc_txt = c96c8800			}		}		StructStruct Data		{			StructHeader			{				StructArray percent_targets				{					ArrayInteger					[						1						1						1					]				}				StructArray calculated_targets				{					ArrayInteger					[						4294967295						4294967295						4294967295					]				}				StructArray valid_sections				{					ArrayInteger					[						2					]				}				StructInt valid_section_window_started = 0				StructInt star_power_deployed_in_valid_window = 0			}		}		StructStruct player_data		{			StructHeader			{				StructInt current_progress = 0				StructInt section_base_value = 0				StructInt previous_progress = 0				StructInt longest_deployment = 0				StructInt in_valid_section = 0			}		}		StructStruct initial_data		{			StructHeader			{				StructInt current_progress = 0				StructInt longest_deployment = 0			}		}		StructArray checkpoints		{			ArrayStruct			[				StructHeader				{					StructString name = "main"					StructArray tools					{						ArrayStruct						[							StructHeader							{								StructString name = "watcher"								StructQBKey type = var_watcher								StructQBKey var_updated = qp_trigger_spower_test_watcher_update								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = playerinfo											StructQBKey var = star_power_used											StructQBKey type = int										}																		]								}							}							StructHeader							{								StructString name = "section_watcher"								StructQBKey type = section_watcher								StructQBKey enable_highway_glow								StructQBKey section_marker_hit = qp_trigger_spower_test_section_marker_hit							}												]					}				}						]		}	}}Script qp_trigger_spower_test_watcher_update bbdfd73a [	:i $printf$${		StructQBKey channel = qp_challenge		StructQBStringQs 0x5ba92680	}$		:i if (%GLOBAL%$current_value$ = %i(1))		:i if $challenge_qp_current_section_is_valid$$goal_id$ = %GLOBAL%$goal_id$			:i $printf$${				StructQBKey channel = qp_challenge				StructString 0x00000000 = "Section is valid video moment is a go!"			}$						:i $qp_trigger_spower_test_display_message_spawn$${				StructQBStringQs text = 0x96e386b2				StructInt time = 2			}$						:i $SoundEvent$${StructQBKey event = BH2_Video_Challenge_Good}$			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$star_power_deployed_in_valid_window$ = %i(1):s}			:i $GMan_SetGrade$$goal$ = %GLOBAL%$goal_id$$grade$ = %i(1)		:i else 			:i $printf$${				StructQBKey channel = qp_challenge				StructString 0x00000000 = "Section is invalid, trigger star power at another time..."			}$					:i endif	:i endif	:i endfunction]Script qp_trigger_spower_test_section_marker_hit 0x46c81dc2 [	:i $printf$${		StructQBKey channel = qp_challenge		StructQBStringQs 0x2d15cd30	}$		:i %GLOBAL%$started_section_length$ = (%GLOBAL%$started_section_length$ / %i(1000))	:i if $challenge_qp_current_section_is_valid$$goal_id$ = %GLOBAL%$goal_id$		:i $printf$${			StructQBKey channel = qp_challenge			StructString 0x00000000 = "Section is valid Trigger Star Power!"		}$				:i $qp_trigger_spower_test_display_message_spawn$$text$ = ^[813d58a9]^$time$ = %GLOBAL%$started_section_length$		:i $SoundEvent$${StructQBKey event = BH2_Video_Challenge_Start}$		:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$valid_section_window_started$ = %i(1):s}	:i else 		:i $printf$${			StructQBKey channel = qp_challenge			StructString 0x00000000 = "Section is Invalid, choosing to evaluate or ignore..."		}$				:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $valid_section_window_started$		:i if (%GLOBAL%$valid_section_window_started$ = %i(1))			:i $printf$${				StructQBKey channel = qp_challenge				StructString 0x00000000 = "Chose to evaluate..."			}$						:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $star_power_deployed_in_valid_window$			:i if (%GLOBAL%$star_power_deployed_in_valid_window$ = %i(1))				:i $printf$${					StructQBKey channel = qp_challenge					StructString 0x00000000 = "Video Trigger Successful! Play Video Moment!"				}$								:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$star_power_deployed_in_valid_window$ = %i(0):s}			:i else 				:i $printf$${					StructQBKey channel = qp_challenge					StructString 0x00000000 = "Video Trigger Failed! Do not play Video Moment!"				}$							:i endif			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$params$ = :s{$valid_section_window_started$ = %i(0):s}		:i else 			:i $printf$${				StructQBKey channel = qp_challenge				StructString 0x00000000 = "Chose to ignore. "			}$					:i endif	:i endif	:i if (%GLOBAL%$callback_type$ = $custom$)		:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$assigned_player$$name$ = $in_valid_section$		:i if (%GLOBAL%$in_valid_section$ = %i(0))			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$assigned_player$$params$ = :s{$in_valid_section$ = %i(1):s}		:i else 			:i $GMan_SetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$assigned_player$$params$ = :s{$in_valid_section$ = %i(0):s}		:i endif	:i endif	:i endfunction]Script qp_trigger_spower_test_in_valid_section 0x8f140797 [	:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$assigned_player$$name$ = $in_valid_section$	:i if (%GLOBAL%$in_valid_section$ = %i(1))		:i return ${StructQBKey true}$	:i else 		:i return ${StructQBKey false}$	:i endif	:i endfunction]Script qp_trigger_spower_test_display_message_spawn b9cab7ab [	:i $KillSpawnedScript$${StructQBKey name = qp_trigger_spower_test_display_message}$	:i $SpawnScript$$qp_trigger_spower_test_display_message$$params$ = :s{ isNull :s}	:i endfunction]Script qp_trigger_spower_test_display_message cc4f6206 [	${		StructQBStringQs text = 0x7223952e		StructInt time = 3		StructFloatX2 Pos		{			Floats [640.000, 400.000]		}	}$		:i if $ScreenElementExists$${StructQBKey id = qptst_text_container}$		:i $DestroyScreenElement$${StructQBKey id = qptst_text_container}$	:i endif	:i $CreateScreenElement$${		StructQBKey id = qptst_text_container		StructQBKey type = ContainerElement		StructQBKey parent = root_window	}$		:i $CreateScreenElement$:s{		:i $id$ = $qptst_text$		:i $type$ = $TextElement$		:i $parent$ = $qptst_text_container$		:i $font$ = $debug$		:i $text$ = %GLOBAL%$text$		:i $Scale$ = %f(1.5)		:i $Pos$ = %GLOBAL%$Pos$		:i $just$ = :a{$center$$center$:a}		:i $rgba$ = :a{%i(150)%i(185)%i(200)%i(255):a}		:i $z_priority$ = %i(80)	:i :s}	:i $CreateScreenElement$:s{		:i $id$ = $qptst_text_shadow$		:i $type$ = $TextElement$		:i $parent$ = $qptst_text_container$		:i $font$ = $debug$		:i $text$ = %GLOBAL%$text$		:i $Scale$ = %f(1.5)		:i $Pos$ = (%GLOBAL%$Pos$ + %vec2(1.0,1.0))		:i $just$ = :a{$center$$center$:a}		:i $rgba$ = :a{%i(0)%i(0)%i(0)%i(255):a}		:i $z_priority$ = %i(79)	:i :s}	:i $qptst_text$.$se_setprops$${StructInt alpha = 0}$	:i $qptst_text_shadow$.$se_setprops$${StructInt alpha = 0}$	:i $qptst_text$.$se_setprops$${		StructInt alpha = 1		StructFloat time = 0.10000000149011612	}$		:i $qptst_text_shadow$.$se_setprops$${		StructInt alpha = 1		StructFloat time = 0.10000000149011612	}$		:i $qptst_text$.$se_waitprops$	:i $wait$%GLOBAL%$time$$seconds$	:i if $ScreenElementExists$${StructQBKey id = qptst_text_container}$		:i $qptst_text$.$se_setprops$${			StructInt alpha = 0			StructFloat time = 0.10000000149011612		}$				:i $qptst_text_shadow$.$se_setprops$${			StructInt alpha = 0			StructFloat time = 0.10000000149011612		}$				:i $qptst_text$.$se_waitprops$	:i endif	:i if $ScreenElementExists$${StructQBKey id = qptst_text_container}$		:i $DestroyScreenElement$${StructQBKey id = qptst_text_container}$	:i endif	:i endfunction]Script qp_trigger_spower_test_create_generic_backdrop_spawn bc27486a [	:i $printf$${		StructQBKey channel = qp_challenge		StructQBStringQs 0x592831b6	}$		:i $KillSpawnedScript$${StructQBKey name = qp_trigger_spower_test_create_generic_backdrop}$	:i $SpawnScript$${StructQBKey qp_trigger_spower_test_create_generic_backdrop}$	:i endfunction]Script qp_trigger_spower_test_create_generic_backdrop 0x7893923d [	${StructFloat time = 1.00}$	:i $printf$${		StructQBKey channel = qp_challenge		StructQBStringQs d4eb4e03	}$		:i if NOT $ScreenElementExists$${StructQBKey id = generic_backdrop_container}$		:i $CreateScreenElement$${			StructQBKey type = ContainerElement			StructQBKey parent = root_window			StructQBKey id = generic_backdrop_container			StructFloatX2 Pos			{				Floats [0.00000, 0.00000]			}			StructArray just			{				ArrayQBKey				[					left					top				]			}		}$				:i $CreateScreenElement$${			StructQBKey type = SpriteElement			StructQBKey id = pause_backdrop			StructQBKey parent = generic_backdrop_container			StructQBKey texture = white			StructArray rgba			{				ArrayInteger				[					255					255					255					255				]			}			StructFloatX2 Pos			{				Floats [640.000, 360.000]			}			StructFloatX2 dims			{				Floats [1280.00, 720.000]			}			StructArray just			{				ArrayQBKey				[					center					center				]			}			StructInt z_priority = -1			StructInt alpha = 1		}$			:i endif	:i $pause_backdrop$.$se_setprops$$alpha$ = %i(0)$time$ = %GLOBAL%$time$	:i $wait$%GLOBAL%$time$$seconds$	:i if $ScreenElementExists$${StructQBKey id = generic_backdrop_container}$		:i $DestroyScreenElement$${StructQBKey id = generic_backdrop_container}$	:i endif	:i endfunction]