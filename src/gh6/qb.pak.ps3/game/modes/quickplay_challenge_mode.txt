Unknown [1c00000000000000000037cc0000000000000000]SectionInteger g_quickplay_challenge_mode_disabled 0SectionInteger g_quickplay_allow_dlc 1SectionStruct quickplay_info{	StructHeader	{		StructString name = "quickplay"		StructQBKey goal_type = game_mode		StructStruct Data		{			StructHeader			{				StructQBKey targeted_challenge = null				StructQBKey targeted_challenge_inst_config = null				StructArray targeted_challenge_friend_scores				{					Floats [0.00000, 0.00000]				}				StructInt targeted_challenge_friend_index = -1				StructArray band_outro_challenge_stats				{					Floats [0.00000, 0.00000]				}				StructInt previous_song_stars = -1			}		}		StructStruct player_data		{			StructHeader			{				StructArray player_outro_challenge_stats				{					Floats [0.00000, 0.00000]				}			}		}		StructStruct constants		{			StructHeader {}		}		StructArray checkpoints		{			ArrayStruct			[				StructHeader				{					StructString name = "main"					StructArray tools					{						ArrayStruct						[							StructHeader							{								StructString name = "venue_handler"								StructQBKey type = venue							}							StructHeader							{								StructString name = "challenges"								StructQBKey type = challenge_manager								StructQBKey debug							}							StructHeader							{								StructString name = "challenge_meter"								StructQBKey type = meter							}							StructHeader							{								StructString name = "pause"								StructQBKey type = Pause								StructQBKey dont_start_on_enter								StructStruct settings								{									StructHeader									{										StructStruct default_options										{											StructHeader											{												StructQBKey resume												StructQBKey restart												StructQBKey options												StructQBKey difficulty												StructQBKey quit											}										}										StructArray custom_options										{											ArrayStruct											[												StructHeader												{													StructQBStringQs text = ea4574ef													StructQBKey func = ui_event													StructStruct func_params													{														StructHeader														{															StructQBKey event = menu_change															StructStruct Data															{																StructHeader																{																	StructQBKey state = UIstate_pausemenu_quit_warning																	StructQBStringQs option2_text = ea4574ef																	StructQBKey option2_func = quickplay_skip_song																	StructQBStringQs body_text = 0x7ef90e84																}															}														}													}													StructArray inclusion_checks													{														ArrayQBKey														[															quickplay_pause_tool_not_internet_mode_check															quickplay_pause_tool_songs_remaining_check														]													}												}																						]										}									}								}							}												]					}				}						]		}	}}SectionArray g_qp_challenge_ids{	ArrayQBKey	[		qp_alt_strum		qp_down_strum		qp_drum_accents		qp_hit_chords		qp_hit_hopos		qp_hit_notes		qp_hit_notes_band		qp_green_notes		qp_open_notes		qp_spoken_notes		qp_hit_taps		qp_sustain_hits		qp_tap_strum		qp_up_strum		qp_multiplier_time		qp_multiplier_time_band		qp_rockout_time		qp_score_points		qp_score_points_band		qp_score_points_stdband		qp_score_spower		qp_score_spower_band		qp_spower_banked		qp_spower_banked_band		qp_spower_time		qp_spower_time_band		qp_streak_notes		qp_streak_notes_band		qp_sustain_time		qp_whammy_time		qp_trigger_spower_test		qp_section_accuracy_test		qp_red_notes		qp_yellow_notes		qp_blue_notes		qp_orange_notes		qp_streak_phrases		qp_kick_notes		qp_power_score_points	]}SectionArray g_qp_required_challenge_props_order{	ArrayQBKey	[		guitar		Bass		drum		Vocals		band		traditional_band	]}SectionArray g_qp_challenge_instrument_strings{	ArrayQBKeyStringQs	[		0x9504b94a		0x7d4f9214		0x388cd3db		0x1b9f6f84		dabf99c0		c617defb	]}SectionStruct g_default_challenge_props{	StructHeader	{		StructArray guitar		{			ArrayStruct			[				StructHeader				{					StructQBKey goal_name = qp_score_points					StructArray custom_score_targets					{						ArrayInteger						[							55							60							65						]					}				}				StructHeader				{					StructQBKey goal_name = qp_streak_notes					StructArray custom_score_targets					{						ArrayInteger						[							20							24							28						]					}				}				StructHeader				{					StructQBKey goal_name = qp_score_spower					StructArray custom_score_targets					{						ArrayInteger						[							40							45							50						]					}				}						]		}		StructArray Bass		{			ArrayStruct			[				StructHeader				{					StructQBKey goal_name = qp_score_points					StructArray custom_score_targets					{						ArrayInteger						[							55							60							65						]					}				}				StructHeader				{					StructQBKey goal_name = qp_streak_notes					StructArray custom_score_targets					{						ArrayInteger						[							25							30							35						]					}				}						]		}		StructArray drum		{			ArrayStruct			[				StructHeader				{					StructQBKey goal_name = qp_score_points					StructArray custom_score_targets					{						ArrayInteger						[							55							60							65						]					}				}				StructHeader				{					StructQBKey goal_name = qp_hit_notes					StructArray custom_score_targets					{						ArrayInteger						[							70							75							80						]					}				}						]		}		StructArray Vocals		{			ArrayStruct			[				StructHeader				{					StructQBKey goal_name = qp_score_points					StructArray custom_score_targets					{						ArrayInteger						[							55							60							65						]					}				}				StructHeader				{					StructQBKey goal_name = qp_spower_banked					StructArray custom_score_targets					{						ArrayInteger						[							50							60							70						]					}				}						]		}		StructArray band		{			ArrayStruct			[				StructHeader				{					StructQBKey goal_name = qp_score_points_stdband					StructArray custom_score_targets					{						ArrayInteger						[							55							60							65						]					}				}				StructHeader				{					StructQBKey goal_name = qp_score_points_band					StructArray custom_score_targets					{						ArrayInteger						[							55							60							65						]					}				}				StructHeader				{					StructQBKey goal_name = qp_multiplier_time_band					StructArray custom_score_targets					{						ArrayInteger						[							5000							10000							20000						]					}				}						]		}	}}Script quickplay_load_challenges 0x8c2695cb [	:i $Playlist_GetCurrentSong$	:i if (~$g_quickplay_allow_dlc$ = %i(0))		:i if $is_song_downloaded$$song_checksum$ = %GLOBAL%$current_song$			:i if (%GLOBAL%$download$ = %i(1))				:i return 			:i endif		:i endif	:i endif	:i $GMan_ChallengeManagerFunc$:s{		:i $goal$ = $quickplay$		:i $tool$ = $challenges$		:i $func$ = $start_quickplay_challenges_for_song$		:i $params$ = :s{			:i $song$ = %GLOBAL%$current_song$		:i :s}	:i :s}	:i endfunction]Script quickplay_unload_challenges b07012af [	${StructInt reset_targets = 0}$	:i if $GMan_GoalIsActive$${StructQBKey goal = quickplay}$		:i if (%GLOBAL%$reset_targets$ = %i(1))			:i $quickplay_reset_target_data$		:i endif	:i endif	:i $GMan_ShutDownAllGoals$${StructQBKey except = quickplay}$	:i endfunction]Script quickplay_reset_target_data dda87836 [	:i if $GMan_GoalIsActive$${StructQBKey goal = quickplay}$		:i $GMan_SetData$${			StructQBKey goal = quickplay			StructStruct params			{				StructHeader				{					StructQBKey targeted_challenge = null					StructQBKey targeted_challenge_inst_config = null					StructArray targeted_challenge_friend_scores					{						Floats [0.00000, 0.00000]					}					StructInt targeted_challenge_friend_index = -1				}			}		}$			:i endif	:i endfunction]Script quickplay_main_enter ffffffff [	:i endfunction]Script quickplay_song_init 0x9012fde7 [	:i $printf$${		StructString 0x00000000 = "Quickplay::Song_Init"		StructQBKey channel = quickplay_goal	}$		:i if (~$calibrate_lag_enabled$ = %i(1))		:i return 	:i endif	:i if NOT ($GMan_GoalIsActive$$goal$ = $quickplay$)		:i return 	:i endif	:i $GMan_SetData$${		StructQBKey goal = quickplay		StructStruct params		{			StructHeader			{				StructArray band_outro_challenge_stats				{					Floats [0.00000, 0.00000]				}				StructInt previous_song_stars = -1			}		}	}$		:i $GetNumPlayersInGame$${StructQBKey local}$	:i $GetFirstPlayer$${StructQBKey local}$	:i while 	:i $GMan_SetData$$goal$ = $quickplay$$player$ = %GLOBAL%$player$$params$ = :s{$player_outro_challenge_stats$ = :a{:a}:s}	:i $GetNextPlayer$$player$ = %GLOBAL%$player$$local$	:i loop_to %GLOBAL%$num_players$	:i $gamemode_gettype$	:i if (%GLOBAL%$type$ = $quickplay$)		:i $quickplay_load_challenges$		:i $GMan_MeterFunc$${			StructQBKey goal = quickplay			StructQBKey tool = challenge_meter			StructQBKey func = reset_friend_target_progress			StructStruct params			{				StructHeader {}			}		}$			:i endif	:i $change$${		StructArray career_rewards_just_unlocked		{			Floats [0.00000, 0.00000]		}	}$		:i $change$${		StructArray g_quickplay_rewards_just_unlocked		{			Floats [0.00000, 0.00000]		}	}$		:i endfunction]Script quickplay_song_started 0x76b402c6 [	:i $printf$${		StructString 0x00000000 = "Quickplay::Song_Started"		StructQBKey channel = quickplay_goal	}$		:i $GMan_GetData$${		StructQBKey goal = quickplay		StructQBKey name = targeted_challenge	}$		:i if (%GLOBAL%$targeted_challenge$ !== $null$)		:i $quickplay_display_target_meters$$targeted_challenge$ = %GLOBAL%$targeted_challenge$	:i else 		:i $GMan_SetData$${			StructQBKey goal = quickplay			StructStruct params			{				StructHeader				{					StructArray targeted_challenge_friend_scores					{						Floats [0.00000, 0.00000]					}				}			}		}$			:i endif	:i $GMan_SetData$${		StructQBKey goal = quickplay		StructStruct params		{			StructHeader			{				StructArray band_outro_challenge_stats				{					Floats [0.00000, 0.00000]				}				StructInt previous_song_stars = -1			}		}	}$		:i $GetNumPlayersInGame$${StructQBKey local}$	:i $GetFirstPlayer$${StructQBKey local}$	:i while 	:i $GMan_SetData$$goal$ = $quickplay$$player$ = %GLOBAL%$player$$params$ = :s{$player_outro_challenge_stats$ = :a{:a}:s}	:i $GetNextPlayer$$player$ = %GLOBAL%$player$$local$	:i loop_to %GLOBAL%$num_players$	:i $change$${		StructArray career_rewards_just_unlocked		{			Floats [0.00000, 0.00000]		}	}$		:i $change$${		StructArray g_quickplay_rewards_just_unlocked		{			Floats [0.00000, 0.00000]		}	}$		:i endfunction]Script quickplay_song_complete 0x88862823 [	:i $printf$%s("Quickplay::Song_Complete event = %a")$a$ = %GLOBAL%$event$$channel$ = $quickplay_goal$	:i if ($song_won$ = %GLOBAL%$event$ AND (~$autotest_on$ = %i(0)))		:i $progression_quickplay_clear_rewards_just_unlocked$		:i $update_song_star_rating$		:i $Playlist_GetCurrentSong$		:i $GetNumPlayersInGame$${StructQBKey local}$		:i $GetFirstPlayer$${StructQBKey local}$		:i while 		:i $getplayerinfo$%GLOBAL%$player$$controller$		:i $GetSavegameFromController$$controller$ = %GLOBAL%$controller$		:i $get_current_progression_award_points$$savegame$ = %GLOBAL%$savegame$		:i %GLOBAL%$starting_award_points$ = %GLOBAL%$total_award_points$		:i if $IsBandCheating$			:i $quickplay_check_and_save_scores$$song$ = %GLOBAL%$current_song$$player$ = %GLOBAL%$player$$savegame$ = %GLOBAL%$savegame$$do_save$ = %i(0)		:i else 			:i $quickplay_check_and_save_scores$$song$ = %GLOBAL%$current_song$$player$ = %GLOBAL%$player$$savegame$ = %GLOBAL%$savegame$		:i endif		:i $quickplay_save_song_stats$$player$ = %GLOBAL%$player$$savegame$ = %GLOBAL%$savegame$$current_song$ = %GLOBAL%$current_song$		:i $quickplay_save_song_stats$$player$ = %GLOBAL%$player$$savegame$ = %GLOBAL%$savegame$$current_song$ = %GLOBAL%$current_song$$band_challenge$ = %i(1)		:i $get_current_progression_award_points$$savegame$ = %GLOBAL%$savegame$		:i $SetPlayerInfo$%GLOBAL%$player$$recent_award_points$ = (%GLOBAL%$total_award_points$ - %GLOBAL%$starting_award_points$)		:i $SetPlayerInfo$%GLOBAL%$player$$total_award_points$ = (%GLOBAL%$total_award_points$)		:i $GetNextPlayer$$player$ = %GLOBAL%$player$$local$		:i loop_to %GLOBAL%$num_players$		:i $update_active_players_atoms$		:i $song_breakdown_qp_check_for_rewards$		:i if (%GLOBAL%$has_unlocked_rewards$ = %i(1))			:i if $ishost$				:i $net_quickplay_set_rewards_unlocked$			:i else 				:i $SendStructure$${					StructQBKey callback = net_quickplay_set_rewards_unlocked					StructStruct data_to_send					{						StructHeader {}					}				}$							:i endif		:i endif		:i $GMan_SetData$${			StructQBKey goal = quickplay			StructStruct params			{				StructHeader				{					StructArray band_outro_challenge_stats					{						Floats [0.00000, 0.00000]					}				}			}		}$				:i $quickplay_calc_challenge_outro_stats$${StructInt player = 0}$	:i elseif ($song_quit$ = %GLOBAL%$event$)		:i $quickplay_unload_challenges$	:i elseif ($song_retry$ = %GLOBAL%$event$ OR $song_failed$ = %GLOBAL%$event$)		:i $quickplay_unload_challenges$${StructInt reset_targets = 0}$	:i endif	:i endfunction]Script net_quickplay_set_rewards_unlocked bd9dc0d9 [	:i if $ishost$		:i $change$${StructInt g_net_quickplay_show_unlock_screen = 1}$		:i $SendStructure$${			StructQBKey callback = net_quickplay_set_rewards_unlocked			StructStruct data_to_send			{				StructHeader {}			}		}$			:i else 		:i $change$${StructInt g_net_quickplay_show_unlock_screen = 1}$	:i endif	:i endfunction]Script quickplay_display_target_meters 0x16c69e4c [	${Unknown [00012600744e7afc6969696900000000]}$	:i $GMan_GetInstancesOfGoal$$goal_name$ = %GLOBAL%$targeted_challenge$	:i if (%GLOBAL%$goal_instances_size$ > %i(0))		:i $GMan_GetData$${			StructQBKey goal = quickplay			StructQBKey name = targeted_challenge_inst_config		}$				:i $i$ = %i(0)		:i while 		:i $challenge_id$ = (%GLOBAL%$goal_instances$:a{%GLOBAL%$i$:a})		:i if $GMan_GoalIsActive$$goal$ = %GLOBAL%$challenge_id$			:i $GMan_GetAssignedPlayer$$goal_name$ = %GLOBAL%$challenge_id$			:i if (%GLOBAL%$assigned_player$ = %i(0))				:i $GetFirstPlayer$${StructQBKey local}$				:i $getplayerinfo$%GLOBAL%$player$$band$				:i $GMan_MeterFunc$:s{					:i $goal$ = $quickplay$					:i $tool$ = $challenge_meter$					:i $func$ = $create_targeted_challenge_meter$					:i $params$ = :s{$band_meter$$band_index$ = %GLOBAL%$band$$targeted_challenge$ = %GLOBAL%$challenge_id$:s}				:i :s}			:i else 				:i $getplayerinfo$%GLOBAL%$assigned_player$$part$				:i if (%GLOBAL%$part$ = %GLOBAL%$targeted_challenge_inst_config$)					:i $GMan_MeterFunc$:s{						:i $goal$ = $quickplay$						:i $tool$ = $challenge_meter$						:i $func$ = $create_targeted_challenge_meter$						:i $params$ = :s{$player_meter$$player_index$ = %GLOBAL%$assigned_player$$targeted_challenge$ = %GLOBAL%$challenge_id$:s}					:i :s}				:i endif			:i endif		:i endif		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$goal_instances_size$	:i endif	:i endfunction]Script quickplay_set_new_song_in_gig_list cd4d2037 [	:i if (~$g_songlist_infinite_playlist$ = %i(1))		:i $Playlist_RemoveFirstSong$${StructInt populate_list = 1}$	:i else 		:i if $Playlist_IsFinished$			:i return ${StructQBKey false}$		:i endif		:i $Playlist_SwitchToNextSong$	:i endif	:i $gamemode_gettype$	:i if ($quickplay$ = %GLOBAL%$type$)		:i $quickplay_unload_challenges$	:i endif	:i return ${StructQBKey true}$	:i endfunction]Script quickplay_check_and_save_scores 0x48360d53 [	${		Unknown [00012600cc12115e69696969000000180001240067e6859a6969696900000028000124001b0509c56969696900000038]		StructInt do_save = 1	}$		:i if $song_is_jamsession$$song$ = %GLOBAL%$song$		:i return 	:i endif	:i $GMan_SetData$$goal$ = $quickplay$$player$ = %GLOBAL%$player$$params$ = :s{$player_outro_challenge_stats$ = :a{:a}:s}	:i $GMan_GetGoalsByPlayer$$player$ = %GLOBAL%$player$	:i if (%i(0) !== %GLOBAL%$goals_by_player_size$)		:i $index$ = %i(0)		:i while 		:i $quickplay_do_challenge_score_update$:s{			:i $challenge_instance_id$ = (%GLOBAL%$goals_by_player$:a{%GLOBAL%$index$:a})			:i $goal_name$ = (%GLOBAL%$goal_strings_by_player$:a{%GLOBAL%$index$:a})			:i $song$ = %GLOBAL%$song$			:i $player$ = %GLOBAL%$player$			:i $savegame$ = %GLOBAL%$savegame$			:i $save$ = %GLOBAL%$do_save$		:i :s}		:i $index$ = (%GLOBAL%$index$ + %i(1))		:i loop_to %GLOBAL%$goals_by_player_size$	:i elseif $playerinfoequals$%GLOBAL%$player$$difficulty$ = $beginner$		:i if NOT $song_is_jamsession$$song$ = %GLOBAL%$song$			:i if NOT $GMan_IsPowerScoreEnabled$				:i $getplayerinfo$%GLOBAL%$player$$band$				:i $band_stats$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a})				:i $song_stars$ = (%GLOBAL%$band_stats$->$stars$)				:i $GetGlobalTags$$savegame$ = %GLOBAL%$savegame$%GLOBAL%$song$				:i if (%GLOBAL%$song_stars$ > %GLOBAL%$qp_performance_stars$)					:i if (%GLOBAL%$do_save$ = %i(1))						:i $AddParam$$structure_name$ = $save_value_params$$name$ = $qp_performance_stars$$value$ = %GLOBAL%$song_stars$						:i $get_current_progression_award_points$$savegame$ = %GLOBAL%$savegame$						:i $new_song_stars$ = (%GLOBAL%$song_stars$ - %GLOBAL%$qp_performance_stars$)						:i $set_progression_award_points$$savegame$ = %GLOBAL%$savegame$$new_total_award_points$ = (%GLOBAL%$total_award_points$ + %GLOBAL%$new_song_stars$)						:i $SetGlobalTags$$savegame$ = %GLOBAL%$savegame$%GLOBAL%$song$$params$ = %GLOBAL%$save_value_params$					:i endif				:i endif			:i endif		:i endif	:i endif	:i $GMan_GetGoalsByPlayer$${StructInt player = 0}$	:i if (%i(0) !== %GLOBAL%$goals_by_player_size$)		:i $index$ = %i(0)		:i while 		:i $quickplay_do_challenge_score_update$:s{			:i $challenge_instance_id$ = (%GLOBAL%$goals_by_player$:a{%GLOBAL%$index$:a})			:i $goal_name$ = (%GLOBAL%$goal_strings_by_player$:a{%GLOBAL%$index$:a})			:i $song$ = %GLOBAL%$song$			:i $player$ = %GLOBAL%$player$			:i $savegame$ = %GLOBAL%$savegame$			:i $band_challenge$ = %i(1)			:i $save$ = %GLOBAL%$do_save$		:i :s}		:i $index$ = (%GLOBAL%$index$ + %i(1))		:i loop_to %GLOBAL%$goals_by_player_size$	:i endif	:i endfunction]Script quickplay_do_challenge_score_update 0x4e501436 [	${		Unknown [00012600bc12255f696969690000001800012600bfecc45b696969690000002800012600cc12115e69696969000000380001240067e6859a6969696900000048000124001b0509c56969696900000058]		StructInt save = 1		StructInt band_challenge = 0	}$		:i $GetGlobalTags$$savegame$ = %GLOBAL%$savegame$%GLOBAL%$song$	:i $GMan_GetAssignedPlayer$$goal_name$ = %GLOBAL%$challenge_instance_id$	:i if NOT $GMan_GetQPSaveChecksums$$song$ = %GLOBAL%$song$$goal_name$ = %GLOBAL%$goal_name$$assigned_player$ = %GLOBAL%$assigned_player$		:i return 	:i endif	:i $previous_saved_grade$ = ( isNull ->%GLOBAL%$grade_checksum$)	:i $GMan_ChallengeManagerFunc$$goal$ = $quickplay$$tool$ = $challenges$$func$ = $get_challenge_score$$params$ = :s{$challenge_id$ = %GLOBAL%$challenge_instance_id$:s}	:i $CastToInteger$${StructQBKey score_value}$	:i if (%GLOBAL%$score_value$ > ( isNull ->%GLOBAL%$score_checksum$))		:i $AddParam$$structure_name$ = $save_value_params$$name$ = %GLOBAL%$score_checksum$$value$ = %GLOBAL%$score_value$		:i $getplayerinfo$%GLOBAL%$player$$difficulty$		:i $diff_as_int$ = %i(0)		:i if (%GLOBAL%$difficulty$ = $easy$)			:i $diff_as_int$ = %i(0)		:i elseif (%GLOBAL%$difficulty$ = $medium$)			:i $diff_as_int$ = %i(1)		:i elseif (%GLOBAL%$difficulty$ = $hard$)			:i $diff_as_int$ = %i(2)		:i elseif (%GLOBAL%$difficulty$ = $expert$)			:i if $expert_plus_is_enabled$$player$ = %GLOBAL%$player$$current_song$ = %GLOBAL%$song$				:i $diff_as_int$ = %i(4)			:i else 				:i $diff_as_int$ = %i(3)			:i endif		:i endif		:i $AddParam$$structure_name$ = $save_value_params$$name$ = %GLOBAL%$diff_checksum$$value$ = %GLOBAL%$diff_as_int$		:i if (%GLOBAL%$goal_name$ = $qp_power_score_points$)			:i $getplayerinfo$%GLOBAL%$player$$part$			:i %GLOBAL%$part_as_int$ = %i(0)			:i switch (%GLOBAL%$part$)				:i case $guitar$					:i %GLOBAL%$part_as_int$ = %i(4)					:i endcase				case $Bass$					:i %GLOBAL%$part_as_int$ = %i(3)					:i endcase				case $drum$					:i %GLOBAL%$part_as_int$ = %i(2)					:i endcase				case $Vocals$					:i %GLOBAL%$part_as_int$ = %i(1)			:i end_switch			:i $AddParam$$structure_name$ = $save_value_params$$name$ = $qp_power_best_instrument$$value$ = %GLOBAL%$part_as_int$		:i endif	:i endif	:i $song_stars$ = %i(0)	:i $GMan_GetData$${		StructQBKey goal = quickplay		StructQBKey name = previous_song_stars	}$		:i if (%GLOBAL%$previous_song_stars$ = %i(4294967295) AND %GLOBAL%$save$ = %i(1))		:i $GMan_SetData$$goal$ = $quickplay$$params$ = :s{$previous_song_stars$ = %GLOBAL%$qp_performance_stars$:s}	:i endif	:i if NOT $GMan_IsPowerScoreEnabled$		:i $getplayerinfo$%GLOBAL%$player$$band$		:i $band_stats$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a})		:i $song_stars$ = (%GLOBAL%$band_stats$->$stars$)		:i if (%GLOBAL%$song_stars$ > %GLOBAL%$qp_performance_stars$)			:i $AddParam$$structure_name$ = $save_value_params$$name$ = $qp_performance_stars$$value$ = %GLOBAL%$song_stars$			:i $get_current_progression_award_points$$savegame$ = %GLOBAL%$savegame$			:i if (%GLOBAL%$save$ = %i(1))				:i $new_song_stars$ = (%GLOBAL%$song_stars$ - %GLOBAL%$qp_performance_stars$)				:i $set_progression_award_points$$savegame$ = %GLOBAL%$savegame$$new_total_award_points$ = (%GLOBAL%$total_award_points$ + %GLOBAL%$new_song_stars$)			:i endif		:i endif	:i endif	:i $quickplay_get_grade$$goal_id$ = %GLOBAL%$challenge_instance_id$	:i if (%GLOBAL%$pending_grade$ > ( isNull ->%GLOBAL%$grade_checksum$))		:i $AddParam$$structure_name$ = $save_value_params$$name$ = %GLOBAL%$grade_checksum$$value$ = %GLOBAL%$pending_grade$		:i if (%GLOBAL%$save$ = %i(1))			:i $quickplay_challenge_give_award_points$$player$ = %GLOBAL%$player$$savegame$ = %GLOBAL%$savegame$$new_grade$ = %GLOBAL%$pending_grade$$old_grade$ = ( isNull ->%GLOBAL%$grade_checksum$)		:i endif	:i endif	:i if (%GLOBAL%$save$ = %i(1))		:i if $GotParam$${StructQBKey save_value_params}$			:i $SetGlobalTags$$savegame$ = %GLOBAL%$savegame$%GLOBAL%$song$$params$ = %GLOBAL%$save_value_params$		:i endif		:i %GLOBAL%$add_goal_data$ = %i(1)		:i if $GMan_IsPowerScoreEnabled$			:i %GLOBAL%$add_goal_data$ = %i(0)			:i $GMan_GetData$${				StructQBKey goal = quickplay				StructQBKey name = targeted_challenge_friend_index			}$						:i $GMan_SetData$$goal$ = %GLOBAL%$challenge_instance_id$$params$ = :s{$previous_grade$ = %GLOBAL%$previous_saved_grade$:s}			:i if (%GLOBAL%$targeted_challenge_friend_index$ >= %i(0))				:i %GLOBAL%$add_goal_data$ = %i(1)			:i endif		:i endif		:i if (%GLOBAL%$add_goal_data$ = %i(1))			:i $GMan_GetData$$goal$ = $quickplay$$player$ = %GLOBAL%$player$$name$ = $player_outro_challenge_stats$			:i $GMan_MeterFunc$:s{				:i $goal$ = $quickplay$				:i $tool$ = $challenge_meter$				:i $func$ = $get_fill_percent$				:i $params$ = :s{$player_index$ = %GLOBAL%$player$:s}			:i :s}			:i $current_progress$ = %i(0)			:i $calculated_targets$ = :a{%i(0)%i(0)%i(0):a}			:i if $GMan_GoalIsActive$$goal$ = %GLOBAL%$challenge_instance_id$				:i $GMan_GetAssignedPlayer$$goal_name$ = %GLOBAL%$challenge_instance_id$				:i $GMan_GetData$$goal$ = %GLOBAL%$challenge_instance_id$$name$ = $calculated_targets$				:i if (%GLOBAL%$assigned_player$ = %i(0))					:i $GMan_GetData$$goal$ = %GLOBAL%$challenge_instance_id$$name$ = $current_progress$				:i else 					:i $GMan_GetData$$goal$ = %GLOBAL%$challenge_instance_id$$player$ = %GLOBAL%$player$$name$ = $current_progress$				:i endif			:i endif			:i $new_stat_entry$ = :s{				:i $goal_name$ = %GLOBAL%$goal_name$				:i $instance_name$ = %GLOBAL%$challenge_instance_id$				:i $challenge_icon$ = %GLOBAL%$goal_name$				:i $challenge_grade$ = %GLOBAL%$pending_grade$				:i $progress_to_next_grade$ = %GLOBAL%$meter_fill$				:i $previous_grade$ = %GLOBAL%$previous_saved_grade$				:i $current_progress$ = %GLOBAL%$current_progress$				:i $calculated_targets$ = %GLOBAL%$calculated_targets$			:i :s}			:i $AddArrayElement$$array$ = %GLOBAL%$player_outro_challenge_stats$$element$ = %GLOBAL%$new_stat_entry$			:i $outro_challenge_stats$ = %GLOBAL%$array$			:i if (%GLOBAL%$band_challenge$ = %i(1))				:i $GMan_SetData$$goal$ = $quickplay$$params$ = :s{$band_outro_challenge_stats$ = %GLOBAL%$outro_challenge_stats$:s}			:i else 				:i $GMan_SetData$$goal$ = $quickplay$$player$ = %GLOBAL%$player$$params$ = :s{$player_outro_challenge_stats$ = %GLOBAL%$outro_challenge_stats$:s}			:i endif		:i endif	:i else 		:i $quickplay_get_overall_awards_progress$$player$ = %GLOBAL%$player$		:i if $GMan_IsPowerScoreEnabled$			:i %GLOBAL%$challenge_stars_earned_this_try$ = %GLOBAL%$pending_grade$			:i %GLOBAL%$new_challenge_stars_earned_this_try$ = (%GLOBAL%$pending_grade$ - ( isNull ->%GLOBAL%$grade_checksum$))			:i if (%GLOBAL%$new_challenge_stars_earned_this_try$ < %i(0))				:i %GLOBAL%$new_challenge_stars_earned_this_try$ = %i(0)			:i endif		:i else 			:i $get_quickplay_challenge_award_points_change$$new_grade$ = %GLOBAL%$pending_grade$$old_grade$ = %i(0)			:i %GLOBAL%$challenge_stars_earned_this_try$ = %GLOBAL%$challenge_award_points$			:i $get_quickplay_challenge_award_points_change$$new_grade$ = %GLOBAL%$pending_grade$$old_grade$ = ( isNull ->%GLOBAL%$grade_checksum$)			:i %GLOBAL%$new_challenge_stars_earned_this_try$ = %GLOBAL%$challenge_award_points$		:i endif		:i %GLOBAL%$new_stars$ = (%GLOBAL%$song_stars$ - %GLOBAL%$qp_performance_stars$)		:i if (%GLOBAL%$new_stars$ < %i(0))			:i %GLOBAL%$new_stars$ = %i(0)		:i endif		:i return :s{			:i $total_award_points$ = %GLOBAL%$current_award_points_total$			:i $song_stars_earned_this_try$ = %GLOBAL%$song_stars$			:i $new_song_stars_earned_this_try$ = %GLOBAL%$new_stars$			:i $challenge_stars_earned_this_try$ = %GLOBAL%$challenge_stars_earned_this_try$			:i $new_challenge_stars_earned_this_try$ = %GLOBAL%$new_challenge_stars_earned_this_try$		:i :s}	:i endif	:i endfunction]Script quickplay_save_song_stats c167827a [	${		Unknown [0001240067e6859a6969696900000018000124001b0509c569696969000000280001260003a178386969696900000038]		StructInt band_challenge = 0	}$		:i if $song_is_jamsession$$song$ = %GLOBAL%$current_song$		:i return 	:i endif	:i $gamemode_gettype$	:i if (%GLOBAL%$type$ = $quickplay$)		:i if $GMan_IsPowerScoreEnabled$			:i return 		:i endif	:i endif	:i if $IsBandCheating$		:i return 	:i endif	:i if (%GLOBAL%$band_challenge$ = %i(1))		:i $part$ = $band$	:i else 		:i $getplayerinfo$%GLOBAL%$player$$part$	:i endif	:i $getplayerinfo$%GLOBAL%$player$$difficulty$	:i $get_difficulty_text_nl$$difficulty$ = %GLOBAL%$difficulty$	:i $part$ = (~$instrument_list$->%GLOBAL%$part$->$text_nl$)	:i $FormatText$$checksumname$ = $beststars$%s("setlist_beststars_%p_%d")$p$ = %GLOBAL%$part$$d$ = %GLOBAL%$difficulty_text_nl$$addtostringlookup$ = $true$	:i $FormatText$$checksumname$ = $bestscore$%s("setlist_bestscore_%p_%d")$p$ = %GLOBAL%$part$$d$ = %GLOBAL%$difficulty_text_nl$$addtostringlookup$ = $true$	:i $FormatText$$checksumname$ = $bestpercentage$%s("setlist_bestpercentage_%p_%d")$s$ = (%GLOBAL%$song_prefix$)$p$ = %GLOBAL%$part$$d$ = %GLOBAL%$difficulty_text_nl$$addtostringlookup$ = $true$	:i $gamemode_gettype$	:i $getplayerinfo$%GLOBAL%$player$$band$	:i if (%GLOBAL%$band_challenge$ = %i(0) OR %GLOBAL%$type$ = $competitive$)		:i $song_stats$ = (~$song_stats_backup$:a{%GLOBAL%$player$ - %i(1):a})		:i $ui_song_breakdown_get_basic_player_data$$player_index$ = %GLOBAL%$player$	:i else 		:i $song_stats$ = (~$song_stats_backup_band$:a{(%GLOBAL%$band$ - %i(1)):a})		:i $backup_player$ = %GLOBAL%$player$		:i $GetNumPlayersInGame$${StructQBKey local}$		:i $GetFirstPlayer$${StructQBKey local}$		:i $avg_percent_notes_hit$ = %i(0)		:i while 		:i $ui_song_breakdown_get_basic_player_data$$player_index$ = %GLOBAL%$player$		:i $avg_percent_notes_hit$ = (%GLOBAL%$avg_percent_notes_hit$ + %GLOBAL%$percent_notes_hit$)		:i $GetNextPlayer$$player$ = %GLOBAL%$player$$local$		:i loop_to %GLOBAL%$num_players$		:i $avg_percent_notes_hit$ = (%GLOBAL%$avg_percent_notes_hit$ / %GLOBAL%$num_players$)		:i $CastToInteger$${StructQBKey avg_percent_notes_hit}$		:i $percent_notes_hit$ = %GLOBAL%$avg_percent_notes_hit$		:i $player$ = %GLOBAL%$backup_player$	:i endif	:i $GetGlobalTags$$savegame$ = %GLOBAL%$savegame$%GLOBAL%$current_song$	:i if (%GLOBAL%$type$ = $competitive$)		:i $song_stars$ = %i(4294967295)		:i if (( isNull ->%GLOBAL%$beststars$) = %i(0))			:i $AddParam$$structure_name$ = $save_value_params$$name$ = %GLOBAL%$beststars$$value$ = %GLOBAL%$song_stars$		:i endif	:i else 		:i $song_stars$ = (%GLOBAL%$song_stats$->$stars$)	:i endif	:i if (%GLOBAL%$song_stars$ > ( isNull ->%GLOBAL%$beststars$))		:i $AddParam$$structure_name$ = $save_value_params$$name$ = %GLOBAL%$beststars$$value$ = %GLOBAL%$song_stars$	:i endif	:i $Song_score$ = (%GLOBAL%$song_stats$->$Score$)	:i if (%GLOBAL%$Song_score$ > ( isNull ->%GLOBAL%$bestscore$))		:i $CastToInteger$${StructQBKey Song_score}$		:i $AddParam$$structure_name$ = $save_value_params$$name$ = %GLOBAL%$bestscore$$value$ = %GLOBAL%$Song_score$	:i endif	:i if (%GLOBAL%$percent_notes_hit$ > %i(100))		:i $percent_notes_hit$ = %i(100)	:i endif	:i if (%GLOBAL%$percent_notes_hit$ > ( isNull ->%GLOBAL%$bestpercentage$))		:i $AddParam$$structure_name$ = $save_value_params$$name$ = %GLOBAL%$bestpercentage$$value$ = %GLOBAL%$percent_notes_hit$	:i endif	:i if $GotParam$${StructQBKey save_value_params}$		:i $SetGlobalTags$$savegame$ = %GLOBAL%$savegame$%GLOBAL%$current_song$$params$ = %GLOBAL%$save_value_params$	:i endif	:i endfunction]Script quickplay_determine_grade_based_on_score a8dc07c4 [	${Unknown [00012600675de539696969690000001800012600bfecc45b696969690000002800012400cd66c8ae696969690000003800012600c3409622696969690000004800012600cc12115e6969696900000000]}$	:i if $GMan_GoalIsActive$$goal$ = %GLOBAL%$challenge_id$		:i $GMan_GetData$$goal$ = %GLOBAL%$challenge_id$$name$ = $calculated_targets$		:i $calculated_scores$ = %GLOBAL%$calculated_targets$	:i else 		:i $extendcrc$%GLOBAL%$goal_name$%s("_info")$out$ = $goal_struct$		:i if NOT $StructureContains$$structure$ = ((~%GLOBAL%$goal_struct$)->$constants$)$name$ = $target_value$			:i $softassert$%s("quickplay_determine_grade_based_on_score: target_value not found in constants for goal %a")$a$ = %GLOBAL%$challenge_id$			:i return ${StructInt best_grade = 0}$		:i endif		:i if NOT $StructureContains$$structure$ = ((~%GLOBAL%$goal_struct$)->$Data$)$name$ = $percent_targets$			:i $softassert$%s("quickplay_determine_grade_based_on_score: percent_targets not found in goal data for goal %a")$a$ = %GLOBAL%$challenge_id$			:i return ${StructInt best_grade = 0}$		:i endif		:i %GLOBAL%$round_direction$ = $up$		:i %GLOBAL%$round_to_nearest$ = %i(0)		:i if $StructureContains$$structure$ = ((~%GLOBAL%$goal_struct$)->$Data$)$name$ = $round_direction$			:i %GLOBAL%$round_direction$ = ((~%GLOBAL%$goal_struct$)->$Data$->$round_direction$)		:i endif		:i if $StructureContains$$structure$ = ((~%GLOBAL%$goal_struct$)->$Data$)$name$ = $round_to_nearest$			:i %GLOBAL%$round_to_nearest$ = ((~%GLOBAL%$goal_struct$)->$Data$->$round_to_nearest$)		:i endif		:i $GMan_CalculateQuickplayScoreTargets$:s{			:i $target_mechanic$ = (((~%GLOBAL%$goal_struct$)->$constants$)->$target_value$)			:i $percent_targets$ = (((~%GLOBAL%$goal_struct$)->$Data$)->$percent_targets$)			:i $song_name$ = %GLOBAL%$song$			:i $Instrument$ = %GLOBAL%$Instrument$			:i $round_direction$ = %GLOBAL%$round_direction$			:i $round_to_nearest$ = %GLOBAL%$round_to_nearest$		:i :s}	:i endif	:i if NOT $GotParam$${StructQBKey calculated_scores}$		:i $softassert$%s("quickplay_determine_grade_based_on_score: Unable to calculate the scores for %a")$a$ = %GLOBAL%$challenge_id$		:i return ${StructInt best_grade = 0}$	:i endif	:i $i$ = %i(2)	:i while 	:i if (%GLOBAL%$Score$ >= (%GLOBAL%$calculated_scores$:a{%GLOBAL%$i$:a}))		:i return $best_grade$ = (%GLOBAL%$i$ + %i(1))	:i endif	:i $i$ = (%GLOBAL%$i$ - %i(1))	:i loop_to %i(3)	:i return ${StructInt best_grade = 0}$	:i endfunction]Script quickplay_determine_grade_based_on_saved_score afabb8fa [	${Unknown [00012600675de539696969690000001800012600bfecc45b696969690000002800012600cc12115e696969690000003800012600c34096226969696900000048000124001b0509c56969696900000000]}$	:i $GMan_ChallengeManagerFunc$$goal$ = $quickplay$$tool$ = $challenges$$func$ = $get_challenge_save_checksum$$params$ = :s{$song$ = %GLOBAL%$song$$goal_name$ = %GLOBAL%$goal_name$:s}	:i $GetGlobalTags$$savegame$ = %GLOBAL%$savegame$%GLOBAL%$song$	:i $best_score$ = ( isNull ->%GLOBAL%$save_checksum$)	:i $quickplay_determine_grade_based_on_score$$challenge_id$ = %GLOBAL%$challenge_id$$Score$ = %GLOBAL%$best_score$$Instrument$ = %GLOBAL%$Instrument$$song$ = %GLOBAL%$song$	:i return $best_grade$ = %GLOBAL%$best_grade$	:i endfunction]Script get_quickplay_challenge_award_points_change c3585e11 [	${Unknown [000124005e33121669696969000000180001240000319b2d6969696900000000]}$	:i %GLOBAL%$grade_change$ = (%GLOBAL%$new_grade$ - %GLOBAL%$old_grade$)	:i if (%GLOBAL%$grade_change$ > %i(0))		:i return $challenge_award_points$ = %GLOBAL%$grade_change$	:i else 		:i return ${StructInt challenge_award_points = 0}$	:i endif	:i endfunction]Script quickplay_challenge_give_award_points 0x1d612ea7 [	${Unknown [000124005e33121669696969000000180001240000319b2d69696969000000280001240067e6859a6969696900000038000124001b0509c56969696900000000]}$	:i $get_quickplay_challenge_award_points_change$$new_grade$ = %GLOBAL%$new_grade$$old_grade$ = %GLOBAL%$old_grade$	:i $get_current_progression_award_points$$savegame$ = %GLOBAL%$savegame$	:i $set_progression_award_points$$savegame$ = %GLOBAL%$savegame$$new_total_award_points$ = (%GLOBAL%$total_award_points$ + %GLOBAL%$challenge_award_points$)	:i endfunction]Script quickplay_songlist_update_awards e748a0b2 [	${		Unknown [000126008a4c762d6969696900000018]		StructQBKey ObjID = SongList_detail		StructInt song_is_locked = 0	}$		:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$ObjID$		:i return 	:i endif	:i if $song_is_jamsession$$song$ = %GLOBAL%$song_checksum$		:i %GLOBAL%$ObjID$.$se_setprops$:s{			:i $songlist_detail_stars_cont_alpha$ = %f(0.0)			:i $stars_bar_qp_alpha$ = %f(0.0)			:i $songlist_detail_info_pill_cont_alpha$ = %f(1.0)			:i $songlist_detail_info_pill_text_text$ = (~$content_source_ghtunes_artist_string$)			:i $career_gold_star_alpha$ = %f(0.0)		:i :s}		:i return 	:i endif	:i $gamemode_gettype$	:i if (%GLOBAL%$type$ !== $quickplay$)		:i if (%GLOBAL%$type$ = $competitive$)			:i %GLOBAL%$ObjID$.$se_setprops$:s{				:i $songlist_detail_stars_cont_alpha$ = %f(0.0)				:i $stars_bar_qp_alpha$ = %f(0.0)				:i $career_gold_star_alpha$ = %f(0.0)			:i :s}			:i if (%GLOBAL%$song_is_locked$ = %i(1))				:i %GLOBAL%$ObjID$.$se_setprops$:s{					:i $songlist_detail_info_pill_cont_alpha$ = %f(0.0)				:i :s}			:i else 				:i $rules$ = (~$competitive_rules$)				:i $rules_struct$ = (~%GLOBAL%$rules$)				:i $rules_str$ = (%GLOBAL%$rules_struct$->$text$)				:i if (~$game_mode$ = $fest_mode$)					:i %GLOBAL%$rules_str$ = (~$solo_fest_mode$->$text$)				:i elseif (~$game_mode$ = $fest_mode_team$)					:i %GLOBAL%$rules_str$ = (~$team_fest_mode$->$text$)				:i endif				:i %GLOBAL%$ObjID$.$se_setprops$:s{					:i $songlist_detail_info_pill_cont_alpha$ = %f(1.0)					:i $songlist_detail_info_pill_text_text$ = %GLOBAL%$rules_str$				:i :s}			:i endif		:i else 			:i %GLOBAL%$ObjID$.$se_setprops$:s{				:i $songlist_detail_stars_cont_alpha$ = %f(0.0)				:i $stars_bar_qp_alpha$ = %f(0.0)				:i $songlist_detail_info_pill_cont_alpha$ = %f(0.0)				:i $career_gold_star_alpha$ = %f(0.0)			:i :s}		:i endif		:i return 	:i endif	:i if (%GLOBAL%$song_is_locked$ = %i(1))		:i %GLOBAL%$ObjID$.$se_setprops$:s{			:i $songlist_detail_stars_cont_alpha$ = %f(0.0)			:i $stars_bar_qp_alpha$ = %f(0.0)			:i $songlist_detail_info_pill_cont_alpha$ = %f(0.0)			:i $career_gold_star_alpha$ = %f(0.0)		:i :s}		:i return 	:i endif	:i $get_savegame_from_controller$$controller$ = (~$primary_controller$)	:i $quickplay_get_awards_for_song$$song_name$ = %GLOBAL%$song_checksum$$savegame$ = %GLOBAL%$savegame$	:i $quickplay_get_best_stars_for_song$$song$ = %GLOBAL%$song_checksum$	:i $FormatText$$textname$ = $challenge_stars_text$^[953baf82]^$a$ = %GLOBAL%$challenge_awards$$b$ = %GLOBAL%$challenge_awards_total$	:i $FormatText$$textname$ = $power_star_text$^[73307931]^$s$ = %GLOBAL%$qp_power_stars$	:i $FormatText$$textname$ = $best_stars_text$^[7766f6e8]^$c$ = %GLOBAL%$best_stars$	:i $FormatText$$textname$ = $total_stars_text$^[3c71eff6]^$t$ = (%GLOBAL%$awards_earned$ + %GLOBAL%$qp_power_stars$)	:i $bar_fill$ = %f(0.0)	:i if (%GLOBAL%$awards_earned$ > %i(0))		:i $bar_fill$ = ((%GLOBAL%$awards_earned$ + %f(0.0)) / (%GLOBAL%$awards_total$ + %f(0.0)))		:i $bar_fill$ = ((%GLOBAL%$bar_fill$ * %vec2(1.0,0.0)) + (%i(1) * %vec2(0.0,1.0)))	:i endif	:i %GLOBAL%$ObjID$.$se_setprops$:s{		:i $Stars_Bar_alpha$ = %f(1.0)		:i $songlist_detail_stars_cont_alpha$ = %f(1.0)		:i $stars_bar_qp_alpha$ = %f(1.0)		:i $songlist_detail_info_pill_cont_alpha$ = %f(0.0)		:i $songlist_detail_awards_num_text$ = %GLOBAL%$challenge_stars_text$		:i $songlist_detail_awards_fill_scale$ = %GLOBAL%$bar_fill$		:i $career_gold_star_alpha$ = %f(1.0)		:i $career_star_number_text$ = %GLOBAL%$power_star_text$		:i $best_run_stars_text$ = %GLOBAL%$best_stars_text$		:i $star_total_text$ = %GLOBAL%$total_stars_text$	:i :s}	:i endfunction]Script quickplay_calc_challenge_outro_stats 0x6d50b318 [	${Unknown [0001240067e6859a6969696900000000]}$	:i $GMan_GetGoalsByPlayer$$player$ = %GLOBAL%$player$	:i $array$ = :a{:a}	:i $orig_player$ = %GLOBAL%$player$	:i if (%GLOBAL%$player$ = %i(0))		:i $player$ = (%GLOBAL%$player$ + %i(1))	:i endif	:i if (%GLOBAL%$goals_by_player_size$ > %i(0))		:i $index$ = %i(0)		:i while 		:i $goal_id$ = (%GLOBAL%$goals_by_player$:a{%GLOBAL%$index$:a})		:i $goal_string$ = (%GLOBAL%$goal_strings_by_player$:a{%GLOBAL%$index$:a})		:i %GLOBAL%$add_goal_data$ = %i(1)		:i if $ChecksumEquals$$a$ = %GLOBAL%$goal_string$$b$ = $qp_power_score_points$			:i %GLOBAL%$add_goal_data$ = %i(0)			:i $GMan_GetData$${				StructQBKey goal = quickplay				StructQBKey name = targeted_challenge_friend_index			}$						:i if (%GLOBAL%$targeted_challenge_friend_index$ >= %i(0))				:i %GLOBAL%$add_goal_data$ = %i(1)			:i endif		:i endif		:i if (%GLOBAL%$add_goal_data$ = %i(1))			:i $quickplay_get_grade$$goal_id$ = %GLOBAL%$goal_id$			:i $quickplay_get_challenge_name_string_from_checksum$$goal_name$ = %GLOBAL%$goal_string$$player$ = %GLOBAL%$player$			:i $current_progress$ = %i(0)			:i $calculated_targets$ = :a{%i(0)%i(0)%i(0):a}			:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $calculated_targets$			:i if (%GLOBAL%$orig_player$ = %i(0))				:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$name$ = $current_progress$			:i else 				:i $GMan_GetData$$goal$ = %GLOBAL%$goal_id$$player$ = %GLOBAL%$player$$name$ = $current_progress$			:i endif			:i $new_stat_entry$ = :s{				:i $goal_name$ = %GLOBAL%$goal_string$				:i $instance_name$ = %GLOBAL%$goal_id$				:i $challenge_icon$ = %GLOBAL%$goal_string$				:i $challenge_grade$ = %GLOBAL%$pending_grade$				:i $previous_grade$ = %i(0)				:i $challenge_name_string$ = %GLOBAL%$challenge_name_string$				:i $current_progress$ = %GLOBAL%$current_progress$				:i $calculated_targets$ = %GLOBAL%$calculated_targets$			:i :s}			:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = %GLOBAL%$new_stat_entry$			:i $RemoveParameter$${StructQBKey new_stat_entry}$		:i endif		:i $index$ = (%GLOBAL%$index$ + %i(1))		:i loop_to %GLOBAL%$goals_by_player_size$		:i if (%GLOBAL%$orig_player$ = %i(0))			:i $GMan_SetData$$goal$ = $quickplay$$params$ = :s{$band_outro_challenge_stats$ = %GLOBAL%$array$:s}		:i endif	:i endif	:i return $player_challenge_stats$ = %GLOBAL%$array$	:i endfunction]Script quickplay_get_challenge_outro_stats fdce12d9 [	${Unknown [0001240067e6859a6969696900000000]}$	:i if NOT $GMan_GoalIsActive$${StructQBKey goal = quickplay}$		:i return ${			StructArray player_challenge_stats			{				Floats [0.00000, 0.00000]			}			StructInt previous_song_stars = 0		}$			:i endif	:i if (%GLOBAL%$player$ = %i(0))		:i $GMan_GetData$${			StructQBKey goal = quickplay			StructQBKey name = band_outro_challenge_stats		}$				:i $player_challenge_stats$ = %GLOBAL%$band_outro_challenge_stats$	:i else 		:i $GMan_GetData$$goal$ = $quickplay$$player$ = %GLOBAL%$player$$name$ = $player_outro_challenge_stats$		:i $player_challenge_stats$ = %GLOBAL%$player_outro_challenge_stats$	:i endif	:i $GetArraySize$%GLOBAL%$player_challenge_stats$	:i if (%GLOBAL%$array_size$ = %i(0))		:i $quickplay_calc_challenge_outro_stats$$player$ = %GLOBAL%$player$	:i endif	:i $GMan_GetData$${		StructQBKey goal = quickplay		StructQBKey name = previous_song_stars	}$		:i return $player_challenge_stats$ = %GLOBAL%$player_challenge_stats$$previous_song_stars$ = %GLOBAL%$previous_song_stars$	:i endfunction]Script quickplay_save_friend_scores 0x88b378d0 [	${Unknown [00012400a7562c976969696900000000]}$	:i $AwardCase$.$AwardCaseUIStack_GetSongScores$$instrument_index$ = %GLOBAL%$instrument_index$	:i $GMan_SetData$$goal$ = $quickplay$$params$ = :s{$targeted_challenge_friend_scores$ = %GLOBAL%$display_rows$:s}	:i endfunction]Script quickplay_save_friend_stats 0x73a4ddda [	${Unknown [00012400675de5396969696900000000]}$	:i $AwardCase$.$AwardCaseUIStack_GetChallengeLeaderboard$$challenge_index$ = %GLOBAL%$challenge_id$	:i $GMan_SetData$$goal$ = $quickplay$$params$ = :s{$targeted_challenge_friend_scores$ = %GLOBAL%$display_rows$:s}	:i endfunction]Script quickplay_save_specific_friend_stat 0x9626e777 [	${Unknown [00012c0029b43fc8696969690000001800012400c32703f26969696900000000]}$	:i $target_scores$ = :a{:a}	:i $GetArraySize$%GLOBAL%$friend_scores$	:i if (%GLOBAL%$array_size$ > %i(0))		:i $i$ = %i(0)		:i while 		:i $AddArrayElement$$array$ = %GLOBAL%$target_scores$$element$ = (%GLOBAL%$friend_scores$:a{%GLOBAL%$i$:a})		:i $target_scores$ = %GLOBAL%$array$		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to (%GLOBAL%$target_index$ + %i(1))	:i endif	:i $GMan_SetData$$goal$ = $quickplay$$params$ = :s{$targeted_challenge_friend_scores$ = %GLOBAL%$target_scores$$targeted_challenge_friend_index$ = %GLOBAL%$target_index$:s}	:i endfunction]Script quickplay_start_targeted_challenge d48493b8 [	${		Unknown [00012600d24f570c696969690000001800012600a873867f696969690000002800012600c34096226969696900000038]		StructQBKey event = menu_replace	}$		:i $gamemode_gettype$	:i if (%GLOBAL%$type$ !== $quickplay$)		:i return 	:i endif	:i if NOT $GMan_GoalIsActive$${StructQBKey goal = quickplay}$		:i return 	:i endif	:i if (%GLOBAL%$challenge_name$ = $qp_power_score_points$)		:i $GMan_ChallengeManagerFunc$${			StructQBKey goal = quickplay			StructQBKey tool = challenges			StructQBKey func = enable_power_score_challenge		}$			:i else 		:i $GMan_ChallengeManagerFunc$${			StructQBKey goal = quickplay			StructQBKey tool = challenges			StructQBKey func = disable_power_score_challenge		}$			:i endif	:i $UI_SFX$${		StructQBKey menustate = generic		StructQBKey uitype = select	}$		:i $songlist_update_song_preview$${StructQBKey song = None}$	:i $GMan_SetData$$goal$ = $quickplay$$params$ = :s{$targeted_challenge$ = %GLOBAL%$challenge_name$$targeted_challenge_inst_config$ = %GLOBAL%$Instrument$:s}	:i $GMan_VenueFunc$:s{$goal$ = $quickplay$$tool$ = $venue_handler$$func$ = $set_venue$$params$ = :s{$venue_name$ = (~$g_band_lobby_current_level$):s}:s}	:i %GLOBAL%$array$ = :a{:a}	:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = %GLOBAL%$song_name$	:i $change$$current_playlist$ = %GLOBAL%$array$	:i $Playlist_SetCurrentSong$$song$ = %GLOBAL%$song_name$	:i $venue$ = (~$g_band_lobby_current_level$)	:i if $StructureContains$$structure$ = (~$LevelZones$->%GLOBAL%$venue$)$name$ = $loading_movie$		:i $create_venue_loading_screen$$movie_params$ = (~$LevelZones$->%GLOBAL%$venue$)	:i else 		:i $create_loading_screen$	:i endif	:i $GMan_MeterFunc$${		StructQBKey goal = quickplay		StructQBKey tool = challenge_meter		StructQBKey func = init_friend_target_score		StructStruct params		{			StructHeader {}		}	}$		:i $ui_event_wait$$event$ = %GLOBAL%$event$$state$ = $uistate_play_song$$Data$ = :s{$reset_target_data$ = %i(0):s}	:i endfunction]Script quickplay_pause_tool_not_internet_mode_check 0x599d749e [	:i if NOT $InInternetMode$		:i return ${StructQBKey true}$	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script quickplay_pause_tool_songs_remaining_check 0x083dc44b [	:i $Playlist_GetSize$	:i $Playlist_GetCurrentSongIndex$	:i if ((%GLOBAL%$playlist_size$ > %i(1)) AND (%GLOBAL%$current_song_index$ < %GLOBAL%$playlist_size$))		:i return ${StructQBKey true}$	:i endif	:i if (~$g_songlist_infinite_playlist$ = %i(1))		:i return ${StructQBKey true}$	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script quickplay_pause_tool_no_songs_remaining_check af150068 [	:i $Playlist_GetSize$	:i $Playlist_GetCurrentSongIndex$	:i if ((%GLOBAL%$playlist_size$ <= %i(1)) OR (%GLOBAL%$current_song_index$ >= %GLOBAL%$playlist_size$))		:i return ${StructQBKey true}$	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script quickplay_pause_tool_not_demobuild_check aa944e35 [	:i if NOT $DemoBuild$		:i return ${StructQBKey true}$	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script quickplay_get_challenge_icon 0x2d03e25b [	${Unknown [0001260037bf4f096969696900000000]}$	:i $icon_name$ = %GLOBAL%$base_name$	:i if (%GLOBAL%$base_name$ = $qp_green_notes$ OR %GLOBAL%$base_name$ = $qp_red_notes$ OR %GLOBAL%$base_name$ = $qp_yellow_notes$ OR %GLOBAL%$base_name$ = $qp_blue_notes$ OR %GLOBAL%$base_name$ = $qp_orange_notes$ OR %GLOBAL%$base_name$ = $qp_kick_notes$)		:i $icon_name$ = $qp_color_notes$	:i endif	:i if (%GLOBAL%$base_name$ = $qp_hit_notes_band$)		:i $icon_name$ = $qp_hit_notes$	:i endif	:i if (%GLOBAL%$base_name$ = $qp_streak_phrases$)		:i $icon_name$ = $qp_streak_notes$	:i endif	:i if (%GLOBAL%$base_name$ = $qp_score_power_band$)		:i $icon_name$ = $qp_score_power$	:i endif	:i if (%GLOBAL%$base_name$ = $qp_score_points_band$ OR %GLOBAL%$base_name$ = $qp_score_points_std_band$)		:i $icon_name$ = $qp_score_points$	:i endif	:i return $icon_name$ = %GLOBAL%$icon_name$	:i endfunction]Script quickplay_get_challenge_name_string_from_checksum a82bcd75 [	${Unknown [00012600bfecc45b6969696900000000]}$	:i $challenge_name_string$ = ^[f7ce2fcb]^	:i $challenge_desc_string$ = ^[f7ce2fcb]^	:i $extendcrc$%GLOBAL%$goal_name$%s("_info")$out$ = $goal_struct$	:i if NOT $globalexists$$name$ = %GLOBAL%$goal_struct$		:i return $challenge_name_string$ = %GLOBAL%$challenge_name_string$$challenge_desc_string$ = %GLOBAL%$challenge_desc_string$	:i endif	:i if $StructureContains$$structure$ = (~%GLOBAL%$goal_struct$)$title_string$		:i $challenge_name_string$ = (~%GLOBAL%$goal_struct$->$title_string$)		:i $challenge_desc_string$ = (~%GLOBAL%$goal_struct$->$constants$->$desc_txt$)	:i endif	:i if $GotParam$${StructQBKey player}$		:i if (%GLOBAL%$player$ > %i(0))			:i $getplayerinfo$%GLOBAL%$player$$lefty_flip$			:i $getplayerinfo$%GLOBAL%$player$$part$			:i if (%GLOBAL%$part$ = $drum$ AND %GLOBAL%$lefty_flip$ = %i(1))				:i if $StructureContains$$structure$ = (~%GLOBAL%$goal_struct$)$drum_lefty_string$					:i $challenge_name_string$ = (~%GLOBAL%$goal_struct$->$drum_lefty_string$)					:i $challenge_desc_string$ = (~%GLOBAL%$goal_struct$->$constants$->$drum_lefty_desc_text$)				:i endif			:i endif		:i endif	:i endif	:i return $challenge_name_string$ = %GLOBAL%$challenge_name_string$$challenge_desc_string$ = %GLOBAL%$challenge_desc_string$	:i endfunction]Script autotest_quickplay_build_bot_settings e940ce51 [	${		Unknown [0001240067e6859a696969690000001800012b00a053dc456969696900000028]		StructFloat force_accuracy = 1.00	}$		:i $new_rules$ = :a{		:i :s{$bot_hit_percent$ = %GLOBAL%$force_accuracy$:s}		:i :s{$bot_whammy$ = %i(1):s}		:i :s{$star_power_debug_mode$ = %i(2):s}	:i :a}	:i $getplayerinfo$%GLOBAL%$player$$part$	:i %GLOBAL%$instrument_props$ = (%GLOBAL%$challenge_props$->%GLOBAL%$part$)	:i if NOT $GotParam$${StructQBKey instrument_props}$		:i return ${			StructArray player_bot_rules			{				Floats [0.00000, 0.00000]			}		}$			:i endif	:i $GetArraySize$%GLOBAL%$instrument_props$	:i if (%GLOBAL%$array_size$ < %i(0))		:i return ${			StructArray player_bot_rules			{				Floats [0.00000, 0.00000]			}		}$			:i endif	:i $i$ = %i(0)	:i while 	:i $goal_name$ = ((%GLOBAL%$instrument_props$:a{%GLOBAL%$i$:a})->$goal_name$)	:i $new_setting$ = :s{:s}	:i switch (%GLOBAL%$goal_name$)		:i case $qp_alt_strum$			:i $AddParam$${				StructQBKey structure_name = new_setting				StructQBKey name = bot_strum_type				StructQBKey value = alternate			}$						:i $AddArrayElement$$array$ = %GLOBAL%$new_rules$$element$ = %GLOBAL%$new_setting$			:i $new_rules$ = %GLOBAL%$array$			:i endcase		case $qp_up_strum$			:i $AddParam$${				StructQBKey structure_name = new_setting				StructQBKey name = bot_strum_type				StructQBKey value = up			}$						:i $AddArrayElement$$array$ = %GLOBAL%$new_rules$$element$ = %GLOBAL%$new_setting$			:i $new_rules$ = %GLOBAL%$array$			:i endcase		case $qp_down_strum$			:i $AddParam$${				StructQBKey structure_name = new_setting				StructQBKey name = bot_strum_type				StructQBKey value = down			}$						:i $AddArrayElement$$array$ = %GLOBAL%$new_rules$$element$ = %GLOBAL%$new_setting$			:i $new_rules$ = %GLOBAL%$array$			:i endcase		case $qp_tap_strum$			:i $AddParam$${				StructQBKey structure_name = new_setting				StructQBKey name = bot_strum_type				StructQBKey value = touch			}$						:i $AddArrayElement$$array$ = %GLOBAL%$new_rules$$element$ = %GLOBAL%$new_setting$			:i $new_rules$ = %GLOBAL%$array$			:i endcase		case $qp_rockout_time$			:i $AddParam$${				StructQBKey structure_name = new_setting				StructQBKey name = bot_rockout				StructInt value = 1			}$						:i $AddArrayElement$$array$ = %GLOBAL%$new_rules$$element$ = %GLOBAL%$new_setting$			:i $new_rules$ = %GLOBAL%$array$			:i endcase		case $qp_spower_time_band$			:i $getplayerinfo$%GLOBAL%$player$$band$			:i $SetBandInfo$%GLOBAL%$band$$use_bot_coordinated_starpower$ = %i(1)			:i endcase		case $qp_multiplier_time_band$			:i $getplayerinfo$%GLOBAL%$player$$band$			:i $SetBandInfo$%GLOBAL%$band$$use_bot_coordinated_starpower$ = %i(1)			:i endcase		case $qp_score_spower_band$			:i $getplayerinfo$%GLOBAL%$player$$band$			:i $SetBandInfo$%GLOBAL%$band$$use_bot_coordinated_starpower$ = %i(1)	:i end_switch	:i $i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i return $player_bot_rules$ = %GLOBAL%$new_rules$	:i endfunction]Script quickplay_autotest_start 0x8fb870fa [	:i $BlockForScript$${StructQBKey guitar_startup}$	:i $GMan_QuickStartGoal$${		StructQBKey goal_struct = quickplay_info		StructQBKey goal_name = quickplay	}$		:i if (~$autotest_targeted_challenge$ !== $None$)		:i $GMan_SetData$$goal$ = $quickplay$$params$ = :s{			:i $targeted_challenge$ = (~$autotest_targeted_challenge$)			:i $targeted_challenge_inst_config$ = (~$autotest_targetd_challenge_part$)		:i :s}	:i endif	:i endfunction]Script quickplay_targeting_player_get_result 0x2269a64f [	${StructInt player = -1}$	:i if (%GLOBAL%$player$ = %i(4294967295))		:i $player$ = (~$g_leader_player_num$)	:i endif	:i $gamemode_gettype$	:i if NOT (%GLOBAL%$type$ = $quickplay$)		:i return ${StructQBKey result = not_targeting_player}$	:i endif	:i if NOT $GMan_GoalIsActive$${StructQBKey goal = quickplay}$		:i return ${StructQBKey result = not_targeting_player}$	:i endif	:i $GMan_GetData$${		StructQBKey goal = quickplay		StructQBKey name = targeted_challenge_friend_index	}$		:i if (%GLOBAL%$targeted_challenge_friend_index$ >= %i(0))		:i $GMan_GetData$${			StructQBKey goal = quickplay			StructQBKey name = targeted_challenge_friend_scores		}$				:i $GMan_GetData$${			StructQBKey goal = quickplay			StructQBKey name = targeted_challenge		}$				:i $GMan_GetData$${			StructQBKey goal = quickplay			StructQBKey name = targeted_challenge_inst_config		}$				:i $extendcrc$%GLOBAL%$targeted_challenge$%s("_info")$out$ = $targeted_challenge_info$		:i if ((%GLOBAL%$targeted_challenge_inst_config$ = $band$) OR (%GLOBAL%$targeted_challenge_inst_config$ = $traditional_band$))			:i $FormatText$$checksumname$ = $player_challenge_id$%s("%n")$n$ = (~%GLOBAL%$targeted_challenge_info$->$name$)		:i elseif (%GLOBAL%$player$ > %i(0))			:i $FormatText$$checksumname$ = $player_challenge_id$%s("%n_p%p")$n$ = (~%GLOBAL%$targeted_challenge_info$->$name$)$p$ = %GLOBAL%$player$		:i else 			:i return ${				StructQBKey result = not_targeting_player				StructQBKey target_instance_name = None			}$					:i endif		:i if NOT $GMan_GoalIsActive$$goal$ = %GLOBAL%$player_challenge_id$			:i $quickplay_reset_target_data$			:i return ${				StructQBKey result = not_targeting_player				StructQBKey target_instance_name = None			}$					:i endif		:i if $challenge_is_band_subtype$$goal_id$ = %GLOBAL%$player_challenge_id$			:i $GMan_GetData$$goal$ = %GLOBAL%$player_challenge_id$$name$ = $current_progress$		:i else 			:i $GMan_GetData$$goal$ = %GLOBAL%$player_challenge_id$$player$ = %GLOBAL%$player$$name$ = $current_progress$		:i endif		:i if (%GLOBAL%$current_progress$ > (%GLOBAL%$targeted_challenge_friend_scores$:a{%GLOBAL%$targeted_challenge_friend_index$:a}->$Score$))			:i return $result$ = $success$$target_instance_name$ = %GLOBAL%$player_challenge_id$		:i elseif (%GLOBAL%$current_progress$ < (%GLOBAL%$targeted_challenge_friend_scores$:a{%GLOBAL%$targeted_challenge_friend_index$:a}->$Score$))			:i return $result$ = $fail$$target_instance_name$ = %GLOBAL%$player_challenge_id$		:i else 			:i return $result$ = $tie$$target_instance_name$ = %GLOBAL%$player_challenge_id$		:i endif	:i else 		:i return ${			StructQBKey result = not_targeting_player			StructQBKey target_instance_name = None		}$			:i endif	:i endfunction]Script quickplay_targeting_player_get_opponent_gamertag 0x381c45ef [	:i $gamemode_gettype$	:i if NOT (%GLOBAL%$type$ = $quickplay$)		:i return ${StructQBKey gamertag = null}$	:i endif	:i if NOT $GMan_GoalIsActive$${StructQBKey goal = quickplay}$		:i return ${StructQBKey gamertag = null}$	:i endif	:i $GMan_GetData$${		StructQBKey goal = quickplay		StructQBKey name = targeted_challenge_friend_index	}$		:i if (%GLOBAL%$targeted_challenge_friend_index$ >= %i(0))		:i $GMan_GetData$${			StructQBKey goal = quickplay			StructQBKey name = targeted_challenge_friend_scores		}$				:i return $gamertag$ = (%GLOBAL%$targeted_challenge_friend_scores$:a{%GLOBAL%$targeted_challenge_friend_index$:a}->$gamer_tag$)	:i else 		:i return ${StructQBKey gamertag = null}$	:i endif	:i endfunction]