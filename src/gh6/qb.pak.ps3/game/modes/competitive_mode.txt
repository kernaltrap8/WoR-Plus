Unknown [1c0000000000000000009e200000000000000000]SectionQBKey competitive_rules faceoffSectionArray competitive_rules_array{	ArrayQBKey	[		faceoff		momentum		momentum_plus		streakers		do_or_die		perfectionist		elimination		solo_fest_mode		team_faceoff		team_momentum		team_streakers		team_do_or_die		team_perfectionist		team_elimination		team_fest_mode		band_vs_band	]}SectionArray TEMP_net_comp_goals{	ArrayQBKey	[		do_or_die		elimination	]}SectionStruct band_vs_band{	StructHeader	{		StructQBStringQs text = 0x47dc962b		StructQBStringQs upper_text = 0x6fb6c159		StructQBStringQs description = 0x7f19953e		StructQBStringQs full_rules = b0f243fe		StructQBKey image = GR_compete_BAND_v_BAND		StructQBKey condition = band_lobby_is_public_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = Score		StructInt team = 1		StructInt highway_glow = 0		StructQBKey section_timer = None	}}SectionStruct solo_fest_mode{	StructHeader	{		StructQBStringQs text = 0x752dc50e		StructQBStringQs upper_text = dd3feb54		StructQBStringQs description = 0x22865f43		StructQBStringQs full_rules = 0x91564db2		StructQBKey image = GR_competitive_fest_mode		StructQBKey condition = band_lobby_is_vs_state		StructInt team = 0		StructInt highway_glow = 0		StructQBKey section_timer = None	}}SectionStruct team_fest_mode{	StructHeader	{		StructQBStringQs text = d3a5fe1f		StructQBStringQs upper_text = 0x1702ecf7		StructQBStringQs description = 0x94d3514f		StructQBStringQs full_rules = 0x7a70b167		StructQBKey image = GR_compete_TEAM_fest_mode		StructQBKey condition = band_lobby_is_vs_state		StructInt team = 1		StructInt highway_glow = 0		StructQBKey section_timer = None	}}SectionStruct faceoff{	StructHeader	{		StructQBStringQs text = 0x4bf74995		StructQBStringQs upper_text = 0x904d957a		StructQBStringQs description = 0x6a68700a		StructQBStringQs full_rules = 0x8e1c4228		StructQBKey image = GR_competitive_pro_faceoff		StructQBKey condition = band_lobby_is_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = Score		StructInt team = 0		StructInt highway_glow = 0		StructQBKey section_timer = None	}}SectionStruct team_faceoff{	StructHeader	{		StructQBStringQs text = a094ae3a		StructQBStringQs upper_text = 0x239c19c0		StructQBStringQs description = c0f204c5		StructQBStringQs full_rules = 0x9aab44f4		StructQBKey image = GR_compete_TEAM_pro_faceoff		StructQBKey condition = band_lobby_is_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = Score		StructInt team = 1		StructInt highway_glow = 0		StructQBKey section_timer = None	}}SectionStruct do_or_die{	StructHeader	{		StructQBStringQs text = c86fae2a		StructQBStringQs upper_text = bd8a86e3		StructQBStringQs description = eaf8cc07		StructQBStringQs full_rules = 0x1af46706		StructQBKey image = GR_competitive_do_or_die		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = performance_value		StructQBKey starpower = invincible		StructInt team = 0		StructInt highway_glow = 1		StructQBKey section_timer = every_section		StructStruct elimination_rules		{			StructHeader			{				StructQBKey criteria = notes_missed				StructInt criteria_value = 3				StructQBKey status_display = notes_missed				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey revive_interval = section				StructInt revive_interval_value = 1				StructInt vocals_revive_interval_value = 1			}		}		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = alive				StructInt criteria_value = 1				StructQBKey interval = section				StructInt interval_value = 1				StructInt vocals_interval_value = 1				StructQBKey reward = performance_value				StructInt reward_value = 1			}		}	}}SectionStruct team_do_or_die{	StructHeader	{		StructQBStringQs text = 0x2abdc296		StructQBStringQs upper_text = a6c43657		StructQBStringQs description = 0x7d248873		StructQBStringQs full_rules = 0x70c85726		StructQBKey image = GR_compete_TEAM_do_or_die		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = performance_value		StructQBKey starpower = invincible		StructInt team = 1		StructInt highway_glow = 1		StructQBKey section_timer = every_section		StructStruct elimination_rules		{			StructHeader			{				StructQBKey criteria = notes_missed				StructInt criteria_value = 3				StructQBKey status_display = notes_missed				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey revive_interval = section				StructInt revive_interval_value = 1				StructInt vocals_revive_interval_value = 1			}		}		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = alive				StructInt criteria_value = 1				StructQBKey interval = section				StructInt interval_value = 1				StructInt vocals_interval_value = 1				StructQBKey reward = performance_value				StructInt reward_value = 1			}		}	}}SectionStruct momentum{	StructHeader	{		StructQBStringQs text = b66a211e		StructQBStringQs upper_text = e70e6d12		StructQBStringQs description = 0x4ce34087		StructQBStringQs full_rules = 0x0afa400d		StructQBKey image = GR_competitive_momentum		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = all_one		StructQBKey difficulty_value = medium		StructQBKey ranking_criteria = Score		StructInt double_kick_drum = 0		StructInt team = 0		StructInt highway_glow = 0		StructQBKey section_timer = None		StructStruct elimination_rules		{			StructHeader			{				StructQBKey criteria = notes_missed_sequential				StructInt criteria_value = 3				StructQBKey status_display = notes_missed				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey effect = difficulty				StructQBKey effect_value = down			}		}		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = streak				StructInt criteria_value = 20				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey reward = difficulty				StructQBKey reward_value = up			}		}	}}SectionStruct momentum_plus{	StructHeader	{		StructQBStringQs text = ee586482		StructQBStringQs upper_text = 0x3d877751		StructQBStringQs description = 0x44c46c93		StructQBStringQs full_rules = ff25eef3		StructQBKey image = GR_competitive_momentum		StructQBKey condition = band_lobby_is_local_vs_state		StructQBKey difficulty = all_one		StructQBKey difficulty_value = medium		StructQBKey ranking_criteria = Score		StructInt double_kick_drum = 0		StructQBKey starpower = attack		StructInt team = 0		StructInt highway_glow = 0		StructQBKey section_timer = None		StructStruct elimination_rules		{			StructHeader			{				StructQBKey criteria = notes_missed_sequential				StructInt criteria_value = 3				StructQBKey status_display = notes_missed				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey effect = difficulty				StructQBKey effect_value = down			}		}		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = streak				StructInt criteria_value = 20				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey reward = difficulty				StructQBKey reward_value = up			}		}		StructStruct attack_rules		{			StructHeader			{				StructQBKey target = leader_only				StructQBKey criteria = starpower				StructInt criteria_value = 1				StructQBKey effect = difficulty				StructQBKey effect_value = beginner				StructQBKey attack_fx = attack_bolt			}		}	}}SectionStruct team_momentum{	StructHeader	{		StructQBStringQs text = 0x10e21a0f		StructQBStringQs upper_text = 0x2d336ab1		StructQBStringQs description = 0x83a17f71		StructQBStringQs full_rules = c423a73a		StructQBKey image = GR_compete_TEAM_momentum		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = all_one		StructQBKey difficulty_value = medium		StructQBKey ranking_criteria = Score		StructInt double_kick_drum = 0		StructInt highway_glow = 0		StructQBKey section_timer = None		StructStruct elimination_rules		{			StructHeader			{				StructQBKey criteria = notes_missed_sequential				StructInt criteria_value = 3				StructQBKey status_display = notes_missed				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey effect = difficulty				StructQBKey effect_value = down			}		}		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = streak				StructInt criteria_value = 20				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey reward = difficulty				StructQBKey reward_value = up			}		}		StructInt team = 1	}}SectionStruct perfectionist{	StructHeader	{		StructQBStringQs text = cdcc274f		StructQBStringQs upper_text = ba6494bc		StructQBStringQs description = ceed589f		StructQBStringQs full_rules = db5bb9be		StructQBKey image = GR_competitive_perfectionist		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = performance_value		StructInt team = 0		StructQBKey starpower = disabled		StructInt highway_glow = 1		StructQBKey section_timer = every_section		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = percent_hit				StructQBKey criteria_value = high_to_low				StructQBKey interval = section				StructInt interval_value = 1				StructQBKey reward = performance_value				StructArray reward_value				{					ArrayInteger					[						4						2						1					]				}			}		}	}}SectionStruct team_perfectionist{	StructHeader	{		StructQBStringQs text = 0x0d61ebad		StructQBStringQs upper_text = eacfcece		StructQBStringQs description = 0x8103a1a1		StructQBStringQs full_rules = 0x804505f1		StructQBKey image = GR_compete_TEAM_perfectionist		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = performance_value		StructQBKey starpower = disabled		StructInt highway_glow = 1		StructQBKey section_timer = every_section		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = percent_hit				StructQBKey criteria_value = high_to_low				StructQBKey interval = section				StructInt interval_value = 1				StructQBKey reward = performance_value				StructArray reward_value				{					ArrayInteger					[						4						2						1					]				}			}		}		StructInt team = 1	}}SectionStruct elimination{	StructHeader	{		StructQBStringQs text = 0x47f78838		StructQBStringQs upper_text = 0x46165772		StructQBStringQs description = 0x93809fb6		StructQBStringQs full_rules = 0x2c93896e		StructQBKey image = GR_competitive_elimination		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = elimination_order		StructInt team = 0		StructInt min_players = 3		StructInt highway_glow = 1		StructQBKey section_timer = even_divisions		StructStruct elimination_rules		{			StructHeader			{				StructQBKey criteria = Score				StructQBKey criteria_value = lowest				StructQBKey interval = num_players				StructInt interval_value = 2				StructInt player_lives = 1			}		}	}}SectionStruct team_elimination{	StructHeader	{		StructQBStringQs text = ac946f97		StructQBStringQs upper_text = f5c7dbc8		StructQBStringQs description = 0x46d03421		StructQBStringQs full_rules = a31a4922		StructQBKey image = GR_compete_TEAM_elimination		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = elimination_order		StructInt highway_glow = 1		StructQBKey section_timer = even_divisions		StructStruct elimination_rules		{			StructHeader			{				StructQBKey criteria = Score				StructQBKey criteria_value = lowest				StructQBKey interval = num_players				StructInt interval_value = 2				StructInt player_lives = 1			}		}		StructInt team = 1	}}SectionStruct streakers{	StructHeader	{		StructQBStringQs text = 0x78525dae		StructQBStringQs upper_text = 0x3e096adf		StructQBStringQs description = 0x28fdc277		StructQBStringQs full_rules = e6667b79		StructQBKey image = GR_competitive_streakers		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = performance_value		StructInt team = 0		StructInt highway_glow = 0		StructQBKey section_timer = None		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = streak				StructInt criteria_value = 10				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey reward = performance_value				StructQBKey reward_value = multiplier			}		}	}}SectionStruct team_streakers{	StructHeader	{		StructQBStringQs text = 0x9a803112		StructQBStringQs upper_text = 0x2547da6b		StructQBStringQs description = 0x2f24f254		StructQBStringQs full_rules = 0x06ae777a		StructQBKey image = GR_compete_TEAM_streakers		StructQBKey condition = band_lobby_is_private_vs_state		StructQBKey difficulty = any		StructQBKey ranking_criteria = performance_value		StructInt highway_glow = 0		StructQBKey section_timer = None		StructStruct bonus_rules		{			StructHeader			{				StructQBKey criteria = streak				StructInt criteria_value = 10				StructQBKey interval = instant				StructInt interval_value = 1				StructQBKey reward = performance_value				StructQBKey reward_value = multiplier			}		}		StructInt team = 1	}}SectionStruct competitive_info{	StructHeader	{		StructString name = "competitive"		StructQBKey goal_type = game_mode		StructStruct initial_data		{			StructHeader			{				StructArray eliminated_players				{					Floats [0.00000, 0.00000]				}			}		}		StructStruct Data		{			StructHeader			{				StructArray eliminated_players				{					Floats [0.00000, 0.00000]				}				StructArray last_missed_note_index				{					ArrayInteger					[						4294967295						4294967295						4294967295						4294967295						4294967295						4294967295						4294967295						4294967295					]				}				StructArray overstrum_total				{					ArrayInteger					[						0						0						0						0						0						0						0						0					]				}				StructArray difficulty_changes				{					ArrayInteger					[						0						0						0						0						0						0						0						0					]				}				StructArray streak_bases				{					ArrayInteger					[						0						0						0						0						0						0						0						0					]				}				StructInt current_section = 0				StructInt num_local_finished_phrase = 0				StructInt elimination_win = 0				StructStruct results_screen_goal_data				{					StructHeader					{						StructQBStringQs column_title = 0x302c47e0						StructQBKey data_source = player_info_data						StructQBKey var_name = Score						StructQBKey ranking_method = highest_to_lowest					}				}			}		}		StructStruct player_data		{			StructHeader			{				StructInt performance_value = 0				StructInt strikes = 0				StructInt invincible = 0				StructInt eliminated = 0				StructInt current_percent_hit = -1				StructInt current_vocal_percent_hit = -1			}		}		StructStruct constants		{			StructHeader {}		}		StructArray checkpoints		{			ArrayStruct			[				StructHeader				{					StructString name = "main"					StructArray tools					{						ArrayStruct						[							StructHeader							{								StructString name = "pause"								StructQBKey type = Pause								StructStruct settings								{									StructHeader									{										StructStruct default_options										{											StructHeader											{												StructQBKey resume												StructQBKey quit											}										}										StructArray custom_options										{											Floats [0.00000, 0.00000]										}									}								}							}							StructHeader							{								StructQBString goal_debug_bot_struct							}							StructHeader							{								StructString name = "miss_listener"								StructQBKey type = event_listener								StructQBKey callback_mode = any								StructArray events								{									ArrayQBKey									[										missed_notep1										missed_notep2										missed_notep3										missed_notep4										missed_notep5										missed_notep6										missed_notep7										missed_notep8									]								}								StructQBKey dont_start_on_enter							}							StructHeader							{								StructString name = "extra_strum_listener"								StructQBKey type = event_listener								StructQBKey callback_mode = any								StructArray events								{									ArrayQBKey									[										unnecessary_notep1										unnecessary_notep2										unnecessary_notep3										unnecessary_notep4										unnecessary_notep5										unnecessary_notep6										unnecessary_notep7										unnecessary_notep8									]								}								StructQBKey got_event = competitive_main_miss_listener_gotEvent								StructQBKey dont_start_on_enter							}							StructHeader							{								StructString name = "vocals_listener"								StructQBKey type = event_listener								StructQBKey callback_mode = any								StructArray events								{									ArrayQBKey									[										vocals_end_phrase_eventp1										vocals_end_phrase_eventp2										vocals_end_phrase_eventp3										vocals_end_phrase_eventp4										vocals_end_phrase_eventp5										vocals_end_phrase_eventp6										vocals_end_phrase_eventp7										vocals_end_phrase_eventp8									]								}							}							StructHeader							{								StructString name = "vocals_miss_listener"								StructQBKey type = event_listener								StructQBKey callback_mode = any								StructArray events								{									ArrayQBKey									[										vocals_note_miss_eventp1										vocals_note_miss_eventp2										vocals_note_miss_eventp3										vocals_note_miss_eventp4										vocals_note_miss_eventp5										vocals_note_miss_eventp6										vocals_note_miss_eventp7										vocals_note_miss_eventp8									]								}								StructQBKey got_event = competitive_main_miss_listener_gotEvent								StructQBKey dont_start_on_enter							}							StructHeader							{								StructString name = "vocals_hit_listener"								StructQBKey type = event_listener								StructQBKey callback_mode = any								StructArray events								{									ArrayQBKey									[										vocals_note_hit_eventp1										vocals_note_hit_eventp2										vocals_note_hit_eventp3										vocals_note_hit_eventp4										vocals_note_hit_eventp5										vocals_note_hit_eventp6										vocals_hit_hit_eventp7										vocals_note_hit_eventp8									]								}								StructQBKey dont_start_on_enter							}							StructHeader							{								StructString name = "streak_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = playerinfo											StructQBKey var = current_run											StructQBKey type = int										}																		]								}								StructQBKey dont_start_on_enter							}							StructHeader							{								StructString name = "Starpower_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = playerinfo											StructQBKey var = star_power_used											StructQBKey type = int										}																		]								}							}							StructHeader							{								StructString name = "strike_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = goalplayerdata											StructQBKey var = strikes											StructQBKey type = int										}																		]								}							}							StructHeader							{								StructString name = "difficulty_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = playerinfo											StructQBKey var = difficulty											StructQBKey type = checksum										}																		]								}							}							StructHeader							{								StructString name = "score_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = playerinfo											StructQBKey var = Score											StructQBKey type = float										}										StructHeader										{											StructQBKey source = goalplayerdata											StructQBKey var = performance_value											StructQBKey type = int										}																		]								}							}							StructHeader							{								StructString name = "percent_hit_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = goalplayerdata											StructQBKey var = current_vocal_percent_hit											StructQBKey type = float										}																		]								}							}							StructHeader							{								StructString name = "elimination_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = goalplayerdata											StructQBKey var = eliminated											StructQBKey type = int										}																		]								}							}							StructHeader							{								StructString name = "interactive_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = playerinfo											StructQBKey var = interactive											StructQBKey type = int										}																		]								}							}							StructHeader							{								StructString name = "invincible_watcher"								StructQBKey type = var_watcher								StructArray vars								{									ArrayStruct									[										StructHeader										{											StructQBKey source = goalplayerdata											StructQBKey var = invincible											StructQBKey type = int										}																		]								}							}							StructHeader							{								StructString name = "win_timer"								StructQBKey type = timer								StructInt start_time = 5								StructInt end_time = 0								StructQBKey dont_start_on_enter								StructQBKey dont_show_on_enter								StructQBKey dont_show_expire_message								StructQBKey timer_style = gh5_style								StructInt attach_hud_to_player = 0							}							StructHeader							{								StructString name = "section_timer"								StructQBKey type = timer								StructInt start_time = 5								StructInt end_time = 0								StructQBKey timer_style = gh5_style								StructQBKey dont_expire_checkpoint								StructQBKey dont_start_on_enter								StructQBKey dont_show_on_enter								StructInt attach_hud_to_player = 0								StructQBKey beep_synced							}							StructHeader							{								StructString name = "comp_meter"								StructQBKey type = competitive_meter								StructQBKey score_gap_UI_script = competitive_show_score_gap								StructQBKey rank_change_script = competitive_rank_change								StructQBKey dont_start_on_enter							}							StructHeader							{								StructString name = "section_watcher"								StructQBKey type = section_watcher								StructQBKey section_marker_hit = competitive_main_section_watcher_section_marker_hit								StructQBKey custom_section_hit = competitive_main_section_watcher_section_marker_hit								StructQBKey dont_start_on_enter							}												]					}				}						]		}	}}Script competitive_pause_quit a1e89d81 [	:i $GMan_SendCallbackToAllGoals$${		StructString suffix = "song_complete"		StructStruct callback_data		{			StructHeader			{				StructQBKey event = song_quit			}		}	}$		:i $GMan_ShutDownGameModeGoal$	:i $kill_gem_scroller$ isNull 	:i $songlist_remove_first_song_in_playlist$	:i $songlist_clear_playlist$	:i $PushDisableRendering$${		StructQBKey context = going_into_songlist		StructQBKey type = unchecked	}$		:i $generic_event_back$${StructQBKey state = UIState_songlist}$	:i endfunction]Script competitive_post_activate 0x4e846b84 [	:i if (~$competitive_rules$ = $null$)		:i $change$${StructQBKey competitive_rules = do_or_die}$	:i endif	:i $competitive_store_player_difficulty$	:i $competitive_rule_difficulty$	:i endfunction]Script competitive_main_enter bb057909 [	:i %GLOBAL%$unhide_sp_meter$ = %i(1)	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$starpower$		:i if (~%GLOBAL%$ruleset$->$starpower$ = $disabled$)			:i $change$${StructInt disable_all_starpower = 1}$			:i %GLOBAL%$unhide_sp_meter$ = %i(0)			:i $GetNumPlayersInGame$${StructQBKey on_screen}$			:i if (%GLOBAL%$num_players_shown$ > %i(0))				:i $GetFirstPlayer$${StructQBKey on_screen}$				:i while 				:i $hide_sp_meter$$player$ = %GLOBAL%$player$				:i $GetNextPlayer$$on_screen$$player$ = %GLOBAL%$player$				:i loop_to %GLOBAL%$num_players_shown$			:i endif		:i endif	:i endif	:i if (%GLOBAL%$unhide_sp_meter$ = %i(1))		:i $GetNumPlayersInGame$${StructQBKey on_screen}$		:i if (%GLOBAL%$num_players_shown$ > %i(0))			:i $GetFirstPlayer$${StructQBKey on_screen}$			:i while 			:i $show_sp_meter$$player$ = %GLOBAL%$player$			:i $GetNextPlayer$$on_screen$$player$ = %GLOBAL%$player$			:i loop_to %GLOBAL%$num_players_shown$		:i endif	:i endif	:i endfunction]Script competitive_song_started acc8c348 [	:i $rules$ = (~$competitive_rules$)	:i $highway_glow$ = ((~%GLOBAL%$rules$)->$highway_glow$)	:i $GetFirstPlayer$${StructQBKey local}$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i $GMan_SectionWatcherFunc$$goal$ = $competitive$$tool$ = $section_watcher$$func$ = $start$$params$ = :s{$highway_glow$ = %GLOBAL%$highway_glow$:s}	:i $GMan_VarWatcherFunc$${		StructQBKey goal = competitive		StructQBKey tool = streak_watcher		StructQBKey func = start	}$		:i $competitive_rule_ranking_criteria$	:i $competitive_rule_elimination$	:i $competitive_rule_bonus$	:i $competitive_start_sound_scripts$	:i if NOT (~$competitive_rules$ = $team_faceoff$ OR ~$competitive_rules$ = $band_vs_band$)		:i $GetNumPlayersInGame$${StructQBKey on_screen}$		:i if (%GLOBAL%$num_players_shown$ > %i(0))			:i $GetFirstPlayer$${StructQBKey on_screen}$			:i while 			:i $competitive_set_difficulty_indicator$$player$ = %GLOBAL%$player$			:i $GetNextPlayer$$on_screen$$player$ = %GLOBAL%$player$			:i loop_to %GLOBAL%$num_players_shown$		:i endif	:i endif	:i $GMan_SetData$${		StructQBKey goal = competitive		StructStruct params		{			StructHeader			{				StructInt elimination_win = 0			}		}	}$		:i endfunction]Script competitive_store_player_difficulty d479e24b [	:i $GetNumPlayersInGame$${StructQBKey local}$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$${StructQBKey local}$		:i %GLOBAL%$player_difficulties$ = :a{:a}		:i %GLOBAL%$player_expert_plus_setting$ = :a{:a}		:i while 		:i $getplayerinfo$%GLOBAL%$player$$difficulty$		:i $getplayerinfo$%GLOBAL%$player$$double_kick_drum$		:i %GLOBAL%$player_difficulties$ = (%GLOBAL%$player_difficulties$ + %GLOBAL%$difficulty$)		:i %GLOBAL%$player_expert_plus_setting$ = (%GLOBAL%$player_expert_plus_setting$ + %GLOBAL%$double_kick_drum$)		:i $GetNextPlayer$$local$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$		:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$player_difficulties$ = %GLOBAL%$player_difficulties$$player_expert_plus_setting$ = %GLOBAL%$player_expert_plus_setting$:s}	:i endif	:i endfunction]Script competitive_restore_player_difficulty 0x1d56c86f [	:i $GMan_GetData$${		StructQBKey goal = competitive		StructQBKey player_difficulties	}$		:i $GMan_GetData$${		StructQBKey goal = competitive		StructQBKey player_expert_plus_setting	}$		:i if NOT $GotParam$${StructQBKey player_difficulties}$		:i return 	:i endif	:i $GetNumPlayersInGame$${StructQBKey local}$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$${StructQBKey local}$		:i %GLOBAL%$i$ = %i(0)		:i while 		:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = (%GLOBAL%$player_difficulties$:a{%GLOBAL%$i$:a})		:i $SetPlayerInfo$%GLOBAL%$player$$double_kick_drum$ = (%GLOBAL%$player_expert_plus_setting$:a{%GLOBAL%$i$:a})		:i $GetNextPlayer$$local$$player$ = %GLOBAL%$player$		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script competitive_main_section_timer_expire 0x42fabb7d [	:i $GMan_TimerFunc$${		StructQBKey goal = competitive		StructQBKey tool = section_timer		StructQBKey func = hide	}$		:i $GMan_TimerFunc$${		StructQBKey goal = competitive		StructQBKey tool = section_timer		StructQBKey func = reset	}$		:i $GMan_TimerFunc$${		StructQBKey goal = competitive		StructQBKey tool = section_timer		StructQBKey func = stop	}$		:i endfunction]Script competitive_main_strike_watcher_varUpdated c894a60d [	:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$	:i if (%GLOBAL%$is_onscreen$ = %i(0))		:i return 	:i endif	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$elimination_rules$		:i %GLOBAL%$elimination_ruleset$ = (~%GLOBAL%$ruleset$->$elimination_rules$)		:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$effect$			:i $getplayerinfo$%GLOBAL%$player$$difficulty$			:i if ((%GLOBAL%$elimination_ruleset$->$effect$ = $difficulty$) AND (%GLOBAL%$difficulty$ = $beginner$))				:i %GLOBAL%$current_value$ = %i(0)			:i endif		:i endif	:i endif	:i $competitive_meter_update_strikes$$player$ = %GLOBAL%$player$$strikes$ = %GLOBAL%$current_value$	:i endfunction]Script competitive_main_difficulty_watcher_varUpdated 0x96b52678 [	:i $competitive_set_difficulty_indicator$$player$ = %GLOBAL%$player$	:i if $playerinfoequals$%GLOBAL%$player$$is_onscreen$ = %i(1)		:i if $playerinfoequals$%GLOBAL%$player$$is_local_client$ = %i(0)			:i if $ScreenElementExists$${StructQBKey id = hud_root}$				:i %GLOBAL%$show_difficulty_change$ = %i(0)				:i %GLOBAL%$ruleset$ = (~$competitive_rules$)				:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$elimination_rules$					:i %GLOBAL%$elimination_ruleset$ = (~%GLOBAL%$ruleset$->$elimination_rules$)					:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$effect$						:i if (%GLOBAL%$elimination_ruleset$->$effect$ = $difficulty$)							:i %GLOBAL%$show_difficulty_change$ = %i(1)						:i endif					:i endif				:i elseif $StructureContains$$structure$ = (~%GLOBAL%$ruleset$)$bonus_rules$					:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)					:i if $StructureContains$$structure$ = %GLOBAL%$bonus_ruleset$$reward$						:i if (%GLOBAL%$bonus_ruleset$->$reward$ = $difficulty$)							:i %GLOBAL%$show_difficulty_change$ = %i(1)						:i endif					:i endif				:i endif				:i if (%GLOBAL%$show_difficulty_change$ = %i(1))					:i if $difficulty_is_higher$$compare$ = %GLOBAL%$current_value$$against$ = %GLOBAL%$last_value$						:i %GLOBAL%$change_direction$ = $up$					:i else 						:i %GLOBAL%$change_direction$ = $down$					:i endif					:i $FormatText$$checksumname$ = $icon_script_id$%s("comp_diff_icon_p%p")$p$ = %GLOBAL%$player$					:i $SpawnScript$$id$ = %GLOBAL%$icon_script_id$$competitive_show_difficulty_icon$$params$ = :s{$player$ = %GLOBAL%$player$$change_direction$ = %GLOBAL%$change_direction$:s}				:i endif			:i endif		:i endif	:i endif	:i endfunction]Script competitive_main_score_watcher_varUpdated 0x0e4b8458 [	:i $competitive_update_band_meter$	:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$	:i if (%GLOBAL%$is_onscreen$ = %i(0))		:i return 	:i endif	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i switch (~%GLOBAL%$ruleset$->$ranking_criteria$)		:i case $Score$			:i if (%GLOBAL%$var$ = $Score$)				:i $FormatText$$checksumname$ = $element_id$%s("p%p_points")$p$ = %GLOBAL%$player$			:i endif			:i endcase		case $performance_value$			:i if (%GLOBAL%$var$ = $performance_value$)				:i if $GotParam$${StructQBKey player}$					:i switch %GLOBAL%$player$						:i case %i(1)							:i $change$${StructInt g_player_1_points_for_section = 0}$							:i endcase						case %i(2)							:i $change$${StructInt g_player_2_points_for_section = 0}$							:i endcase						case %i(3)							:i $change$${StructInt g_player_3_points_for_section = 0}$							:i endcase						case %i(4)							:i $change$${StructInt g_player_4_points_for_section = 0}$							:i endcase						default 							:i $printf$${								StructQBKey channel = sfx								StructQBStringQs 0x0eb7f0d9							}$												:i end_switch				:i endif				:i %GLOBAL%$difference$ = (%GLOBAL%$current_value$ - %GLOBAL%$last_value$)				:i $FormatText$$textname$ = $points_text$^[b0a8de90]^$s$ = %GLOBAL%$difference$				:i if $GotParam$${StructQBKey player}$					:i switch %GLOBAL%$player$						:i case %i(1)							:i $change$$g_player_1_points_for_section$ = %GLOBAL%$difference$							:i endcase						case %i(2)							:i $change$$g_player_2_points_for_section$ = %GLOBAL%$difference$							:i endcase						case %i(3)							:i $change$$g_player_3_points_for_section$ = %GLOBAL%$difference$							:i endcase						case %i(4)							:i $change$$g_player_4_points_for_section$ = %GLOBAL%$difference$							:i endcase						default 							:i $printf$${								StructQBKey channel = sfx								StructQBStringQs 0x0eb7f0d9							}$												:i end_switch				:i endif				:i $SpawnScript$$id$ = $competitive$$competitive_create_on_highway_text$$params$ = :s{$player$ = %GLOBAL%$player$$text$ = %GLOBAL%$points_text$$points$:s}			:i endif			:i endcase		case $elimination_order$			:i if (%GLOBAL%$var$ = $Score$)				:i $FormatText$$checksumname$ = $element_id$%s("p%p_points")$p$ = %GLOBAL%$player$			:i endif	:i end_switch	:i if $ScreenElementExists$$id$ = %GLOBAL%$element_id$		:i $SetScreenElementProps$$id$ = %GLOBAL%$element_id$$text$ = %GLOBAL%$score_text$	:i endif	:i endfunction]Script competitive_main_percent_hit_watcher_varUpdated 0x128df610 [	:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$	:i if (%GLOBAL%$is_onscreen$ = %i(0))		:i return 	:i endif	:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$	:i if (%GLOBAL%$current_value$ = %i(4294967295))		:i return 	:i endif	:i if (%GLOBAL%$current_value$ > %i(100))		:i $current_value$ = %i(100)	:i endif	:i if $ScreenElementExists$$id$ = %GLOBAL%$highway_hud_root$		:i $CastToInteger$${StructQBKey current_value}$		:i $FormatText$$textname$ = $new_text$^[cfd55336]^$s$ = %GLOBAL%$current_value$		:i $spawnscriptnow$$id$ = $competitive$$competitive_create_on_highway_text$$params$ = :s{$player$ = %GLOBAL%$player$$text$ = %GLOBAL%$new_text$:s}	:i endif	:i endfunction]Script competitive_main_elimination_watcher_varUpdated 0x87883b9b [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i $competitive_update_band_meter$	:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i if (%GLOBAL%$is_onscreen$ = %i(1))		:i if (%GLOBAL%$part$ = $Vocals$)			:i if (%GLOBAL%$current_value$ = %i(1))				:i $hud_vocal_dead_script$$player$ = %GLOBAL%$player$				:i $SetPlayerInfo$%GLOBAL%$player$$scoring$ = %i(0)				:i $FormatText$$checksumname$ = $event_name$%s("competitive_player_eliminated_p%p")$p$ = %GLOBAL%$player$				:i $broadcastevent$$type$ = %GLOBAL%$event_name$$Data$ = :s{$player$ = %GLOBAL%$player$:s}			:i else 				:i $hud_vocal_revive$$player$ = %GLOBAL%$player$				:i $SetPlayerInfo$%GLOBAL%$player$$scoring$ = %i(1)			:i endif		:i else 			:i if (%GLOBAL%$current_value$ = %i(1))				:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$				:i if $ScreenElementExists$$id$ = %GLOBAL%$highway_hud_root$					:i $SetScreenElementProps$$id$ = %GLOBAL%$highway_hud_root$$skull_alpha$ = %f(1.0)				:i endif				:i $LaunchGemEvent$$event$ = $kill_objects_and_switch_player_non_interactive$$player$ = %GLOBAL%$player$				:i $WhammyFXOffAll$$player$ = %GLOBAL%$player$				:i $FormatText$$checksumname$ = $event_name$%s("competitive_player_eliminated_p%p")$p$ = %GLOBAL%$player$				:i $broadcastevent$$type$ = %GLOBAL%$event_name$$Data$ = :s{$player$ = %GLOBAL%$player$:s}			:i else 				:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$				:i if $ScreenElementExists$$id$ = %GLOBAL%$highway_hud_root$					:i $SetScreenElementProps$$id$ = %GLOBAL%$highway_hud_root$$skull_alpha$ = %f(0.0)				:i endif				:i $getsongtimems$				:i $SetPlayerInfo$%GLOBAL%$player$$interactive$ = %i(1)				:i $SetPlayerInfo$%GLOBAL%$player$$last_noninteractive_end_time$ = %GLOBAL%$time$			:i endif		:i endif	:i endif	:i if (%GLOBAL%$part$ !== $Vocals$)		:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$bonus_rules$			:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)			:i if $StructureContains$$structure$ = %GLOBAL%$bonus_ruleset$$criteria$				:i if (%GLOBAL%$bonus_ruleset$->$criteria$ = $alive$)					:i $competitive_check_all_players_eliminated$					:i if (%GLOBAL%$all_players_eliminated$ = %i(1))						:i $GMan_TimerFunc$$goal$ = %GLOBAL%$goal_id$$tool$ = $section_timer$$func$ = $get_precise_time$						:i if (%GLOBAL%$time$ > %i(10000))							:i $KillSpawnedScript$${StructQBKey name = competitive_delayed_revive}$							:i $SpawnScript$${								StructQBKey id = competitive								StructQBKey competitive_delayed_revive								StructStruct params								{									StructHeader									{										StructInt delay = 2									}								}							}$													:i else 						:i endif					:i endif				:i endif			:i endif		:i endif	:i endif	:i if (~%GLOBAL%$ruleset$->$ranking_criteria$ = $elimination_order$)		:i $competitive_elimination_check_for_winner$	:i endif	:i endfunction]Script competitive_main_interactive_watcher_varUpdated 0x86e22b60 [	:i if (%GLOBAL%$current_value$ = %i(0))		:i $SetPlayerInfo$%GLOBAL%$player$$star_power_amount$ = %f(0.0)		:i $SetPlayerInfo$%GLOBAL%$player$$current_run$ = %i(0)		:i $ResetPlayerNoteStreak$$player$ = %GLOBAL%$player$		:i $UpdateRunChange$$player$ = %GLOBAL%$player$		:i $PlayerSetVolume$$player$ = %GLOBAL%$player$$volume$ = %i(0)$include_drums$ = %i(1)		:i $UpdateGuitarVolume$		:i $WhammyFXOffAll$$player$ = %GLOBAL%$player$		:i $reset_player_touch_glow$$player$ = %GLOBAL%$player$	:i else 		:i $PlayerSetVolume$$player$ = %GLOBAL%$player$$volume$ = %i(100)		:i $UpdateGuitarVolume$	:i endif	:i endfunction]Script competitive_delayed_revive 0x73ea6a5c [	:i $wait$%GLOBAL%$delay$$seconds$	:i $competitive_revive_all_players$	:i endfunction]Script competitive_check_all_players_eliminated c2840d40 [	:i $competitive_get_num_players_eliminated$	:i if (%GLOBAL%$num_players_eliminated$ = %GLOBAL%$num_players$)		:i return ${StructInt all_players_eliminated = 1}$	:i else 		:i return ${StructInt all_players_eliminated = 0}$	:i endif	:i endfunction]Script competitive_get_num_players_eliminated abc788ef [	:i $GetNumPlayersInGame$	:i %GLOBAL%$eliminated_players$ = %i(0)	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $eliminated$		:i if (%GLOBAL%$eliminated$ = %i(1))			:i %GLOBAL%$eliminated_players$ = (%GLOBAL%$eliminated_players$ + %i(1))		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i return $num_players_eliminated$ = %GLOBAL%$eliminated_players$$num_players$ = %GLOBAL%$num_players$	:i endfunction]Script competitive_main_invincible_watcher_varUpdated ffffffff [	:i endfunction]Script competitive_clear_all_grace_period 0x45402577 [	:i $GetNumPlayersInGame$${StructQBKey local}$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$${StructQBKey local}$		:i while 		:i $highway_grace_period_end$$player$ = %GLOBAL%$player$		:i $GetNextPlayer$$local$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script competitive_main_starpower_watcher_varUpdated 0x512b44ff [	:i $getplayerinfo$%GLOBAL%$player$$is_local_client$	:i if (%GLOBAL%$is_local_client$ = %i(0))		:i return 	:i endif	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$starpower$		:i switch (~%GLOBAL%$ruleset$->$starpower$)			:i case $invincible$				:i if (%GLOBAL%$current_value$ = %i(1))					:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$strikes$ = %i(0)$notes_missed$ = %i(0):s}					:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$invincible$ = %i(1):s}				:i else 					:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$invincible$ = %i(0):s}				:i endif				:i endcase			case $attack$				:i if (%GLOBAL%$current_value$ = %i(1))					:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$invincible$ = %i(1):s}					:i $competitive_get_leaders$					:i if $ArrayContains$$array$ = %GLOBAL%$leaders$$contains$ = %GLOBAL%$player$						:i $SpawnScript$$goal_hud_competitive_shield_create$$params$ = :s{$player$ = %GLOBAL%$player$:s}					:i endif					:i $competitive_attack_triggered$$player$ = %GLOBAL%$player$				:i else 					:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$invincible$ = %i(0):s}					:i $SpawnScript$$goal_hud_competitive_shield_destroy$$params$ = :s{$player$ = %GLOBAL%$player$:s}				:i endif		:i end_switch	:i endif	:i endfunction]Script competitive_main_streak_watcher_varUpdated ee0e501f [	:i $getsongtimems$	:i if (%GLOBAL%$time$ < %i(0))		:i return 	:i endif	:i $getplayerinfo$%GLOBAL%$player$$is_local_client$	:i if (%GLOBAL%$is_local_client$ = %i(0))		:i return 	:i endif	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$elimination_rules$		:i %GLOBAL%$elimination_ruleset$ = (~%GLOBAL%$ruleset$->$elimination_rules$)		:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$criteria$			:i if (%GLOBAL%$elimination_ruleset$->$criteria$ = $notes_missed_sequential$)				:i if (%GLOBAL%$current_value$ >= %i(1))					:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $strikes$					:i if NOT (%GLOBAL%$strikes$ = %i(0))						:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$strikes$ = %i(0)$notes_missed$ = %i(0):s}					:i endif				:i endif			:i endif		:i endif	:i endif	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$bonus_rules$		:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)		:i if $StructureContains$$structure$ = %GLOBAL%$bonus_ruleset$$criteria$			:i if (%GLOBAL%$bonus_ruleset$->$criteria$ = $streak$)				:i %GLOBAL%$streak_length$ = (%GLOBAL%$bonus_ruleset$->$criteria_value$)				:i $competitive_get_streak_base$$player$ = %GLOBAL%$player$				:i if (%GLOBAL%$streak_base$ > %GLOBAL%$current_value$)					:i $competitive_set_streak_base$$player$ = %GLOBAL%$player$				:i endif				:i %GLOBAL%$current_value$ = (%GLOBAL%$current_value$ - %GLOBAL%$streak_base$)				:i $mod$$a$ = %GLOBAL%$current_value$$b$ = (%GLOBAL%$streak_length$)				:i if ((%GLOBAL%$mod$ = %i(0)) AND (%GLOBAL%$current_value$ > %i(0)))					:i if $StructureContains$$structure$ = %GLOBAL%$bonus_ruleset$$reward$						:i switch (%GLOBAL%$bonus_ruleset$->$reward$)							:i case $difficulty$								:i $getplayerinfo$%GLOBAL%$player$$difficulty$								:i $getplayerinfo$%GLOBAL%$player$$part$								:i $getplayerinfo$%GLOBAL%$player$$double_kick_drum$								:i if NOT (%GLOBAL%$difficulty$ = $expert$)									:i $spawn_do_diff_change$$player$ = %GLOBAL%$player$$adjustment$ = (%GLOBAL%$bonus_ruleset$->$reward_value$)								:i endif								:i endcase							case $performance_value$								:i switch (%GLOBAL%$bonus_ruleset$->$reward_value$)									:i case $streak_length$										:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$										:i %GLOBAL%$points$ = (%GLOBAL%$current_value$ / %i(10))										:i $CastToInteger$${StructQBKey points}$										:i %GLOBAL%$performance_value$ = (%GLOBAL%$performance_value$ + %GLOBAL%$points$)										:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$performance_value$ = %GLOBAL%$performance_value$:s}										:i endcase									case $multiplier$										:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$										:i $getplayerinfo$%GLOBAL%$player$$star_power_used$										:i %GLOBAL%$points$ = (%GLOBAL%$current_value$ / %i(10))										:i if (%GLOBAL%$points$ > %i(4))											:i %GLOBAL%$points$ = %i(4)										:i endif										:i if (%GLOBAL%$star_power_used$ = %i(1))											:i %GLOBAL%$points$ = (%GLOBAL%$points$ * %i(2))										:i endif										:i $CastToInteger$${StructQBKey points}$										:i %GLOBAL%$performance_value$ = (%GLOBAL%$performance_value$ + %GLOBAL%$points$)										:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$performance_value$ = %GLOBAL%$performance_value$:s}								:i end_switch						:i end_switch					:i endif				:i endif			:i endif		:i endif	:i endif	:i endfunction]Script competitive_main_exit 0x17573f16 [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$starpower$		:i if (~%GLOBAL%$ruleset$->$starpower$ = $disabled$)			:i $change$${StructInt disable_all_starpower = 0}$		:i endif	:i endif	:i $competitive_restore_player_difficulty$	:i $competitive_clear_all_grace_period$	:i $KillSpawnedScript$${StructQBKey id = competitive}$	:i $KillSpawnedScript$${StructQBKey id = highway1_script}$	:i $KillSpawnedScript$${StructQBKey id = highway2_script}$	:i $KillSpawnedScript$${StructQBKey id = highway3_script}$	:i $KillSpawnedScript$${StructQBKey id = highway4_script}$	:i $KillSpawnedScript$${StructQBKey name = competitive_create_on_highway_text}$	:i $KillSpawnedScript$${StructQBKey name = competitive_temporary_immunity}$	:i $competitive_kill_sound_scripts$	:i $DestroyScreenElement$${StructQBKey id = competitive_container}$	:i endfunction]Script competitive_rule_difficulty ddf04902 [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = (~%GLOBAL%$ruleset$)$difficulty$		:i switch (~%GLOBAL%$ruleset$->$difficulty$)			:i case $any$				:i return 				:i endcase			case $all_one$				:i if $StructureContains$$structure$ = (~%GLOBAL%$ruleset$)$difficulty_value$					:i $difficulty_value$ = (~%GLOBAL%$ruleset$->$difficulty_value$)					:i $double_kick_drum$ = (~%GLOBAL%$ruleset$->$double_kick_drum$)					:i $GetNumPlayersInGame$${StructQBKey local}$					:i if (%GLOBAL%$num_players$ > %i(0))						:i $GetFirstPlayer$${StructQBKey local}$						:i while 						:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = %GLOBAL%$difficulty_value$						:i $SetPlayerInfo$%GLOBAL%$player$$double_kick_drum$ = %GLOBAL%$double_kick_drum$						:i $GetNextPlayer$$local$$player$ = %GLOBAL%$player$						:i loop_to %GLOBAL%$num_players$					:i endif				:i else 					:i $scriptassert$${StructString 0x00000000 = "competitive difficulty rule set to all_one but no difficulty_value set!"}$				:i endif				:i endcase			case $all_leader$				:i $getplayerinfo$${					StructQBString primary_controller					StructQBKey difficulty				}$						:i end_switch	:i endif	:i endfunction]Script competitive_rule_ranking_criteria eeea57ff [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if NOT (~$competitive_rules$ = $team_faceoff$ OR ~$competitive_rules$ = $band_vs_band$)		:i $GMan_CompetitiveMeterFunc$${			StructQBKey goal = competitive			StructQBKey tool = comp_meter			StructQBKey func = start		}$			:i endif	:i $ranking_order$ = $high_to_low$	:i $metric$ = $Score$	:i switch (~%GLOBAL%$ruleset$->$ranking_criteria$)		:i case $Score$			:i if (~%GLOBAL%$ruleset$->$team$ = %i(1))				:i $competitive_setup_results_data$${					StructQBStringQs Title = 0x302c47e0					StructQBKey source = band_info_data					StructQBKey Data = Score				}$							:i else 				:i $competitive_setup_results_data$			:i endif			:i $metric$ = $Score$			:i endcase		case $time_alive$			:i $competitive_setup_results_data$${				StructQBStringQs Title = db6c469d				StructQBKey source = player_goal_data				StructQBKey Data = performance_value			}$						:i $metric$ = $time_alive$			:i endcase		case $elimination_order$			:i $competitive_setup_results_data$${				StructQBStringQs Title = c35ef9eb				StructQBKey source = player_info_data				StructQBKey Data = Score			}$						:i $metric$ = $elimination_order$			:i endcase		case $performance_value$			:i $competitive_setup_results_data$${				StructQBStringQs Title = 0x85a8f425				StructQBKey source = player_goal_data				StructQBKey Data = performance_value			}$						:i $metric$ = $performance_value$	:i end_switch	:i $GMan_CompetitiveMeterFunc$:s{		:i $goal$ = $competitive$		:i $tool$ = $comp_meter$		:i $func$ = $set_ranking_order$		:i $params$ = :s{$ranking_order$ = %GLOBAL%$ranking_order$:s}	:i :s}	:i $spawnscriptnow$$competitive_meter_track_player_scores$$params$ = :s{$metric$ = %GLOBAL%$metric$:s}	:i endfunction]Script competitive_meter_track_player_scores 0x722e5982 [	:i while 	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i $player_scores$ = :a{:a}		:i while 		:i if NOT $GMan_GoalIsActive$${StructQBKey goal = competitive}$			:i return 		:i endif		:i switch %GLOBAL%$metric$			:i case $Score$				:i $getplayerinfo$%GLOBAL%$player$$Score$				:i $CastToInteger$${StructQBKey Score}$				:i endcase			case $time_alive$				:i $competitive_get_time_alive$$player$ = %GLOBAL%$player$				:i %GLOBAL%$Score$ = (%GLOBAL%$time_alive$ / %f(1000.0))				:i endcase			case $elimination_order$				:i $getplayerinfo$%GLOBAL%$player$$Score$				:i $CastToInteger$${StructQBKey Score}$				:i endcase			case $performance_value$				:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$				:i %GLOBAL%$Score$ = (%GLOBAL%$performance_value$)				:i $CastToInteger$${StructQBKey Score}$				:i endcase			case $performance_value_percent$				:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$				:i %GLOBAL%$Score$ = (%GLOBAL%$performance_value$)				:i $CastToInteger$${StructQBKey Score}$		:i end_switch		:i $new_player_score$ = :s{$player$ = %GLOBAL%$player$$Score$ = %GLOBAL%$Score$:s}		:i $AddArrayElement$$array$ = %GLOBAL%$player_scores$$element$ = %GLOBAL%$new_player_score$		:i $player_scores$ = %GLOBAL%$array$		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$		:i $GMan_CompetitiveMeterFunc$:s{			:i $goal$ = $competitive$			:i $tool$ = $comp_meter$			:i $func$ = $update_players$			:i $params$ = :s{$player_scores$ = %GLOBAL%$player_scores$:s}		:i :s}	:i endif	:i $wait$${		StructInt 5		StructQBKey gameframes	}$		:i loop_to 	:i endfunction]Script competitive_rule_elimination 0x388863c6 [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if NOT $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$elimination_rules$		:i return 	:i endif	:i %GLOBAL%$elimination_ruleset$ = (~%GLOBAL%$ruleset$->$elimination_rules$)	:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$interval$		:i switch (%GLOBAL%$elimination_ruleset$->$interval$)			:i case $num_players$				:i $GetNumPlayersInGame$				:i $GMan_SectionWatcherFunc$$goal$ = $competitive$$tool$ = $section_watcher$$func$ = $set_num_even_divisions$$params$ = :s{$num_even_divisions$ = (%GLOBAL%$num_players$ - %i(1)):s}				:i endcase			case $instant$				:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$criteria$					:i switch (%GLOBAL%$elimination_ruleset$->$criteria$)						:i case $notes_missed$							:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$criteria_value$								:i $num_notes$ = (%GLOBAL%$elimination_ruleset$->$criteria_value$)							:i else 								:i $num_notes$ = %i(1)							:i endif							:i $competitive_activate_miss_listener$$num_notes$ = %GLOBAL%$num_notes$							:i endcase						case $notes_missed_sequential$							:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$criteria_value$								:i $num_notes$ = (%GLOBAL%$elimination_ruleset$->$criteria_value$)							:i else 								:i $num_notes$ = %i(1)							:i endif							:i $competitive_activate_miss_listener$$num_notes$ = %GLOBAL%$num_notes$					:i end_switch				:i endif		:i end_switch	:i endif	:i $GetFirstPlayer$${StructQBKey local}$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i $show_timer$ = %i(1)	:i if (%GLOBAL%$part$ = $Vocals$ AND (%GLOBAL%$ruleset$ = $do_or_die$ OR %GLOBAL%$ruleset$ = $team_do_or_die$))		:i $show_timer$ = %i(0)	:i endif	:i if (%GLOBAL%$part$ = $Vocals$ AND (%GLOBAL%$ruleset$ = $perfectionist$ OR %GLOBAL%$ruleset$ = $team_perfectionist$))		:i $show_timer$ = %i(0)	:i endif	:i if (%GLOBAL%$show_timer$ = %i(1))		:i $competitive_show_timer_to_next_section$	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$player_lives$		:i $player_lives$ = (%GLOBAL%$elimination_ruleset$->$player_lives$)	:i else 		:i $player_lives$ = %i(4294967295)	:i endif	:i $GetNumPlayersInGame$${StructQBKey local}$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$${StructQBKey local}$		:i while 		:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$player_lives$ = %GLOBAL%$player_lives$:s}		:i $GetNextPlayer$$local$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script competitive_show_timer_to_next_section 0x0a66059d [	:i $last_section$ = $false$	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if NOT $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$section_timer$		:i return 	:i endif	:i $GetFirstPlayer$${StructQBKey local}$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i if (~%GLOBAL%$ruleset$->$section_timer$ = $None$)		:i return 	:i endif	:i $GetFirstPlayer$${StructQBKey local}$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i $GMan_SectionWatcherFunc$$goal$ = $competitive$$tool$ = $section_watcher$$func$ = $get_time_to_next_section$$params$ = :s{$type$ = (~%GLOBAL%$ruleset$->$section_timer$)$part$ = %GLOBAL%$part$:s}	:i if (%GLOBAL%$time_to_next_section$ > %i(0))		:i $GMan_TimerFunc$$goal$ = $competitive$$tool$ = $section_timer$$func$ = $set_precise_start_time$$params$ = :s{$precise_time$ = %GLOBAL%$time_to_next_section$:s}		:i $GMan_TimerFunc$${			StructQBKey goal = competitive			StructQBKey tool = section_timer			StructQBKey func = attach_timer_to_player			StructStruct params			{				StructHeader				{					StructInt player = 0				}			}		}$				:i $GMan_TimerFunc$${			StructQBKey goal = competitive			StructQBKey tool = section_timer			StructQBKey func = reset		}$				:i $GMan_TimerFunc$${			StructQBKey goal = competitive			StructQBKey tool = section_timer			StructQBKey func = show		}$				:i if (%GLOBAL%$is_last_section$ = $true$)			:i $GMan_TimerFunc$${				StructQBKey goal = competitive				StructQBKey tool = section_timer				StructQBKey func = set_sync_beep				StructStruct params				{					StructHeader					{						StructInt beep_active = 0					}				}			}$					:i endif		:i $GMan_TimerFunc$${			StructQBKey goal = competitive			StructQBKey tool = section_timer			StructQBKey func = start		}$			:i endif	:i endfunction]Script competitive_rank_score 0x1f5a3400 [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i %GLOBAL%$worst_score$ = %i(999999999)	:i %GLOBAL%$elimination$ = %i(0)	:i %GLOBAL%$tie$ = :a{:a}	:i $competitive_get_num_players_eliminated$	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $eliminated$		:i if (%GLOBAL%$eliminated$ = %i(0))			:i if $GotParam$${StructQBKey data_array}$				:i $printf$${StructQBStringQs 0x205475d9}$				:i %GLOBAL%$i$ = %i(0)				:i %GLOBAL%$Score$ = %i(999999999)				:i $GetArraySize$%GLOBAL%$data_array$				:i while 				:i if (%GLOBAL%$data_array$:a{%GLOBAL%$i$:a}->$player$ = %GLOBAL%$player$)					:i %GLOBAL%$Score$ = (%GLOBAL%$data_array$:a{%GLOBAL%$i$:a}->$Score$)					:i continue				:i endif				:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))				:i loop_to %GLOBAL%$array_size$				:i if (%GLOBAL%$Score$ = %i(999999999))					:i $scriptassert$${StructString 0x00000000 = "Player does not exist in arbitrated data"}$				:i endif			:i else 				:i $printf$${StructQBStringQs 0x7d56546b}$				:i $getplayerinfo$%GLOBAL%$player$$Score$			:i endif			:i if (%GLOBAL%$Score$ = %GLOBAL%$worst_score$)				:i %GLOBAL%$elimination$ = $tie$				:i %GLOBAL%$tie$ = (%GLOBAL%$tie$ + %GLOBAL%$player$)			:i elseif (%GLOBAL%$Score$ < %GLOBAL%$worst_score$)				:i %GLOBAL%$worst_score$ = %GLOBAL%$Score$				:i %GLOBAL%$elimination$ = $not_tie$				:i %GLOBAL%$tie$ = :a{:a}				:i %GLOBAL%$tie$ = (%GLOBAL%$tie$ + %GLOBAL%$player$)			:i endif		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i if (%GLOBAL%$elimination$ = $tie$)		:i %GLOBAL%$num_remaining_players$ = (%GLOBAL%$num_players$ - %GLOBAL%$num_players_eliminated$)		:i $GetArraySize$%GLOBAL%$tie$		:i %GLOBAL%$num_tied_players$ = %GLOBAL%$array_size$		:i if (%GLOBAL%$num_remaining_players$ !== %GLOBAL%$num_tied_players$)			:i %GLOBAL%$i$ = %i(0)			:i while 			:i $competitive_eliminate_player$$player$ = (%GLOBAL%$tie$:a{%GLOBAL%$i$:a})			:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))			:i loop_to %GLOBAL%$array_size$		:i endif	:i else 		:i $competitive_eliminate_player$$player$ = (%GLOBAL%$tie$:a{%i(0):a})	:i endif	:i endfunction]Script competitive_elimination_check_for_winner 0x328f5ea7 [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i $GetNumPlayersInGame$	:i $competitive_get_num_players_eliminated$	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$team$		:i if (~%GLOBAL%$ruleset$->$team$ = %i(0))			:i if ((%GLOBAL%$num_players_eliminated$) >= (%GLOBAL%$num_players$ - %i(1)))				:i $competitive_mode_final_elimination_complete$			:i endif		:i else 			:i %GLOBAL%$winning_band$ = %i(4294967295)			:i $GetNumPlayersInGame$			:i if (%GLOBAL%$num_players$ > %i(0))				:i $GetFirstPlayer$				:i while 				:i $getplayerinfo$%GLOBAL%$player$$band$				:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $eliminated$				:i if (%GLOBAL%$eliminated$ = %i(0))					:i if NOT (%GLOBAL%$winning_band$ = %i(4294967295))						:i if NOT (%GLOBAL%$winning_band$ = %GLOBAL%$band$)							:i return 						:i endif					:i else 						:i %GLOBAL%$winning_band$ = (%GLOBAL%$band$)					:i endif				:i endif				:i $GetNextPlayer$$player$ = %GLOBAL%$player$				:i loop_to %GLOBAL%$num_players$				:i $competitive_mode_final_elimination_complete$			:i endif		:i endif	:i endif	:i endfunction]Script competitive_mode_final_elimination_complete 0x97290e49 [	:i $Playlist_GetCurrentSong$	:i $SongFileManager$$func$ = $get_song_end_time$$song_name$ = %GLOBAL%$current_song$	:i $getsongtimems$	:i $CastToInteger$${StructQBKey time}$	:i if (%GLOBAL%$time$ < (%GLOBAL%$total_end_time$%i(4294962296)))		:i $GMan_GetData$${			StructQBKey goal = competitive			StructQBKey elimination_win		}$				:i if (%GLOBAL%$elimination_win$ = %i(1))			:i return 		:i endif		:i $GMan_SetData$${			StructQBKey goal = competitive			StructStruct params			{				StructHeader				{					StructInt elimination_win = 1				}			}		}$				:i if $InNetGame$			:i if NOT $ScriptIsRunning$${StructQBKey online_end_song}$				:i $spawnscriptnow$${					StructQBKey noqbid					StructQBKey online_end_song				}$							:i endif		:i else 			:i if NOT $ScriptIsRunning$${StructQBKey GuitarEvent_SongWon}$				:i $spawnscriptnow$${					StructQBKey noqbid					StructQBKey GuitarEvent_SongWon				}$							:i endif		:i endif	:i endif	:i endfunction]Script competitive_revive_all_players c2dfc32d [	:i $GetNumPlayersInGame$${StructQBKey local}$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$${StructQBKey local}$		:i while 		:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $eliminated$		:i $getplayerinfo$%GLOBAL%$player$$part$		:i if $GotParam$${StructQBKey vocals_only}$			:i if NOT (%GLOBAL%$part$ = $Vocals$)				:i %GLOBAL%$eliminated$ = %i(0)			:i endif		:i elseif $GotParam$${StructQBKey exclude_vocals}$			:i if (%GLOBAL%$part$ = $Vocals$)				:i %GLOBAL%$eliminated$ = %i(0)			:i endif		:i endif		:i if (%GLOBAL%$eliminated$ = %i(1))			:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$strikes$ = %i(0)$notes_missed$ = %i(0):s}			:i $competitive_revive_player$$player$ = %GLOBAL%$player$		:i elseif (%GLOBAL%$part$ = $Vocals$)			:i $getplayerinfo$%GLOBAL%$player$$scoring$			:i if (%GLOBAL%$scoring$ = %i(0))				:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$strikes$ = %i(0)$notes_missed$ = %i(0):s}				:i $competitive_revive_player$$player$ = %GLOBAL%$player$			:i endif		:i endif		:i $GetNextPlayer$$local$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script competitive_rule_bonus c185d3ec [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if NOT $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$bonus_rules$		:i return 	:i endif	:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)	:i if $StructureContains$$structure$ = %GLOBAL%$bonus_ruleset$$interval$		:i switch (%GLOBAL%$bonus_ruleset$->$interval$)			:i case $instant$				:i if $StructureContains$$structure$ = %GLOBAL%$bonus_ruleset$$criteria$					:i switch (%GLOBAL%$bonus_ruleset$->$criteria$)						:i case $streak$							:i $streak_length$ = (%GLOBAL%$bonus_ruleset$->$criteria_value$)							:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$bonus_streak_length$ = %GLOBAL%$streak_length$:s}					:i end_switch				:i endif				:i endcase			case $num_players$				:i $GetNumPlayersInGame$				:i $GMan_SectionWatcherFunc$$goal$ = $competitive$$tool$ = $section_watcher$$func$ = $set_num_even_divisions$$params$ = :s{$num_even_divisions$ = (%GLOBAL%$num_players$ - %i(1)):s}				:i endcase			case $section$				:i $GetNumPlayersInGame$				:i if (%GLOBAL%$num_players$ > %i(0))					:i $GMan_EventListenerFunc$${						StructQBKey goal = competitive						StructQBKey tool = extra_strum_listener						StructQBKey func = start					}$									:i endif		:i end_switch	:i endif	:i endfunction]Script competitive_rank_section_alive 0x787efdbe [	${StructInt Vocals = 0}$	:i %GLOBAL%$local_players_survived$ = :a{:a}	:i if (%GLOBAL%$section$ < %i(0))		:i return 	:i endif	:i $GetNumPlayersInGame$${StructQBKey local}$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$${StructQBKey local}$		:i while 		:i $getplayerinfo$%GLOBAL%$player$$interactive$		:i $getplayerinfo$%GLOBAL%$player$$part$		:i if ((%GLOBAL%$Vocals$ = %i(1)) AND (%GLOBAL%$part$ = $Vocals$))			:i if (%GLOBAL%$interactive$ = %i(1))				:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$				:i %GLOBAL%$performance_value$ = (%GLOBAL%$performance_value$ + %i(1))				:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$performance_value$ = %GLOBAL%$performance_value$:s}				:i %GLOBAL%$local_players_survived$ = (%GLOBAL%$local_players_survived$ + %GLOBAL%$player$)			:i endif		:i elseif ((%GLOBAL%$Vocals$ = %i(0)) AND (%GLOBAL%$part$ !== $Vocals$))			:i if (%GLOBAL%$interactive$ = %i(1))				:i $getplayerinfo$%GLOBAL%$player$$current_detailedstats_array$				:i %GLOBAL%$notes_hit$ = ((~%GLOBAL%$current_detailedstats_array$):a{%GLOBAL%$section$:a})				:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$				:i %GLOBAL%$performance_value$ = (%GLOBAL%$performance_value$ + %i(1))				:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$performance_value$ = %GLOBAL%$performance_value$:s}				:i %GLOBAL%$local_players_survived$ = (%GLOBAL%$local_players_survived$ + %GLOBAL%$player$)			:i endif		:i endif		:i $GetNextPlayer$$local$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i $GetArraySize$%GLOBAL%$local_players_survived$	:i if (%GLOBAL%$array_size$ > %i(0))		:i if (%GLOBAL%$array_size$ = %i(1))			:i $sfx_do_or_die_section_won$$player$ = (%GLOBAL%$local_players_survived$:a{%i(0):a})$pan_wide$ = %i(0)		:i else 			:i $sfx_do_or_die_section_won$$player$ = (%GLOBAL%$local_players_survived$:a{%i(0):a})$pan_wide$ = %i(1)		:i endif	:i endif	:i endfunction]Script competitive_setup_results_data 0x77aab10b [	${		StructQBStringQs Title = 0x302c47e0		StructQBKey source = player_info_data		StructQBKey Data = Score		StructQBKey method = highest_to_lowest	}$		:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$results_screen_goal_data$ = :s{$column_title$ = (%GLOBAL%$Title$)$data_source$ = (%GLOBAL%$source$)$var_name$ = (%GLOBAL%$Data$)$ranking_method$ = (%GLOBAL%$method$):s}:s}	:i endfunction]Script competitive_activate_miss_listener 0x4b3794e3 [	:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$miss_num_notes$ = %GLOBAL%$num_notes$:s}	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i $getplayerinfo$%GLOBAL%$player$$is_local_client$		:i if (%GLOBAL%$is_local_client$ = %i(1))			:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$strikes$ = %i(0):s}			:i $competitive_meter_update_strikes$$player$ = %GLOBAL%$player$$strikes$ = %i(0)		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i $GMan_EventListenerFunc$${		StructQBKey goal = competitive		StructQBKey tool = vocals_miss_listener		StructQBKey func = start	}$		:i $GMan_EventListenerFunc$${		StructQBKey goal = competitive		StructQBKey tool = vocals_hit_listener		StructQBKey func = start	}$		:i $GMan_EventListenerFunc$${		StructQBKey goal = competitive		StructQBKey tool = miss_listener		StructQBKey func = start	}$		:i $GMan_EventListenerFunc$${		StructQBKey goal = competitive		StructQBKey tool = extra_strum_listener		StructQBKey func = start	}$		:i endfunction]Script competitive_main_vocals_hit_listener_gotEvent 0x42ba8072 [	:i %GLOBAL%$player$ = (%GLOBAL%$event_data$->$player$)	:i $getplayerinfo$%GLOBAL%$player$$is_local_client$	:i if (%GLOBAL%$is_local_client$ = %i(0))		:i return 	:i endif	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$elimination_rules$		:i %GLOBAL%$elimination_ruleset$ = (~%GLOBAL%$ruleset$->$elimination_rules$)		:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$criteria$			:i if (%GLOBAL%$elimination_ruleset$->$criteria$ = $notes_missed_sequential$)				:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $strikes$				:i if NOT (%GLOBAL%$strikes$ = %i(0))					:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$strikes$ = %i(0)$notes_missed$ = %i(0):s}				:i endif			:i endif		:i endif	:i endif	:i endfunction]Script competitive_main_miss_listener_gotEvent 0x66a70fd7 [	:i $GMan_GetData$$goal$ = $competitive$$player$ = (%GLOBAL%$event_data$->$player$)$name$ = $eliminated$	:i if (%GLOBAL%$eliminated$ = %i(1))		:i return 	:i endif	:i $getplayerinfo$(%GLOBAL%$event_data$->$player$)$time_of_first_note$	:i if (%GLOBAL%$tool_id$ = $extra_strum_listener$)		:i $GMan_GetData$${			StructQBKey goal = competitive			StructQBKey name = overstrum_total		}$				:i %GLOBAL%$player_overstrum_total$ = (%GLOBAL%$overstrum_total$:a{(%GLOBAL%$event_data$->$player$ - %i(1)):a} + %i(1))		:i $SetArrayElement$$arrayName$ = $overstrum_total$$index$ = (%GLOBAL%$event_data$->$player$ - %i(1))$newValue$ = (%GLOBAL%$player_overstrum_total$)		:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$overstrum_total$ = %GLOBAL%$overstrum_total$:s}	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$event_data$$songtime$		:i if (%GLOBAL%$time_of_first_note$ > %GLOBAL%$event_data$->$songtime$)			:i return 		:i endif	:i else 		:i $GMan_GetData$${			StructQBKey goal = competitive			StructQBKey name = last_missed_note_index		}$				:i if $StructureContains$$structure$ = %GLOBAL%$event_data$$array_entry$			:i if (%GLOBAL%$event_data$->$array_entry$ = %GLOBAL%$last_missed_note_index$:a{(%GLOBAL%$event_data$->$player$ - %i(1)):a})				:i return 			:i endif			:i $SetArrayElement$$arrayName$ = $last_missed_note_index$$index$ = (%GLOBAL%$event_data$->$player$ - %i(1))$newValue$ = (%GLOBAL%$event_data$->$array_entry$)			:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$last_missed_note_index$ = %GLOBAL%$last_missed_note_index$:s}		:i endif	:i endif	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i $GMan_GetData$$goal$ = $competitive$$player$ = (%GLOBAL%$event_data$->$player$)$name$ = $invincible$	:i if (%GLOBAL%$invincible$ = %i(1))		:i return 	:i endif	:i $GMan_GetData$${		StructQBKey goal = competitive		StructQBKey miss_num_notes	}$		:i if NOT $GotParam$${StructQBKey miss_num_notes}$		:i return 	:i endif	:i $GMan_GetData$$goal$ = $competitive$$player$ = (%GLOBAL%$event_data$->$player$)$name$ = $strikes$	:i %GLOBAL%$missed_notes$ = (%GLOBAL%$strikes$ + %i(1))	:i $GMan_SetData$$goal$ = $competitive$$player$ = (%GLOBAL%$event_data$->$player$)$params$ = :s{$strikes$ = %GLOBAL%$missed_notes$:s}	:i if (%GLOBAL%$missed_notes$ >= %GLOBAL%$miss_num_notes$)		:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$elimination_rules$			:i %GLOBAL%$elimination_ruleset$ = (~%GLOBAL%$ruleset$->$elimination_rules$)			:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$effect$				:i switch (%GLOBAL%$elimination_ruleset$->$effect$)					:i case $difficulty$						:i $getplayerinfo$(%GLOBAL%$event_data$->$player$)$difficulty$						:i if NOT (%GLOBAL%$difficulty$ = $beginner$)							:i $spawn_do_diff_change$$player$ = (%GLOBAL%$event_data$->$player$)$adjustment$ = (%GLOBAL%$elimination_ruleset$->$effect_value$)						:i endif						:i $GMan_SetData$$goal$ = $competitive$$player$ = (%GLOBAL%$event_data$->$player$)$params$ = :s{$strikes$ = %i(0)$notes_missed$ = %i(0):s}				:i end_switch			:i else 				:i $competitive_eliminate_player$$player$ = (%GLOBAL%$event_data$->$player$)			:i endif		:i endif	:i endif	:i endfunction]Script competitive_main_vocals_listener_gotEvent e77cf059 [	:i if NOT $playerinfoequals$(%GLOBAL%$event_data$->$player$)$is_local_client$ = %i(1)		:i return 	:i endif	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i %GLOBAL%$player$ = (%GLOBAL%$event_data$->$player$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$elimination_rules$		:i %GLOBAL%$elimination_ruleset$ = (~%GLOBAL%$ruleset$->$elimination_rules$)		:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$vocals_interval_value$			:i $competitive_check_all_players_eliminated$			:i if NOT (%GLOBAL%$all_players_eliminated$ = %i(1))				:i $getplayerinfo$(%GLOBAL%$player$)$interactive$				:i if (%GLOBAL%$interactive$ = %i(0))					:i $competitive_revive_player$$player$ = %GLOBAL%$player$				:i endif			:i else 				:i $competitive_revive_all_players$${StructQBKey vocals_only}$			:i endif		:i endif	:i endif	:i %GLOBAL%$vocals_section_interval$ = %i(1)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$bonus_rules$		:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)		:i %GLOBAL%$valid_section$ = $true$		:i if (%GLOBAL%$valid_section$ = $true$)			:i if $StructureContains$$structure$ = %GLOBAL%$bonus_ruleset$$criteria$				:i switch (%GLOBAL%$bonus_ruleset$->$criteria$)					:i case $percent_hit$						:i if (%GLOBAL%$event_data$->$empty_phrase$ = %i(0) OR ~$competitive_rules$ = $do_or_die$ OR ~$competitive_rules$ = $team_do_or_die$)							:i if NOT $ScriptIsRunning$${StructQBKey competitive_vocals_phrase_end_watcher}$								:i $spawnscriptnow$${									StructQBKey id = competitive									StructQBKey competitive_vocals_phrase_end_watcher								}$															:i endif							:i %GLOBAL%$percentage_hit$ = (%GLOBAL%$event_data$->$quality$ * %i(100))							:i $CastToInteger$${StructQBKey percentage_hit}$							:i if (%GLOBAL%$percentage_hit$ < %i(1))								:i $percentage_hit$ = (%GLOBAL%$percentage_hit$ + %f(0.0010000))							:i endif							:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$current_vocal_percent_hit$ = %GLOBAL%$percentage_hit$:s}						:i endif						:i endcase					case $alive$						:i $getplayerinfo$%GLOBAL%$player$$star_power_used$						:i if (%GLOBAL%$event_data$->$phrase_score$ > %i(0) OR %GLOBAL%$star_power_used$ = %i(1))							:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$							:i %GLOBAL%$performance_value$ = (%GLOBAL%$performance_value$ + %i(1))							:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$performance_value$ = %GLOBAL%$performance_value$:s}						:i endif				:i end_switch			:i endif		:i endif	:i endif	:i %GLOBAL%$num_vocalists$ = %i(0)	:i $GetNumPlayersInGame$${StructQBKey local}$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$${StructQBKey local}$		:i while 		:i if $playerinfoequals$%GLOBAL%$player$$part$ = $Vocals$			:i %GLOBAL%$num_vocalists$ = (%GLOBAL%$num_vocalists$ + %i(1))		:i endif		:i $GetNextPlayer$$local$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$		:i $GMan_GetData$${			StructQBKey goal = competitive			StructQBKey num_local_finished_phrase		}$				:i if (%GLOBAL%$num_vocalists$ <= (%GLOBAL%$num_local_finished_phrase$ + %i(1)))			:i $GMan_SetData$${				StructQBKey goal = competitive				StructStruct params				{					StructHeader					{						StructInt num_local_finished_phrase = 0					}				}			}$						:i $broadcastevent$${StructQBKey type = vocals_phrase_end}$		:i else 			:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$num_local_finished_phrase$ = (%GLOBAL%$num_local_finished_phrase$ + %i(1)):s}		:i endif	:i endif	:i endfunction]Script competitive_vocals_phrase_end_watcher 0x63881c37 [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i %GLOBAL%$i$ = %i(1)	:i while 	:i $Block$${StructQBKey type = vocals_phrase_end}$	:i $FormatText$$checksumname$ = $request_id$%s("vocals_%s")$s$ = %GLOBAL%$i$	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$bonus_rules$		:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)		:i if (%GLOBAL%$bonus_ruleset$->$criteria$ = $percent_hit$)			:i $GMan_RequestArbitrationData$$source$ = $goalplayerdata$$var$ = $current_vocal_percent_hit$$goal$ = $competitive$$request_id$ = %GLOBAL%$request_id$		:i endif	:i endif	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to 	:i endfunction]Script competitive_eliminate_player 0x43ed1063 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i if $playerinfoequals$%GLOBAL%$player$$is_local_client$ = %i(0)		:i return 	:i endif	:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$strikes$ = %i(0)$notes_missed$ = %i(0):s}	:i $SetPlayerInfo$%GLOBAL%$player$$star_power_amount$ = %f(0.0)	:i $SetPlayerInfo$%GLOBAL%$player$$current_run$ = %i(0)	:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$eliminated$ = %i(1):s}	:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $player_lives$	:i $GMan_CompetitiveMeterFunc$${		StructQBKey goal = competitive		StructQBKey tool = comp_meter		StructQBKey func = update_players_ui	}$		:i %GLOBAL%$new_player_lives$ = (%GLOBAL%$player_lives$ - %i(1))	:i if (%GLOBAL%$new_player_lives$ = %i(0))		:i $player_completely_eliminated$$player$ = %GLOBAL%$player$	:i else 		:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$player_lives$ = %GLOBAL%$new_player_lives$:s}	:i endif	:i $getplayerinfo$%GLOBAL%$player$$highway_position$	:i $audio_gameplay_elimination_sfx_logic$$player$ = %GLOBAL%$player$$highway_position$ = %GLOBAL%$highway_position$	:i endfunction]Script player_completely_eliminated 0x47e6c542 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i $GetNumPlayersInGame$	:i $GMan_GetData$${		StructQBKey goal = competitive		StructQBKey eliminated_players	}$		:i %GLOBAL%$new_eliminated_players$ = (%GLOBAL%$eliminated_players$ + %GLOBAL%$player$)	:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$eliminated_players$ = %GLOBAL%$new_eliminated_players$:s}	:i endfunction]Script competitive_revive_player d7b375e7 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i if $playerinfoequals$%GLOBAL%$player$$is_local_client$ = %i(0)		:i return 	:i endif	:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$eliminated$ = %i(0):s}	:i $GMan_CompetitiveMeterFunc$${		StructQBKey goal = competitive		StructQBKey tool = comp_meter		StructQBKey func = update_players_ui	}$		:i $FormatText$$checksumname$ = $temp_immunity_id$%s("temp_immunity_p%p")$p$ = %GLOBAL%$player$	:i $KillSpawnedScript$$id$ = %GLOBAL%$temp_immunity_id$	:i $SpawnScript$$id$ = %GLOBAL%$temp_immunity_id$$competitive_temporary_immunity$$params$ = :s{$player$ = %GLOBAL%$player$$bonus_time$ = %i(1):s}	:i endfunction]Script competitive_temporary_immunity 0x144445f5 [	${StructInt bonus_time = 0}$	:i if $playerinfoequals$%GLOBAL%$player$$is_local_client$ = %i(0)		:i return 	:i endif	:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $invincible$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$invincible$ = %i(1):s}	:i if (%GLOBAL%$part$ = $Vocals$)		:i $wait$${			StructInt 1			StructQBKey second		}$			:i else 		:i $getplayerinfo$%GLOBAL%$player$$scroll_time$		:i $wait$(%GLOBAL%$scroll_time$ + %GLOBAL%$bonus_time$)$seconds$	:i endif	:i $ruleset$ = (~$competitive_rules$)	:i if (%GLOBAL%$ruleset$ = $momentum_plus$)		:i $getplayerinfo$%GLOBAL%$player$$star_power_used$		:i if (%GLOBAL%$star_power_used$ = %i(0))			:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$invincible$ = %i(0):s}		:i endif	:i else 		:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$invincible$ = %i(0):s}	:i endif	:i if (%GLOBAL%$player$ !== %i(1))		:i $wait$((%GLOBAL%$player$ - %i(1)) * %i(3))$gameframes$	:i endif	:i $GMan_GetData$${		StructQBKey goal = competitive		StructQBKey name = difficulty_changes	}$		:i $SetArrayElement$$arrayName$ = $difficulty_changes$$index$ = (%GLOBAL%$player$%i(4294967295))$newValue$ = %i(0)	:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$difficulty_changes$ = %GLOBAL%$difficulty_changes$:s}	:i endfunction]Script competitive_get_time_alive 0x2dd8e630 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $current_life_start_time$	:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $past_life_time$	:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $alive$	:i $getsongtimems$	:i if (%GLOBAL%$time$ < %i(0))		:i return ${StructInt time_alive = 0}$	:i endif	:i if (%GLOBAL%$alive$ = %i(1))		:i %GLOBAL%$time_alive$ = ((%GLOBAL%$past_life_time$) + (%GLOBAL%$time$) - (%GLOBAL%$current_life_start_time$))	:i else 		:i %GLOBAL%$time_alive$ = (%GLOBAL%$past_life_time$)	:i endif	:i return $time_alive$ = %GLOBAL%$time_alive$	:i endfunction]Script competitive_rank_section_percent_hit 0x5bf1ab7f [	${StructInt section = 0}$	:i if (%GLOBAL%$section$ < %i(0))		:i return 	:i endif	:i $competitive_compute_current_percent_hit$$section$ = %GLOBAL%$section$	:i $FormatText$$checksumname$ = $request_id$%s("standard_%s")$s$ = %GLOBAL%$section$	:i $GMan_RequestArbitrationData$$source$ = $goalplayerdata$$var$ = $current_percent_hit$$goal$ = $competitive$$request_id$ = %GLOBAL%$request_id$	:i endfunction]Script competitive_compute_current_percent_hit 0x7841f322 [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$bonus_rules$		:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)	:i endif	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i $getplayerinfo$%GLOBAL%$player$$is_local_client$		:i if (%GLOBAL%$is_local_client$ = %i(1))			:i $getplayerinfo$%GLOBAL%$player$$current_detailedstats_array$			:i $getplayerinfo$%GLOBAL%$player$$current_detailedstats_max_array$			:i $getplayerinfo$%GLOBAL%$player$$part$			:i %GLOBAL%$notes_hit$ = ((~%GLOBAL%$current_detailedstats_array$):a{%GLOBAL%$section$:a})			:i %GLOBAL%$notes_max$ = ((~%GLOBAL%$current_detailedstats_max_array$):a{%GLOBAL%$section$:a})			:i $GMan_GetData$${				StructQBKey goal = competitive				StructQBKey name = overstrum_total			}$						:i %GLOBAL%$player_overstrum_total$ = (%GLOBAL%$overstrum_total$:a{(%GLOBAL%$player$ - %i(1)):a})			:i %GLOBAL%$overstrum_adjust$ = %i(0)			:i if (%GLOBAL%$player_overstrum_total$ > (%GLOBAL%$notes_max$ - %GLOBAL%$notes_hit$))				:i %GLOBAL%$overstrum_adjust$ = (%GLOBAL%$player_overstrum_total$ - (%GLOBAL%$notes_max$ - %GLOBAL%$notes_hit$))			:i endif			:i if (%GLOBAL%$part$ = $Vocals$)				:i %GLOBAL%$percentage_hit$ = (%i(4294967295))			:i else 				:i if (%GLOBAL%$notes_max$ = %i(0))					:i %GLOBAL%$percentage_hit$ = (%i(4294967295))				:i else 					:i %GLOBAL%$percentage_hit$ = (((%GLOBAL%$notes_hit$ * %f(1.0)) / ((%GLOBAL%$notes_max$ + %GLOBAL%$overstrum_adjust$) * %f(1.0))) * %f(100.0))					:i $CastToInteger$${StructQBKey percentage_hit}$				:i endif			:i endif			:i $SetArrayElement$$arrayName$ = $overstrum_total$$index$ = (%GLOBAL%$player$ - %i(1))$newValue$ = %i(0)			:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$current_percent_hit$ = %GLOBAL%$percentage_hit$:s}			:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$overstrum_total$ = %GLOBAL%$overstrum_total$:s}			:i $competitive_main_percent_hit_watcher_varUpdated$$player$ = %GLOBAL%$player$$current_value$ = %GLOBAL%$percentage_hit$		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script competitive_arbitration_complete 0x05c1b6c1 [	:i $GetArraySize$%GLOBAL%$data_array$	:i if (%GLOBAL%$array_size$ > %i(0))		:i if $StructureContains$$structure$ = (%GLOBAL%$data_array$:a{%i(0):a})$Score$			:i $competitive_rank_score$$data_array$ = %GLOBAL%$data_array$		:i elseif $StructureContains$$structure$ = (%GLOBAL%$data_array$:a{%i(0):a})$current_percent_hit$			:i $competitive_reward_players_for_percent_hit$$data_array$ = %GLOBAL%$data_array$		:i elseif $StructureContains$$structure$ = (%GLOBAL%$data_array$:a{%i(0):a})$current_vocal_percent_hit$			:i $competitive_reward_players_for_percent_hit$$data_array$ = %GLOBAL%$data_array$$Vocals$ = %i(1)		:i endif	:i endif	:i endfunction]Script competitive_reward_players_for_percent_hit 0x121ef812 [	${StructInt Vocals = 0}$	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				data_array			]		}		StructQBKey all	}$		:i %GLOBAL%$local_players_scored$ = :a{:a}	:i %GLOBAL%$custom_metric_values$ = :a{:a}	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$bonus_rules$		:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)	:i endif	:i $GetArraySize$%GLOBAL%$data_array$	:i %GLOBAL%$i$ = %i(0)	:i while 	:i %GLOBAL%$player$ = (%GLOBAL%$data_array$:a{%GLOBAL%$i$:a}->$player$)	:i if (%GLOBAL%$Vocals$ = %i(1))		:i %GLOBAL%$Score$ = (%GLOBAL%$data_array$:a{%GLOBAL%$i$:a}->$current_vocal_percent_hit$)	:i else 		:i %GLOBAL%$Score$ = (%GLOBAL%$data_array$:a{%GLOBAL%$i$:a}->$current_percent_hit$)	:i endif	:i if $playerinfoequals$%GLOBAL%$player$$is_onscreen$ = %i(1)		:i if $playerinfoequals$%GLOBAL%$player$$is_local_client$ = %i(0)			:i $competitive_main_percent_hit_watcher_varUpdated$$player$ = %GLOBAL%$player$$current_value$ = %GLOBAL%$Score$		:i endif	:i endif	:i %GLOBAL%$custom_metric_values$ = (%GLOBAL%$custom_metric_values$ + :s{$player$ = %GLOBAL%$player$$Score$ = %GLOBAL%$Score$$rank$ = %i(0):s})	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i $competitive_sort_players_by_metric$$metric$ = $custom$$best$ = $highest$$custom_metric_values$ = %GLOBAL%$custom_metric_values$	:i $GetArraySize$(%GLOBAL%$bonus_ruleset$->$reward_value$)	:i %GLOBAL%$non_local_player_scored$ = %i(0)	:i %GLOBAL%$i$ = %i(1)	:i while 	:i %GLOBAL%$i2$ = %i(0)	:i $GetNumPlayersInGame$	:i while 	:i if (%GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$rank$ = %GLOBAL%$i$)		:i if NOT (%GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$Score$ <= %i(0))			:i $getplayerinfo$(%GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$player$)$is_local_client$			:i if (%GLOBAL%$is_local_client$ = %i(1))				:i $GMan_GetData$$goal$ = $competitive$$player$ = (%GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$player$)$name$ = $performance_value$				:i if (%GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$Score$ >= %i(1))					:i %GLOBAL%$performance_value$ = (%GLOBAL%$performance_value$ + (%GLOBAL%$bonus_ruleset$->$reward_value$:a{(%GLOBAL%$i$ - %i(1)):a}))				:i endif				:i $GMan_SetData$$goal$ = $competitive$$player$ = (%GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$player$)$params$ = :s{$performance_value$ = %GLOBAL%$performance_value$$current_percent_hit$ = %i(4294967295)$current_vocal_percent_hit$ = %i(4294967295):s}				:i %GLOBAL%$local_player$ = (%GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$player$)				:i %GLOBAL%$local_players_scored$ = (%GLOBAL%$local_players_scored$ + %GLOBAL%$local_player$)			:i else 				:i %GLOBAL%$non_local_player_scored$ = %i(1)			:i endif		:i endif	:i endif	:i %GLOBAL%$i2$ = (%GLOBAL%$i2$ + %i(1))	:i loop_to %GLOBAL%$num_players$	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i $GetArraySize$%GLOBAL%$local_players_scored$	:i if (%GLOBAL%$array_size$ > %i(0) OR %GLOBAL%$non_local_player_scored$ = %i(1))		:i if (%GLOBAL%$array_size$ = %i(1) AND %GLOBAL%$non_local_player_scored$ = %i(0))			:i $SpawnScript$$sfx_perfectionist_section_won$$params$ = :s{$player$ = (%GLOBAL%$local_players_scored$:a{%i(0):a})$pan_wide$ = %i(0):s}		:i else 			:i $SpawnScript$${				StructQBKey sfx_perfectionist_section_won				StructStruct params				{					StructHeader					{						StructInt pan_wide = 1					}				}			}$					:i endif	:i endif	:i endfunction]Script competitive_player_message_create c1ba0f63 [	:i %GLOBAL%$meter_exists$ = %i(0)	:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$	:i $FormatText$$checksumname$ = $hud_player_meter$%s("comp_meters_p%a")$a$ = %GLOBAL%$player$	:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$highway_hud_root$		:i return 	:i endif	:i if $ScreenElementExists$$id$ = %GLOBAL%$hud_player_meter$		:i %GLOBAL%$meter_exists$ = %i(1)		:i %GLOBAL%$display_time$ = %f(0.25)	:i endif	:i if %GLOBAL%$highway_hud_root$.$desc_resolvealias$$name$ = $alias_player_meter$$param$ = $hud_player_meter$		:i %GLOBAL%$meter_exists$ = %i(1)		:i %GLOBAL%$display_time$ = %f(0.75)	:i endif	:i if (%GLOBAL%$meter_exists$ = %i(1))		:i %GLOBAL%$meter_message$ = :s{$meter_text$ = %GLOBAL%$text$$meter_text_alpha$ = %i(0)$meter_text_rgba$ = %GLOBAL%$color$:s}		:i %GLOBAL%$hud_player_meter$.$gettags$		:i if NOT $GotParam$${StructQBKey meter_message_queue}$			:i %GLOBAL%$meter_message_queue$ = :a{:a}		:i endif		:i %GLOBAL%$meter_message_queue$ = (%GLOBAL%$meter_message_queue$ + %GLOBAL%$meter_message$)		:i %GLOBAL%$hud_player_meter$.$settags$$meter_message_queue$ = %GLOBAL%$meter_message_queue$		:i $GetArraySize$%GLOBAL%$meter_message_queue$		:i if (%GLOBAL%$array_size$ = %i(1))			:i $FormatText$$checksumname$ = $script_id$%s("highway%p_script")$p$ = %GLOBAL%$player$			:i $KillSpawnedScript$$id$ = %GLOBAL%$script_id$			:i %GLOBAL%$hud_player_meter$.$obj_spawnscriptnow$$competitive_player_message_display$$id$ = %GLOBAL%$script_id$$params$ = isNull 		:i endif	:i endif	:i endfunction]Script competitive_player_message_display cf265509 [	${StructInt display_time = 1}$	:i while 	:i %GLOBAL%$hud_player_meter$.$gettags$	:i $GetArraySize$%GLOBAL%$meter_message_queue$	:i if (%GLOBAL%$array_size$ = %i(0))		:i continue	:i else 		:i if $GotParam$${StructQBKey shift_right}$			:i if (%GLOBAL%$shift_right$ = %i(1))				:i %GLOBAL%$hud_player_meter$.$se_setprops$$meter_text_pos$ = %vec2(195.0,31.0)			:i endif		:i endif		:i %GLOBAL%$hud_player_meter$.$se_setprops$$meter_text_alpha$ = %i(0)		:i $wait$${			StructInt 1			StructQBKey gameframe		}$				:i %GLOBAL%$hud_player_meter$.$se_waitprops$		:i %GLOBAL%$message_params$ = (%GLOBAL%$meter_message_queue$:a{%i(0):a})		:i %GLOBAL%$hud_player_meter$.$se_setprops$$meter_text_rgba$ = (%GLOBAL%$message_params$->$meter_text_rgba$)		:i %GLOBAL%$hud_player_meter$.$se_setprops$$meter_text$ = (%GLOBAL%$message_params$->$meter_text$)		:i %GLOBAL%$hud_player_meter$.$se_setprops$$meter_text_alpha$ = %i(1)$time$ = %f(0.0099999)		:i %GLOBAL%$hud_player_meter$.$se_waitprops$		:i $wait$%GLOBAL%$display_time$$seconds$		:i %GLOBAL%$hud_player_meter$.$se_setprops$$meter_text_alpha$ = %i(0)$time$ = %f(0.2000000)		:i %GLOBAL%$hud_player_meter$.$se_waitprops$		:i %GLOBAL%$hud_player_meter$.$se_setprops$$meter_text$ = ^[03ac90f0]^		:i %GLOBAL%$hud_player_meter$.$gettags$		:i $RemoveArrayElement$$array$ = %GLOBAL%$meter_message_queue$$index$ = %i(0)		:i %GLOBAL%$hud_player_meter$.$settags$$meter_message_queue$ = %GLOBAL%$array$	:i endif	:i loop_to 	:i endfunction]Script competitive_create_on_highway_text bd700d8c [	${		StructQBStringQs text = 0x6fd50f6e		StructFloat Scale = 1.00		StructArray color		{			ArrayInteger			[				255				255				255				255			]		}		StructInt alpha = 1		StructInt use_new_message_system = 1		StructInt shift_right = 0	}$		:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$	:i if (%GLOBAL%$is_onscreen$ = %i(0))		:i return 	:i endif	:i if $GotParam$${StructQBKey points}$		:i if (~$competitive_rules$ = $do_or_die$ OR ~$competitive_rules$ = $team_do_or_die$)			:i $shift_right$ = %i(1)		:i endif	:i endif	:i $competitive_player_message_create$$player$ = %GLOBAL%$player$$text$ = %GLOBAL%$text$$shift_right$ = %GLOBAL%$shift_right$	:i endfunction]Script competitive_show_score_gap c6b001af [	${Unknown [0001240067e6859a696969690000001800012400166f326969696969000000280001240068f01b686969696900000000]}$	:i $initial_pos$ = %vec2(-32.0,60.0)	:i $above_pos$ = %vec2(-32.0,16.0)	:i $below_pos$ = %vec2(-32.0,105.0)	:i $meter_exists$ = %i(0)	:i $vocal2_initial_pos$ = %vec2(-32.0,-153.0)	:i $vocal2_pos$ = %vec2(-32.0,-199.0)	:i $static_offset$ = %vec2(0.0,-35.0)	:i $extend_time$ = %f(0.1500000)	:i $display_time$ = %f(1.5)	:i $retract_time$ = %f(0.5500000)	:i $pos_color$ = :a{%i(68)%i(215)%i(22):a}	:i $neg_color$ = :a{%i(243)%i(43)%i(53):a}	:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$	:i $FormatText$$checksumname$ = $hud_player_meter$%s("comp_meters_p%a")$a$ = %GLOBAL%$player$	:i $FormatText$$textname$ = $text$^[8c5c152d]^$n$ = %GLOBAL%$score_gap$$usecommas$	:i if $ScreenElementExists$$id$ = %GLOBAL%$hud_player_meter$		:i %GLOBAL%$meter_exists$ = %i(1)		:i $Vocals_GetActiveHighwayIndex$$player$ = %GLOBAL%$player$		:i $vocals_get_highway_pos$$highway_index$ = %GLOBAL%$active_highway_index$		:i if (%GLOBAL%$highway_pos$ = $vocal1$)			:i $meter_activated_pos$ = %GLOBAL%$below_pos$		:i elseif (%GLOBAL%$highway_pos$ = $vocal2$)			:i $initial_pos$ = %GLOBAL%$vocal2_initial_pos$			:i $meter_activated_pos$ = %GLOBAL%$vocal2_pos$			:i $getplayerinfo$%GLOBAL%$player$$vocals_highway_view$			:i if (%GLOBAL%$player$ = %i(4))				:i $getplayerinfo$${					StructInt 3					StructQBKey vocals_highway_view				}$							:i endif			:i if (%GLOBAL%$vocals_highway_view$ = $static$ OR %GLOBAL%$vocals_highway_view$ = $karaoke$)				:i $initial_pos$ = (%GLOBAL%$initial_pos$ + %GLOBAL%$static_offset$)				:i $meter_activated_pos$ = (%GLOBAL%$meter_activated_pos$ + %GLOBAL%$static_offset$)			:i endif		:i endif	:i else 		:i if $hud_root$.$desc_resolvealias$${				StructQBKey name = alias_versus_meter				StructQBKey param = versus_meter			}$						:i if $ScreenElementExists$$id$ = %GLOBAL%$versus_meter$				:i $above_pos$ = %GLOBAL%$below_pos$			:i endif		:i endif	:i endif	:i if $ScreenElementExists$$id$ = %GLOBAL%$highway_hud_root$		:i if %GLOBAL%$highway_hud_root$.$desc_resolvealias$$name$ = $alias_player_meter$$param$ = $hud_player_meter$			:i %GLOBAL%$meter_exists$ = %i(1)			:i if (%GLOBAL%$player_leading$ = %i(1))				:i $meter_activated_pos$ = %GLOBAL%$above_pos$			:i elseif (%GLOBAL%$player_leading$ = %i(0))				:i $meter_activated_pos$ = %GLOBAL%$below_pos$			:i endif		:i endif	:i endif	:i if (%GLOBAL%$player_leading$ = %i(1))		:i $text_color$ = %GLOBAL%$pos_color$	:i elseif (%GLOBAL%$player_leading$ = %i(0))		:i $text_color$ = %GLOBAL%$neg_color$	:i endif	:i if (%GLOBAL%$meter_exists$ = %i(1))		:i %GLOBAL%$hud_player_meter$.$se_setprops$$gap_meter_pos$ = %GLOBAL%$initial_pos$		:i %GLOBAL%$hud_player_meter$.$se_setprops$$gap_amount_text$ = %GLOBAL%$text$		:i %GLOBAL%$hud_player_meter$.$se_setprops$$gap_amount_rgba$ = %GLOBAL%$text_color$		:i %GLOBAL%$hud_player_meter$.$se_setprops$$gap_meter_pos$ = %GLOBAL%$meter_activated_pos$$time$ = %GLOBAL%$extend_time$		:i %GLOBAL%$hud_player_meter$.$se_waitprops$		:i $wait$%GLOBAL%$display_time$$seconds$		:i if $ScreenElementExists$$id$ = %GLOBAL%$hud_player_meter$			:i %GLOBAL%$hud_player_meter$.$se_setprops$$gap_meter_pos$ = %GLOBAL%$initial_pos$$time$ = %GLOBAL%$retract_time$			:i %GLOBAL%$hud_player_meter$.$se_waitprops$			:i if $ScreenElementExists$$id$ = %GLOBAL%$hud_player_meter$				:i %GLOBAL%$hud_player_meter$.$se_setprops$$extra_txt$ = ^[03ac90f0]^			:i endif		:i endif	:i endif	:i endfunction]Script competitive_rank_change 0x929d7c99 [	${Unknown [0001240067e6859a696969690000001800012400b8357e7c69696969000000280001240081497fdf6969696900000000]}$	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if (%GLOBAL%$ruleset$ = $momentum_plus$ AND %GLOBAL%$current_rank$ = %i(1) AND %GLOBAL%$previous_rank$ > %i(1))		:i $getplayerinfo$%GLOBAL%$player$$star_power_used$		:i if (%GLOBAL%$star_power_used$ = %i(1))			:i $SpawnScript$$goal_hud_competitive_shield_create$$params$ = :s{$player$ = %GLOBAL%$player$:s}		:i endif	:i endif	:i endfunction]Script competitive_show_difficulty_icon 0x81aafe6d [	${		StructFloat fade_in_time = 0.75		StructFloat wait_time = 2.00		StructFloat fade_out_time = 0.75	}$		:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player				change_direction			]		}		StructQBKey all	}$		:i $getplayerinfo$%GLOBAL%$player$$part$	:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$	:i if (%GLOBAL%$part$ = $Vocals$)		:i $FormatText$$checksumname$ = $competitive_meters_id$%s("comp_meters_p%a")$a$ = %GLOBAL%$player$		:i $meter$ = %GLOBAL%$competitive_meters_id$	:i else 		:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$highway_hud_root$			:i return 		:i endif		:i if %GLOBAL%$highway_hud_root$.$desc_resolvealias$$name$ = $alias_player_meter$$param$ = $hud_player_meter$			:i $meter$ = %GLOBAL%$hud_player_meter$		:i endif	:i endif	:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$meter$		:i return 	:i endif	:i if (%GLOBAL%$change_direction$ = $up$)		:i %GLOBAL%$meter$.$se_setprops$$difficulty_up_scale$ = %f(1.0)		:i %GLOBAL%$meter$.$se_setprops$$difficulty_up_alpha$ = %f(1.0)$time$ = %GLOBAL%$fade_in_time$	:i elseif (%GLOBAL%$change_direction$ = $down$)		:i %GLOBAL%$meter$.$se_setprops$$difficulty_down_scale$ = %f(1.0)		:i %GLOBAL%$meter$.$se_setprops$$difficulty_down_alpha$ = %f(1.0)$time$ = %GLOBAL%$fade_in_time$	:i endif	:i $block_until_diff_safe$$player$ = %GLOBAL%$player$	:i if (%GLOBAL%$part$ = $Vocals$)		:i $wait$%GLOBAL%$wait_time$$seconds$		:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$meter$			:i return 		:i endif		:i if (%GLOBAL%$change_direction$ = $up$)			:i %GLOBAL%$meter$.$se_setprops$$difficulty_up_alpha$ = %f(0.0)$time$ = %GLOBAL%$fade_out_time$		:i elseif (%GLOBAL%$change_direction$ = $down$)			:i %GLOBAL%$meter$.$se_setprops$$difficulty_down_alpha$ = %f(0.0)$time$ = %GLOBAL%$fade_out_time$		:i endif	:i else 		:i %GLOBAL%$pulse_fade_time$ = %f(0.1000000)		:i $getplayerinfo$%GLOBAL%$player$$scroll_time$		:i %GLOBAL%$time_remaining$ = %GLOBAL%$scroll_time$		:i %GLOBAL%$wait_time$ = (%GLOBAL%$time_remaining$ * %f(0.6000000))		:i $wait$%GLOBAL%$wait_time$$seconds$		:i %GLOBAL%$time_remaining$ = (%GLOBAL%$time_remaining$ - %GLOBAL%$wait_time$)		:i if (%GLOBAL%$change_direction$ = $up$)			:i while 			:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$meter$				:i return 			:i endif			:i %GLOBAL%$meter$.$se_setprops$$difficulty_up_alpha$ = %f(0.0)$time$ = %GLOBAL%$pulse_fade_time$			:i $wait$%GLOBAL%$pulse_fade_time$$seconds$			:i if (%GLOBAL%$time_remaining$ < (%GLOBAL%$pulse_fade_time$ * %f(2.5)))				:i continue			:i endif			:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$meter$				:i return 			:i endif			:i %GLOBAL%$meter$.$se_setprops$$difficulty_up_alpha$ = %f(1.0)$time$ = %GLOBAL%$pulse_fade_time$			:i $wait$%GLOBAL%$pulse_fade_time$$seconds$			:i %GLOBAL%$pulse_length$ = (%GLOBAL%$time_remaining$ * %f(0.1000000))			:i $wait$%GLOBAL%$pulse_length$$seconds$			:i %GLOBAL%$time_remaining$ = ((%GLOBAL%$time_remaining$ - %GLOBAL%$pulse_length$) - (%GLOBAL%$pulse_fade_time$ * %i(2)))			:i loop_to 		:i elseif (%GLOBAL%$change_direction$ = $down$)			:i while 			:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$meter$				:i return 			:i endif			:i %GLOBAL%$meter$.$se_setprops$$difficulty_down_alpha$ = %f(0.0)$time$ = %GLOBAL%$pulse_fade_time$			:i $wait$%GLOBAL%$pulse_fade_time$$seconds$			:i if (%GLOBAL%$time_remaining$ < (%GLOBAL%$pulse_fade_time$ * %f(2.5)))				:i continue			:i endif			:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$meter$				:i return 			:i endif			:i %GLOBAL%$meter$.$se_setprops$$difficulty_down_alpha$ = %f(1.0)$time$ = %GLOBAL%$pulse_fade_time$			:i $wait$%GLOBAL%$pulse_fade_time$$seconds$			:i %GLOBAL%$pulse_length$ = (%GLOBAL%$time_remaining$ * %f(0.1000000))			:i $wait$%GLOBAL%$pulse_length$$seconds$			:i %GLOBAL%$time_remaining$ = ((%GLOBAL%$time_remaining$ - %GLOBAL%$pulse_length$) - (%GLOBAL%$pulse_fade_time$ * %i(2)))			:i loop_to 		:i endif	:i endif	:i endfunction]Script competitive_clear_difficulty_icon 0x3d07b403 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i $FormatText$$checksumname$ = $icon_script_id$%s("comp_diff_icon_p%p")$p$ = %GLOBAL%$player$	:i $KillSpawnedScript$$id$ = %GLOBAL%$icon_script_id$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$	:i if (%GLOBAL%$part$ = $Vocals$)		:i $FormatText$$checksumname$ = $competitive_meters_id$%s("comp_meters_p%a")$a$ = %GLOBAL%$player$		:i $meter$ = %GLOBAL%$competitive_meters_id$	:i else 		:i if %GLOBAL%$highway_hud_root$.$desc_resolvealias$$name$ = $alias_player_meter$$param$ = $hud_player_meter$			:i $meter$ = %GLOBAL%$hud_player_meter$		:i endif	:i endif	:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$meter$		:i return 	:i endif	:i %GLOBAL%$meter$.$se_setprops$$difficulty_up_alpha$ = %i(0)	:i %GLOBAL%$meter$.$se_setprops$$difficulty_down_alpha$ = %i(0)	:i endfunction]Script competitive_song_complete e2372ec9 [	${StructQBKey event = None}$	:i $KillSpawnedScript$${StructQBKey name = competitive_meter_track_player_scores}$	:i $KillSpawnedScript$${StructQBKey name = competitive_player_message_display}$	:i if NOT (%GLOBAL%$event$ = $song_quit$)		:i $GetNumPlayersInGame$${StructQBKey on_screen}$		:i $GetFirstPlayer$${StructQBKey on_screen}$		:i while 		:i $destroy_highway_color_manager$$player$ = %GLOBAL%$player$		:i $GetNextPlayer$$on_screen$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players_shown$	:i endif	:i $GMan_PassCheckpoint$${StructQBKey goal = competitive}$	:i endfunction]Script competitive_update_band_meter 0x44223c4d [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i %GLOBAL%$band1_score$ = %i(0)	:i %GLOBAL%$band2_score$ = %i(0)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$team$		:i if ((~%GLOBAL%$ruleset$->$team$) = %i(1))			:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$ranking_criteria$				:i switch (~%GLOBAL%$ruleset$->$ranking_criteria$)					:i case $Score$						:i $GetBandInfo$${							StructInt 1							StructQBKey Score							StructQBKey out = band1_score						}$												:i $GetBandInfo$${							StructInt 2							StructQBKey Score							StructQBKey out = band2_score						}$												:i endcase					case $performance_value$						:i $GetNumPlayersInGame$						:i if (%GLOBAL%$num_players$ > %i(1))							:i $GetFirstPlayer$							:i while 							:i $getplayerinfo$%GLOBAL%$player$$band$							:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$							:i if (%GLOBAL%$band$ = %i(1))								:i %GLOBAL%$band1_score$ = (%GLOBAL%$band1_score$ + %GLOBAL%$performance_value$)							:i else 								:i %GLOBAL%$band2_score$ = (%GLOBAL%$band2_score$ + %GLOBAL%$performance_value$)							:i endif							:i $GetNextPlayer$$player$ = %GLOBAL%$player$							:i loop_to %GLOBAL%$num_players$						:i endif						:i endcase					case $elimination_order$						:i $GetNumPlayersInGame$						:i if (%GLOBAL%$num_players$ > %i(1))							:i $GetFirstPlayer$							:i while 							:i $getplayerinfo$%GLOBAL%$player$$band$							:i $getplayerinfo$%GLOBAL%$player$$Score$							:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $eliminated$							:i if (%GLOBAL%$band$ = %i(1))								:i if (%GLOBAL%$eliminated$ = %i(0))									:i %GLOBAL%$band1_score$ = (%GLOBAL%$band1_score$ + %i(1))								:i endif							:i else 								:i if (%GLOBAL%$eliminated$ = %i(0))									:i %GLOBAL%$band2_score$ = (%GLOBAL%$band2_score$ + %i(1))								:i endif							:i endif							:i $GetNextPlayer$$player$ = %GLOBAL%$player$							:i loop_to %GLOBAL%$num_players$						:i endif				:i end_switch				:i $CastToInteger$${StructQBKey band1_score}$				:i $CastToInteger$${StructQBKey band2_score}$				:i $band_scores$ = :a{					:i :s{$band$ = %i(1)$value$ = %GLOBAL%$band1_score$:s}					:i :s{$band$ = %i(2)$value$ = %GLOBAL%$band2_score$:s}				:i :a}				:i $GMan_CompetitiveMeterFunc$:s{					:i $goal$ = $competitive$					:i $tool$ = $comp_meter$					:i $func$ = $update_bands$					:i $params$ = :s{$band_scores$ = %GLOBAL%$band_scores$:s}				:i :s}			:i endif		:i endif	:i endif	:i endfunction]Script competitive_find_winner b20fd7c4 [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i %GLOBAL%$band1_score$ = %i(0)	:i %GLOBAL%$band2_score$ = %i(0)	:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$team$		:i if ((~%GLOBAL%$ruleset$->$team$) = %i(1))			:i if $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$ranking_criteria$				:i switch (~%GLOBAL%$ruleset$->$ranking_criteria$)					:i case $Score$						:i $GetBandInfo$${							StructInt 1							StructQBKey Score							StructQBKey out = band1_score						}$												:i $GetBandInfo$${							StructInt 2							StructQBKey Score							StructQBKey out = band2_score						}$												:i endcase					case $performance_value$						:i $GetNumPlayersInGame$						:i if (%GLOBAL%$num_players$ > %i(1))							:i $GetFirstPlayer$							:i while 							:i $getplayerinfo$%GLOBAL%$player$$band$							:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$							:i if (%GLOBAL%$band$ = %i(1))								:i %GLOBAL%$band1_score$ = (%GLOBAL%$band1_score$ + %GLOBAL%$performance_value$)							:i else 								:i %GLOBAL%$band2_score$ = (%GLOBAL%$band2_score$ + %GLOBAL%$performance_value$)							:i endif							:i $GetNextPlayer$$player$ = %GLOBAL%$player$							:i loop_to %GLOBAL%$num_players$						:i endif						:i endcase					case $elimination_order$						:i $GetNumPlayersInGame$						:i if (%GLOBAL%$num_players$ > %i(1))							:i $GetFirstPlayer$							:i while 							:i $getplayerinfo$%GLOBAL%$player$$band$							:i $getplayerinfo$%GLOBAL%$player$$Score$							:i if (%GLOBAL%$band$ = %i(1))								:i if (%GLOBAL%$band1_score$ < %GLOBAL%$Score$)									:i %GLOBAL%$band1_score$ = (%GLOBAL%$Score$)								:i endif							:i else 								:i if (%GLOBAL%$band2_score$ < %GLOBAL%$Score$)									:i %GLOBAL%$band2_score$ = (%GLOBAL%$Score$)								:i endif							:i endif							:i $GetNextPlayer$$player$ = %GLOBAL%$player$							:i loop_to %GLOBAL%$num_players$						:i endif				:i end_switch				:i if (%GLOBAL%$band1_score$ > %GLOBAL%$band2_score$)				:i elseif (%GLOBAL%$band1_score$ < %GLOBAL%$band2_score$)				:i else 				:i endif			:i endif		:i endif	:i endif	:i endfunction]Script competitive_get_measure_times 0x2dde2a69 [	:i $Playlist_GetCurrentSong$	:i $SongFileManager$$func$ = $get_num_fretbar_notes$$song_name$ = %GLOBAL%$current_song$	:i $SongFileManager$$func$ = $get_num_timesig_notes$$song_name$ = %GLOBAL%$current_song$	:i $timesig_entry$ = %i(0)	:i $timesig_num_val$ = %i(0)	:i $measure_count$ = %i(0)	:i $fretbar_entry$ = %i(0)	:i $fretbar_count$ = %i(0)	:i while 	:i if (%GLOBAL%$timesig_entry$ < %GLOBAL%$num_timesig_notes$)		:i $SongFileManager$$func$ = $get_timesig_note$$song_name$ = %GLOBAL%$current_song$$index$ = %GLOBAL%$timesig_entry$		:i $SongFileManager$$func$ = $get_fretbar_note$$song_name$ = %GLOBAL%$current_song$$index$ = %GLOBAL%$fretbar_entry$		:i if (%GLOBAL%$timesig_time$ <= %GLOBAL%$fretbar_time$)			:i $timesig_num_val$ = %GLOBAL%$timesig_num$			:i $fretbar_count$ = %i(0)			:i $timesig_entry$ = (%GLOBAL%$timesig_entry$ + %i(1))		:i endif	:i endif	:i $fretbar_count$ = (%GLOBAL%$fretbar_count$ + %i(1))	:i if (%GLOBAL%$fretbar_count$ = %GLOBAL%$timesig_num_val$)		:i $measure_count$ = (%GLOBAL%$measure_count$ + %i(1))		:i $fretbar_count$ = %i(0)	:i endif	:i $fretbar_entry$ = (%GLOBAL%$fretbar_entry$ + %i(1))	:i loop_to %GLOBAL%$num_fretbar_notes$	:i $timesig_entry$ = %i(0)	:i $measure_count$ = %i(0)	:i $fretbar_entry$ = %i(0)	:i $fretbar_count$ = %i(0)	:i %GLOBAL%$measure_time_array$ = :a{:a}	:i while 	:i if (%GLOBAL%$timesig_entry$ < %GLOBAL%$num_timesig_notes$)		:i $SongFileManager$$func$ = $get_timesig_note$$song_name$ = %GLOBAL%$current_song$$index$ = %GLOBAL%$timesig_entry$		:i $SongFileManager$$func$ = $get_fretbar_note$$song_name$ = %GLOBAL%$current_song$$index$ = %GLOBAL%$fretbar_entry$		:i if (%GLOBAL%$timesig_time$ <= %GLOBAL%$fretbar_time$)			:i $timesig_num_val$ = %GLOBAL%$timesig_num$			:i $fretbar_count$ = %i(0)			:i $timesig_entry$ = (%GLOBAL%$timesig_entry$ + %i(1))		:i endif	:i endif	:i if (%GLOBAL%$fretbar_count$ = %i(0))		:i $SongFileManager$$func$ = $get_fretbar_note$$song_name$ = %GLOBAL%$current_song$$index$ = %GLOBAL%$fretbar_entry$		:i $time$ = %GLOBAL%$fretbar_time$		:i %GLOBAL%$measure_time_array$ = (%GLOBAL%$measure_time_array$ + %GLOBAL%$time$)	:i endif	:i $fretbar_count$ = (%GLOBAL%$fretbar_count$ + %i(1))	:i if (%GLOBAL%$fretbar_count$ = %GLOBAL%$timesig_num_val$)		:i $measure_count$ = (%GLOBAL%$measure_count$ + %i(1))		:i $fretbar_count$ = %i(0)	:i endif	:i $fretbar_entry$ = (%GLOBAL%$fretbar_entry$ + %i(1))	:i loop_to %GLOBAL%$num_fretbar_notes$	:i return $measure_times$ = %GLOBAL%$measure_time_array$	:i endfunction]Script competitive_sort_players_by_metric 0x48780be0 [	${		StructQBKey metric = performance_value		StructQBKey best = highest	}$		:i %GLOBAL%$standings$ = :a{:a}	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(1))		:i $GetFirstPlayer$		:i while 		:i switch %GLOBAL%$metric$			:i case $Score$				:i $getplayerinfo$%GLOBAL%$player$$Score$				:i %GLOBAL%$metric_value$ = %GLOBAL%$Score$				:i endcase			case $performance_value$				:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $performance_value$				:i %GLOBAL%$metric_value$ = %GLOBAL%$performance_value$				:i endcase			case $custom$				:i %GLOBAL%$standings$ = (%GLOBAL%$custom_metric_values$)				:i continue		:i end_switch		:i %GLOBAL%$standings$ = (%GLOBAL%$standings$ + :s{$player$ = %GLOBAL%$player$$Score$ = %GLOBAL%$metric_value$$rank$ = %i(0):s})		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i $GetArraySize$%GLOBAL%$standings$	:i if (%GLOBAL%$array_size$ > %i(1))		:i %GLOBAL%$i$ = %i(0)		:i while 		:i %GLOBAL%$i2$ = %i(0)		:i %GLOBAL%$new_rank$ = %i(1)		:i while 		:i if (%GLOBAL%$best$ = $highest$)			:i if NOT ((%GLOBAL%$i$ = %GLOBAL%$i2$) OR (%GLOBAL%$standings$:a{%GLOBAL%$i$:a}->$Score$ >= %GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$Score$))				:i %GLOBAL%$new_rank$ = (%GLOBAL%$new_rank$ + %i(1))			:i endif		:i elseif (%GLOBAL%$best$ = $lowest$)			:i if NOT ((%GLOBAL%$i$ = %GLOBAL%$i2$) OR (%GLOBAL%$standings$:a{%GLOBAL%$i$:a}->$Score$ <= %GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$Score$))				:i %GLOBAL%$new_rank$ = (%GLOBAL%$new_rank$ + %i(1))			:i endif		:i else 			:i $scriptassert$%s("score can only be ranked best=highest or best=lowest you passed best=%b")$b$ = %GLOBAL%$best$		:i endif		:i %GLOBAL%$i2$ = (%GLOBAL%$i2$ + %i(1))		:i loop_to %GLOBAL%$array_size$		:i %GLOBAL%$player$ = (%GLOBAL%$standings$:a{%GLOBAL%$i$:a}->$player$)		:i %GLOBAL%$Score$ = (%GLOBAL%$standings$:a{%GLOBAL%$i$:a}->$Score$)		:i $SetArrayElement$$arrayName$ = $standings$$index$ = %GLOBAL%$i$$newValue$ = :s{$player$ = %GLOBAL%$player$$Score$ = %GLOBAL%$Score$$rank$ = %GLOBAL%$new_rank$:s}		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$		:i if $GotParam$${StructQBKey sort_by_rank}$			:i %GLOBAL%$new_standings$ = :a{:a}			:i %GLOBAL%$i$ = %i(1)			:i while 			:i %GLOBAL%$i2$ = %i(0)			:i while 			:i if ((%GLOBAL%$standings$:a{%GLOBAL%$i2$:a}->$rank$) = %GLOBAL%$i$)				:i %GLOBAL%$new_standings$ = (%GLOBAL%$new_standings$ + %GLOBAL%$standings$:a{%GLOBAL%$i2$:a})			:i endif			:i %GLOBAL%$i2$ = (%GLOBAL%$i2$ + %i(1))			:i loop_to %GLOBAL%$array_size$			:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))			:i loop_to %GLOBAL%$array_size$		:i endif		:i %GLOBAL%$standings$ = (%GLOBAL%$new_standings$)	:i endif	:i return $standings$ = %GLOBAL%$standings$	:i endfunction]Script competitive_start_sound_scripts 0x63566fc2 [	:i $competitive_kill_sound_scripts$	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i switch (~$competitive_rules$)		:i case $do_or_die$			:i endcase		case $team_do_or_die$			:i $spawnscriptnow$${StructQBKey sfx_do_or_die_watch_for_eliminated_player}$			:i endcase		case $elimination$			:i endcase		case $team_elimination$			:i $spawnscriptnow$${StructQBKey sfx_elimination_watch_for_eliminated_player}$			:i endcase		case $streakers$			:i endcase		case $team_streakers$			:i $spawnscriptnow$${StructQBKey sfx_streakers_watch_for_big_multiplier}$	:i end_switch	:i endfunction]Script competitive_kill_sound_scripts 0x99064c77 [	:i $KillSpawnedScript$${StructQBKey name = sfx_do_or_die_watch_for_eliminated_player}$	:i $KillSpawnedScript$${StructQBKey name = sfx_do_or_die_watch_for_eliminated_player_individual}$	:i $KillSpawnedScript$${StructQBKey name = sfx_elimination_watch_for_eliminated_player}$	:i $KillSpawnedScript$${StructQBKey name = sfx_elimination_watch_for_eliminated_player_individual}$	:i $KillSpawnedScript$${StructQBKey name = sfx_streakers_watch_for_big_multiplier}$	:i endfunction]Script sfx_do_or_die_watch_for_eliminated_player 0x4dcc7551 [	:i $GetNumPlayersInGame$${StructQBKey on_screen}$	:i if (%GLOBAL%$num_players_shown$ > %i(0))		:i $GetFirstPlayer$${StructQBKey on_screen}$		:i while 		:i $SpawnScript$$sfx_do_or_die_watch_for_eliminated_player_individual$$params$ = :s{ isNull :s}		:i $GetNextPlayer$$on_screen$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players_shown$	:i endif	:i endfunction]Script sfx_do_or_die_watch_for_eliminated_player_individual 0x9399f27d [	:i $FormatText$$checksumname$ = $event_name$%s("competitive_player_eliminated_p%p")$p$ = %GLOBAL%$player$	:i while 	:i $Block$$type$ = %GLOBAL%$event_name$	:i %GLOBAL%$player$ = (%GLOBAL%$event_data$->$player$)	:i $getplayerinfo$%GLOBAL%$player$$highway_position$	:i $sfx_do_or_die_player_eliminated$$player$ = %GLOBAL%$player$$highway_position$ = %GLOBAL%$highway_position$	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i endfunction]Script sfx_elimination_watch_for_eliminated_player 0x581b1359 [	:i $GetNumPlayersInGame$${StructQBKey on_screen}$	:i if (%GLOBAL%$num_players_shown$ > %i(0))		:i $GetFirstPlayer$${StructQBKey on_screen}$		:i while 		:i $SpawnScript$$sfx_elimination_watch_for_eliminated_player_individual$$params$ = :s{ isNull :s}		:i $GetNextPlayer$$on_screen$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players_shown$	:i endif	:i endfunction]Script sfx_elimination_watch_for_eliminated_player_individual 0x3c052d84 [	:i $FormatText$$checksumname$ = $event_name$%s("competitive_player_eliminated_p%p")$p$ = %GLOBAL%$player$	:i while 	:i $Block$$type$ = %GLOBAL%$event_name$	:i %GLOBAL%$player$ = (%GLOBAL%$event_data$->$player$)	:i $getplayerinfo$%GLOBAL%$player$$highway_position$	:i $sfx_elimination_player_eliminated$$player$ = %GLOBAL%$player$$highway_position$ = %GLOBAL%$highway_position$	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i endfunction]Script sfx_streakers_watch_for_big_multiplier 0x69c9e473 [	:i while 	:i $Block$${StructQBKey type = multiplier_increased}$	:i %GLOBAL%$player$ = (%GLOBAL%$event_data$->$player$)	:i %GLOBAL%$multiplier$ = (%GLOBAL%$event_data$->$multiplier$)	:i if (%GLOBAL%$multiplier$ = %i(10))		:i $getplayerinfo$%GLOBAL%$player$$highway_position$		:i $sfx_streakers_big_multiplier$$player$ = %GLOBAL%$player$$multiplier$ = %GLOBAL%$multiplier$$highway_position$ = %GLOBAL%$highway_position$	:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i endfunction]Script sfx_perfectionist_section_won 0x4768127a [	:i if (%GLOBAL%$pan_wide$ = %i(0))		:i if NOT $GotParam$${StructQBKey player}$			:i $scriptassert$${StructString 0x00000000 = "missing param player"}$		:i endif	:i endif	:i if NOT $GotParam$${StructQBKey player}$		:i $GetFirstPlayer$	:i endif	:i $getplayerinfo$%GLOBAL%$player$$part$	:i if (%GLOBAL%$part$ = $Vocals$)		:i $delay_time$ = %f(0.5500000)	:i else 		:i $delay_time$ = %f(1.1000000)	:i endif	:i $wait$%GLOBAL%$delay_time$$seconds$	:i $spawnscriptnow$$audio_gameplay_spawned_point_awarded_perfectionist_sfx$$params$ = :s{ isNull :s}	:i endfunction]Script sfx_do_or_die_section_won de0d85c0 [	:i if NOT $GotParam$${StructQBKey player}$		:i $scriptassert$${StructString 0x00000000 = "missing param player"}$	:i endif	:i $spawnscriptnow$$audio_gameplay_spawned_point_awarded_waiting$$params$ = :s{ isNull :s}	:i endfunction]Script sfx_do_or_die_player_eliminated 0x780091e2 [	:i if NOT $GotParam$${StructQBKey player}$		:i $scriptassert$${StructString 0x00000000 = "missing param player"}$	:i endif	:i $SoundEvent$${StructQBKey event = Audio_Multiplayer_Sudden_Death_Dropped}$	:i endfunction]Script sfx_elimination_player_eliminated 0x780091e2 [	:i if NOT $GotParam$${StructQBKey player}$		:i $scriptassert$${StructString 0x00000000 = "missing param player"}$	:i endif	:i $SoundEvent$${StructQBKey event = Audio_Multiplayer_Sudden_Death_Dropped}$	:i endfunction]Script sfx_streakers_big_multiplier 0x471ee592 [	:i if NOT $GotParam$${StructQBKey player}$		:i $scriptassert$${StructString 0x00000000 = "missing param player"}$	:i endif	:i endfunction]Script sfx_momentum_difficulty_increased 0x5e74b199 [	:i if NOT $GotParam$${StructQBKey player}$		:i $scriptassert$${StructString 0x00000000 = "missing param player"}$	:i endif	:i $audio_gameplay_play_momentum_difficulty_up_sfx$$player$ = %GLOBAL%$player$$highway_position$ = %GLOBAL%$highway_position$	:i endfunction]Script sfx_momentum_difficulty_decreased f4502a18 [	:i if NOT $GotParam$${StructQBKey player}$		:i $scriptassert$${StructString 0x00000000 = "missing param player"}$	:i endif	:i $getplayerinfo$%GLOBAL%$player$$highway_position$	:i $audio_gameplay_play_momentum_difficulty_down_sfx$$player$ = %GLOBAL%$player$$highway_position$ = %GLOBAL%$highway_position$	:i endfunction]Script spawn_do_diff_change d7d5bb6c [	${		StructInt player = 1		StructQBKey adjustment = up	}$		:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i $spawnscriptnow$$do_diff_change_spawned$$params$ = :s{$player$ = %GLOBAL%$player$$adjustment$ = %GLOBAL%$adjustment$:s}	:i endfunction]Script do_diff_change_spawned 0x006c1c44 [	:i $FormatText$$checksumname$ = $script_id$%s("p%pdifficulty_script")$p$ = %GLOBAL%$player$	:i if $ScriptIsRunning$$id$ = %GLOBAL%$script_id$		:i $KillSpawnedScript$$id$ = %GLOBAL%$script_id$	:i endif	:i $spawnscriptnow$$id$ = %GLOBAL%$script_id$$wait_and_change_difficulty$$params$ = :s{$player$ = %GLOBAL%$player$$adjustment$ = %GLOBAL%$adjustment$:s}	:i endfunction]Script competitive_adjust_difficulty 0x9235f7fb [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player				adjustment			]		}		StructQBKey all	}$		:i $getplayerinfo$%GLOBAL%$player$$difficulty$	:i $get_difficulty_text$$difficulty$ = %GLOBAL%$difficulty$	:i %GLOBAL%$difficulty_text$ = %GLOBAL%$difficulty_text_nl$	:i switch %GLOBAL%$adjustment$		:i case $up$			:i switch %GLOBAL%$difficulty$				:i case $beginner$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $easy$					:i endcase				case $easy$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $medium$					:i endcase				case $medium$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $hard$					:i endcase				case $hard$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $expert$					:i endcase				case $expert$			:i end_switch			:i endcase		case $down$			:i switch %GLOBAL%$difficulty$				:i case $easy$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $beginner$					:i endcase				case $medium$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $easy$					:i endcase				case $hard$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $medium$					:i endcase				case $expert$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $hard$			:i end_switch			:i endcase		case $down_2$			:i switch %GLOBAL%$difficulty$				:i case $easy$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $beginner$					:i endcase				case $medium$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $beginner$					:i endcase				case $hard$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $easy$					:i endcase				case $expert$					:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $medium$			:i end_switch			:i endcase		case $beginner$			:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $beginner$			:i endcase		case $easy$			:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $easy$			:i endcase		case $medium$			:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $medium$			:i endcase		case $hard$			:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $hard$			:i endcase		case $expert$			:i $SetPlayerInfo$%GLOBAL%$player$$difficulty$ = $expert$	:i end_switch	:i $getplayerinfo$%GLOBAL%$player$$part$	:i if NOT (%GLOBAL%$part$ = $Vocals$)		:i $getplayerinfo$%GLOBAL%$player$$difficulty$		:i $FormatText$$checksumname$ = $morph_script_id$%s("comp_morph_speed_p%p")$p$ = %GLOBAL%$player$		:i $KillSpawnedScript$$id$ = %GLOBAL%$morph_script_id$		:i $spawnscriptnow$$id$ = %GLOBAL%$morph_script_id$$morph_scroll_speed$$params$ = :s{$player$ = %GLOBAL%$player$$difficulty$ = %GLOBAL%$difficulty$$blend_time$ = %f(2.0):s}	:i endif	:i $competitive_set_streak_base$$player$ = %GLOBAL%$player$	:i endfunction]Script wait_and_change_difficulty a748595b [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i if $playerinfoequals$%GLOBAL%$player$$is_local_client$ = %i(0)		:i return 	:i endif	:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i if (%GLOBAL%$part$ = $Vocals$)		:i $FormatText$$checksumname$ = $competitive_meters_id$%s("comp_meters_p%a")$a$ = %GLOBAL%$player$		:i $meter$ = %GLOBAL%$competitive_meters_id$	:i else 		:i if %GLOBAL%$highway_hud_root$.$desc_resolvealias$$name$ = $alias_player_meter$$param$ = $hud_player_meter$			:i $meter$ = %GLOBAL%$hud_player_meter$		:i endif	:i endif	:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$meter$		:i return 	:i endif	:i $competitive_get_difficulty_change_direction$$adjustment$ = %GLOBAL%$adjustment$$player$ = %GLOBAL%$player$	:i switch %GLOBAL%$change_direction$		:i case $up$			:i $getplayerinfo$%GLOBAL%$player$$highway_position$			:i $sfx_momentum_difficulty_increased$$player$ = %GLOBAL%$player$$highway_position$ = %GLOBAL%$highway_position$			:i %GLOBAL%$meter$.$se_setprops$$difficulty_up_scale$ = %f(1.0)			:i %GLOBAL%$meter$.$se_setprops$$difficulty_up_alpha$ = %f(1.0)$time$ = %GLOBAL%$fade_in_time$			:i %GLOBAL%$difficulty_change$ = %i(1)			:i endcase		case $down$			:i $getplayerinfo$%GLOBAL%$player$$highway_position$			:i $sfx_momentum_difficulty_decreased$$player$ = %GLOBAL%$player$$highway_position$ = %GLOBAL%$highway_position$			:i %GLOBAL%$meter$.$se_setprops$$difficulty_down_scale$ = %f(1.0)			:i %GLOBAL%$meter$.$se_setprops$$difficulty_down_alpha$ = %f(1.0)$time$ = %GLOBAL%$fade_in_time$			:i %GLOBAL%$difficulty_change$ = %i(4294967295)			:i endcase		case $None$			:i return 	:i end_switch	:i $GMan_SetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$params$ = :s{$invincible$ = %i(1):s}	:i if (%GLOBAL%$player$ !== %i(1))		:i $wait$((%GLOBAL%$player$ - %i(1)) * %i(3))$gameframes$	:i endif	:i $GMan_GetData$${		StructQBKey goal = competitive		StructQBKey name = difficulty_changes	}$		:i $SetArrayElement$$arrayName$ = $difficulty_changes$$index$ = (%GLOBAL%$player$%i(4294967295))$newValue$ = %GLOBAL%$difficulty_change$	:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$difficulty_changes$ = %GLOBAL%$difficulty_changes$:s}	:i $FormatText$$checksumname$ = $icon_script_id$%s("comp_diff_icon_p%p")$p$ = %GLOBAL%$player$	:i $SpawnScript$$id$ = %GLOBAL%$icon_script_id$$competitive_show_difficulty_icon$$params$ = :s{$player$ = %GLOBAL%$player$$change_direction$ = %GLOBAL%$change_direction$:s}	:i $block_until_diff_safe$$player$ = %GLOBAL%$player$	:i if (%GLOBAL%$safe$ = %i(1))		:i $competitive_adjust_difficulty$$player$ = %GLOBAL%$player$$adjustment$ = %GLOBAL%$adjustment$		:i $FormatText$$checksumname$ = $temp_immunity_id$%s("temp_immunity_p%p")$p$ = %GLOBAL%$player$		:i $KillSpawnedScript$$id$ = %GLOBAL%$temp_immunity_id$		:i $spawnscriptnow$$id$ = %GLOBAL%$temp_immunity_id$$competitive_temporary_immunity$$params$ = :s{$player$ = %GLOBAL%$player$:s}	:i endif	:i endfunction]Script competitive_get_difficulty_change_direction 0x79ab1fda [	:i switch %GLOBAL%$adjustment$		:i case $up$			:i %GLOBAL%$change_direction$ = $up$			:i endcase		case $down$			:i endcase		case $down_2$			:i %GLOBAL%$change_direction$ = $down$			:i endcase		case $beginner$			:i $getplayerinfo$%GLOBAL%$player$$difficulty$			:i if NOT (%GLOBAL%$difficulty$ = $beginner$)				:i %GLOBAL%$change_direction$ = $down$			:i else 				:i %GLOBAL%$change_direction$ = $None$			:i endif	:i end_switch	:i return $change_direction$ = %GLOBAL%$change_direction$	:i endfunction]Script block_until_diff_safe 0x6bd9ce1f [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}	}$		:i while 	:i if NOT $ScreenElementExists$${StructQBKey id = hud_root}$		:i return ${StructInt safe = 0}$	:i endif	:i $getplayerinfo$%GLOBAL%$player$$safe_to_change_difficulty$	:i if (%GLOBAL%$safe_to_change_difficulty$ = %i(1))		:i return ${StructInt safe = 1}$	:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i endfunction]Script competitive_get_streak_base 0x0fa4f8fb [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}	}$		:i $GMan_GetData$${		StructQBKey goal = competitive		StructQBKey name = streak_bases	}$		:i %GLOBAL%$pi$ = (%GLOBAL%$player$ - %i(1))	:i %GLOBAL%$streak_base$ = (%GLOBAL%$streak_bases$:a{%GLOBAL%$pi$:a})	:i return $streak_base$ = %GLOBAL%$streak_base$	:i endfunction]Script competitive_set_streak_base 0x83b6c805 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}	}$		:i $GMan_GetData$${		StructQBKey goal = competitive		StructQBKey name = streak_bases	}$		:i $getplayerinfo$%GLOBAL%$player$$current_run$	:i %GLOBAL%$pi$ = (%GLOBAL%$player$ - %i(1))	:i $SetArrayElement$$arrayName$ = $streak_bases$$index$ = %GLOBAL%$pi$$newValue$ = %GLOBAL%$current_run$	:i $GMan_SetData$$goal$ = $competitive$$params$ = :s{$streak_bases$ = %GLOBAL%$streak_bases$:s}	:i endfunction]Script competitive_set_difficulty_indicator 0x382767b3 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}	}$		:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$	:i if (%GLOBAL%$is_onscreen$ = %i(0))		:i return 	:i endif	:i $getplayerinfo$%GLOBAL%$player$$part$	:i $getplayerinfo$%GLOBAL%$player$$double_kick_drum$	:i $getplayerinfo$%GLOBAL%$player$$difficulty$	:i switch %GLOBAL%$difficulty$		:i case $beginner$			:i %GLOBAL%$difficulty_text$ = ^[7c69c087]^			:i %GLOBAL%$icon$ = $icon_difficulty_beginner$			:i endcase		case $easy$			:i %GLOBAL%$difficulty_text$ = ^[33285640]^			:i %GLOBAL%$icon$ = $icon_difficulty_easy$			:i endcase		case $medium$			:i %GLOBAL%$difficulty_text$ = ^[fbf1dc48]^			:i %GLOBAL%$icon$ = $icon_difficulty_medium$			:i endcase		case $hard$			:i %GLOBAL%$difficulty_text$ = ^[8686280d]^			:i %GLOBAL%$icon$ = $icon_difficulty_hard$			:i endcase		case $expert$			:i %GLOBAL%$difficulty_text$ = ^[cc443a5c]^			:i %GLOBAL%$icon$ = $icon_difficulty_expert$			:i endcase		case $expert_plus$			:i %GLOBAL%$difficulty_text$ = ^[a672fac7]^			:i %GLOBAL%$icon$ = $icon_difficulty_expert_plus$	:i end_switch	:i if (%GLOBAL%$part$ = $drum$ AND %GLOBAL%$difficulty$ = $expert$ AND %GLOBAL%$double_kick_drum$ = %i(1))		:i %GLOBAL%$difficulty_text$ = ^[a672fac7]^		:i %GLOBAL%$icon$ = $icon_difficulty_expert_plus$	:i endif	:i if NOT (%GLOBAL%$part$ = $Vocals$)		:i $get_highway_hud_root_id$$player$ = %GLOBAL%$player$		:i if $ScreenElementExists$$id$ = %GLOBAL%$highway_hud_root$			:i if %GLOBAL%$highway_hud_root$.$desc_resolvealias$$name$ = $alias_player_meter$$param$ = $hud_player_meter$				:i $SetScreenElementProps$$id$ = %GLOBAL%$hud_player_meter$$difficulty_texture$ = %GLOBAL%$icon$			:i endif		:i endif	:i else 		:i $FormatText$$checksumname$ = $competitive_meters_id$%s("comp_meters_p%a")$a$ = %GLOBAL%$player$		:i if $ScreenElementExists$$id$ = %GLOBAL%$competitive_meters_id$			:i $SetScreenElementProps$$id$ = %GLOBAL%$competitive_meters_id$$difficulty_texture$ = %GLOBAL%$icon$		:i endif	:i endif	:i endfunction]Script competitive_main_section_watcher_section_marker_hit 0x9d6d7233 [	:i $GetFirstPlayer$${StructQBKey local}$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i if (%GLOBAL%$part$ !== $Vocals$ AND %GLOBAL%$vocal_phrase$ = %i(1))		:i return 	:i endif	:i $ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = (~%GLOBAL%$ruleset$)$bonus_rules$		:i %GLOBAL%$bonus_ruleset$ = ((~%GLOBAL%$ruleset$)->$bonus_rules$)		:i switch (%GLOBAL%$bonus_ruleset$->$interval$)			:i case $num_players$				:i if (%GLOBAL%$bonus_ruleset$->$criteria$ = $alive$)					:i $competitive_rank_section_alive$				:i endif				:i endcase			case $section$				:i if (%GLOBAL%$bonus_ruleset$->$criteria$ = $percent_hit$)					:i $competitive_rank_section_percent_hit$$section$ = (%GLOBAL%$started_section_index$ - %i(1))				:i elseif (%GLOBAL%$bonus_ruleset$->$criteria$ = $alive$)					:i $competitive_rank_section_alive$$section$ = (%GLOBAL%$started_section_index$ - %i(1))				:i endif		:i end_switch	:i endif	:i if $StructureContains$$structure$ = (~%GLOBAL%$ruleset$)$elimination_rules$		:i %GLOBAL%$elimination_ruleset$ = ((~%GLOBAL%$ruleset$)->$elimination_rules$)		:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$interval$			:i if ((%GLOBAL%$elimination_ruleset$->$interval$) = $section$ AND %GLOBAL%$elimination_ruleset$->$criteria$ = $Score$)				:i $GMan_RequestArbitrationData$${					StructQBKey source = playerinfo					StructQBKey var = Score					StructQBKey goal = competitive				}$							:i elseif ((%GLOBAL%$elimination_ruleset$->$interval$) = $num_players$ AND %GLOBAL%$elimination_ruleset$->$criteria$ = $Score$)				:i if (%GLOBAL%$callback_type$ !== $even_divisions$)					:i return 				:i endif				:i $GMan_RequestArbitrationData$${					StructQBKey source = playerinfo					StructQBKey var = Score					StructQBKey goal = competitive				}$							:i endif		:i endif		:i if $StructureContains$$structure$ = %GLOBAL%$elimination_ruleset$$revive_interval$			:i if ((%GLOBAL%$elimination_ruleset$->$revive_interval$) = $section$)				:i if (%GLOBAL%$part$ = $Vocals$)					:i $competitive_revive_all_players$${StructQBKey vocals_only}$				:i elseif (%GLOBAL%$part$ !== $Vocals$ AND %GLOBAL%$vocal_phrase$ = %i(0))					:i $competitive_revive_all_players$${StructQBKey exclude_vocals}$				:i endif			:i endif		:i endif	:i endif	:i $show_timer$ = %i(1)	:i if (%GLOBAL%$part$ = $Vocals$ AND (%GLOBAL%$ruleset$ = $perfectionist$ OR %GLOBAL%$ruleset$ = $team_perfectionist$))		:i $show_timer$ = %i(0)	:i endif	:i if (%GLOBAL%$part$ = $Vocals$ AND (%GLOBAL%$ruleset$ = $do_or_die$ OR %GLOBAL%$ruleset$ = $team_do_or_die$))		:i $show_timer$ = %i(0)	:i endif	:i if (%GLOBAL%$show_timer$ = %i(1))		:i $competitive_show_timer_to_next_section$	:i endif	:i $challenge_section$ = %i(0)	:i if (%GLOBAL%$part$ = $Vocals$ AND %GLOBAL%$challenge_section$ = %i(1))		:i $GetFirstPlayer$${StructQBKey on_screen}$		:i $GetNumPlayersInGame$${StructQBKey on_screen}$		:i if (%GLOBAL%$num_players_shown$ > %i(0))			:i while 			:i if (%GLOBAL%$ruleset$ = $perfectionist$ OR %GLOBAL%$ruleset$ = $team_perfectionist$)				:i $GMan_GetData$$goal$ = $competitive$$player$ = %GLOBAL%$player$$name$ = $current_vocal_percent_hit$				:i $competitive_main_percent_hit_watcher_varUpdated$$player$ = %GLOBAL%$player$$current_value$ = %GLOBAL%$current_vocal_percent_hit$				:i $GetNextPlayer$$on_screen$$player$ = %GLOBAL%$player$			:i endif			:i loop_to %GLOBAL%$num_players_shown$		:i endif		:i $GMan_SetData$${			StructQBKey goal = competitive			StructStruct params			{				StructHeader				{					StructInt num_local_finished_phrase = 0				}			}		}$				:i $broadcastevent$${StructQBKey type = vocals_phrase_end}$	:i endif	:i if NOT $ScriptIsRunning$${StructQBKey competitive_main_section_display_score_gap_spawned}$		:i $spawnscriptnow$$id$ = $competitive$$competitive_main_section_display_score_gap_spawned$$params$ = :s{			:i $part$ = %GLOBAL%$part$			:i $text$ = %GLOBAL%$new_text$			:i $section_index$ = %GLOBAL%$started_section_index$		:i :s}	:i endif	:i endfunction]Script competitive_main_section_display_score_gap_spawned daa8e88e [	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if $StructureContains$$structure$ = (~%GLOBAL%$ruleset$)$bonus_rules$		:i %GLOBAL%$bonus_ruleset$ = (~%GLOBAL%$ruleset$->$bonus_rules$)		:i if ((%GLOBAL%$bonus_ruleset$->$interval$ = $section$) AND (%GLOBAL%$bonus_ruleset$->$reward$ = $performance_value$))			:i if (%GLOBAL%$part$ = $Vocals$)				:i if $StructureContains$$structure$ = %GLOBAL%$bonus_ruleset$$vocals_interval_value$					:i $mod$$a$ = %GLOBAL%$section_index$$b$ = (%GLOBAL%$bonus_ruleset$->$vocals_interval_value$)					:i if NOT (%GLOBAL%$mod$ = %i(0))						:i return 					:i endif				:i endif			:i endif			:i $GetNumPlayersInGame$			:i %GLOBAL%$total_players$ = %GLOBAL%$num_players$			:i $GetNumPlayersInGame$${StructQBKey local}$			:i %GLOBAL%$wait_time$ = (%f(0.25) + (%f(0.2000000) * (%GLOBAL%$total_players$ - %GLOBAL%$num_players$)))			:i $wait$%GLOBAL%$wait_time$$seconds$			:i if NOT $GMan_GoalIsActive$${StructQBKey goal = competitive}$				:i return 			:i endif		:i endif	:i endif	:i $GMan_CompetitiveMeterFunc$${		StructQBKey goal = competitive		StructQBKey tool = comp_meter		StructQBKey func = display_score_gap	}$		:i endfunction]Script competitive_attack_triggered c348b20f [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i %GLOBAL%$attacker$ = (%GLOBAL%$player$)	:i %GLOBAL%$ruleset$ = (~$competitive_rules$)	:i if NOT $StructureContains$$structure$ = ~%GLOBAL%$ruleset$$attack_rules$		:i $scriptassert$${StructString 0x00000000 = "Called competitive attack script without attack rules defined!"}$	:i endif	:i %GLOBAL%$attack_ruleset$ = (~%GLOBAL%$ruleset$->$attack_rules$)	:i if $StructureContains$$structure$ = %GLOBAL%$attack_ruleset$$target$		:i %GLOBAL%$target$ = (%GLOBAL%$attack_ruleset$->$target$)		:i switch %GLOBAL%$target$			:i case $leader_only$				:i $competitive_get_leaders$$exclude$ = %GLOBAL%$attacker$				:i %GLOBAL%$victims$ = (%GLOBAL%$leaders$)				:i endcase			case $leader_or_all$				:i $competitive_get_leaders$$exclude$ = %GLOBAL%$attacker$				:i $GetArraySize$%GLOBAL%$leaders$				:i if (%GLOBAL%$array_size$ = %i(0))					:i %GLOBAL%$victims$ = $all_opponents$				:i else 					:i %GLOBAL%$victims$ = (%GLOBAL%$leaders$)				:i endif				:i endcase			case $all_opponents$				:i %GLOBAL%$victims$ = $all_opponents$		:i end_switch	:i else 		:i %GLOBAL%$victims$ = $all_opponents$	:i endif	:i if (%GLOBAL%$victims$ = $all_opponents$)		:i %GLOBAL%$victims$ = :a{:a}		:i $GetNumPlayersInGame$		:i $GetFirstPlayer$		:i while 		:i if NOT (%GLOBAL%$player$ = %GLOBAL%$attacker$)			:i %GLOBAL%$victims$ = (%GLOBAL%$victims$ + %GLOBAL%$player$)		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i $competitive_attack_victim$$attacker$ = %GLOBAL%$attacker$$victims$ = %GLOBAL%$victims$$attack_ruleset$ = %GLOBAL%$attack_ruleset$	:i endfunction]Script competitive_attack_victim 0x38a6be2e [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				attacker				victims				attack_ruleset			]		}		StructQBKey all	}$		:i $GetArraySize$%GLOBAL%$victims$	:i if (%GLOBAL%$array_size$ > %i(0))		:i %GLOBAL%$i$ = %i(0)		:i while 		:i %GLOBAL%$attack_status$ = $failed$		:i switch (%GLOBAL%$attack_ruleset$->$effect$)			:i case $difficulty$				:i $GMan_GetData$$goal$ = $competitive$$player$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})$name$ = $invincible$				:i if (%GLOBAL%$invincible$ = %i(0))					:i $printf$$channel$ = $competitive$%s("victim (player %v) is not currently invincible")$v$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})					:i $spawn_do_diff_change$$player$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})$adjustment$ = (%GLOBAL%$attack_ruleset$->$effect_value$)					:i %GLOBAL%$attack_status$ = $success$				:i else 					:i $printf$$channel$ = $competitive$%s("victim (player %v) is currently invincible")$v$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})					:i $getplayerinfo$(%GLOBAL%$victims$:a{%GLOBAL%$i$:a})$star_power_used$					:i if (%GLOBAL%$star_power_used$ = %i(0))						:i $printf$$channel$ = $competitive$%s("victim (player %v) is not shielded star_power_used=%s")$v$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})$s$ = %GLOBAL%$star_power_used$						:i $competitive_clear_difficulty_icon$$player$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})						:i $spawn_do_diff_change$$player$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})$adjustment$ = (%GLOBAL%$attack_ruleset$->$effect_value$)						:i %GLOBAL%$attack_status$ = $success$					:i else 						:i $printf$$channel$ = $competitive$%s("victim (player %v) is shielded star_power_used=%s")$v$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})$s$ = %GLOBAL%$star_power_used$						:i if $StructureContains$$structure$ = %GLOBAL%$attack_ruleset$$attack_fx$							:i switch (%GLOBAL%$attack_ruleset$->$attack_fx$)								:i case $attack_bolt$									:i $SpawnScript$$competitive_p2p_bolt_spawned$$params$ = :s{$attacker$ = %GLOBAL%$attacker$$victim$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a}):s}							:i end_switch						:i endif					:i endif				:i endif				:i endcase			default 		:i end_switch		:i if (%GLOBAL%$attack_status$ = $success$)			:i if $StructureContains$$structure$ = %GLOBAL%$attack_ruleset$$attack_fx$				:i switch (%GLOBAL%$attack_ruleset$->$attack_fx$)					:i case $attack_bolt$						:i $SpawnScript$$competitive_p2p_bolt_spawned$$params$ = :s{$attacker$ = %GLOBAL%$attacker$$victim$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a}):s}						:i endcase					case $lightning_strike$						:i $competitive_lightning_strike$$player$ = (%GLOBAL%$victims$:a{%GLOBAL%$i$:a})$notes$ = :a{$green$$red$$yellow$$blue$$orange$:a}						:i endcase					default 						:i $softassert$%s("No FX script for attack_fx=%v")$v$ = (%GLOBAL%$attack_ruleset$->$attack_fx$)				:i end_switch			:i endif		:i endif		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$	:i else 	:i endif	:i endfunction]Script competitive_get_leaders 0x11cb0723 [	${StructInt exclude = -1}$	:i %GLOBAL%$leaders$ = :a{:a}	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i if NOT (%GLOBAL%$exclude$ = %GLOBAL%$player$)			:i $GMan_CompetitiveMeterFunc$$goal$ = $competitive$$tool$ = $comp_meter$$func$ = $is_player_in_the_lead$$params$ = :s{$player$ = %GLOBAL%$player$:s}			:i if (%GLOBAL%$player_is_in_the_lead$ = %i(1))				:i %GLOBAL%$leaders$ = (%GLOBAL%$leaders$ + %GLOBAL%$player$)			:i endif		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i return $leaders$ = %GLOBAL%$leaders$	:i endfunction]Script competitive_lightning_strike 0x6aa49a8c [	:i $getplayerinfo$%GLOBAL%$player$$part$	:i if (%GLOBAL%$part$ = $Vocals$)	:i else 		:i $spawnscriptnow$$competitive_lightning_strike_spawned$$params$ = :s{ isNull :s}	:i endif	:i endfunction]Script competitive_lightning_strike_spawned 0x2d37dda5 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player			]		}		StructQBKey all	}$		:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$	:i if (%GLOBAL%$is_onscreen$ = %i(0))		:i return 	:i endif	:i if $GotParam$${StructQBKey notes}$		:i $GetArraySize$%GLOBAL%$notes$		:i if (%GLOBAL%$array_size$ > %i(0))			:i %GLOBAL%$i$ = %i(0)			:i $gem_array$ = :a{%i(13093),%i(0),%i(0),%i(0),%i(0),%i(0),%i(0),%i(13255),%i(0),%i(40),%i(40),%i(40),%i(40),%i(40),%i(4),%i(0),%i(0),%i(0):a}			:i while 			:i switch (%GLOBAL%$notes$:a{%GLOBAL%$i$:a})				:i case $green$					:i %GLOBAL%$gem_index$ = %i(1)					:i endcase				case $red$					:i %GLOBAL%$gem_index$ = %i(2)					:i endcase				case $yellow$					:i %GLOBAL%$gem_index$ = %i(3)					:i endcase				case $blue$					:i %GLOBAL%$gem_index$ = %i(4)					:i endcase				case $orange$					:i %GLOBAL%$gem_index$ = %i(5)					:i endcase				case $purple$					:i %GLOBAL%$gem_index$ = %i(6)					:i endcase				default 					:i $printf$${						StructQBKey channel = competitive						StructString 0x00000000 = "WARNING: Illegal note in array to strike with lightning!"					}$								:i end_switch			:i $SetArrayElement$$arrayName$ = $gem_array$$index$ = %GLOBAL%$gem_index$$newValue$ = %i(40)			:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))			:i loop_to %GLOBAL%$array_size$			:i %GLOBAL%$array_size$ = %i(6)		:i else 			:i $printf$${				StructQBKey channel = competitive				StructString 0x00000000 = "WARNING: No notes in array to strike with lightning!"			}$					:i endif	:i else 		:i %GLOBAL%$gem_array$ = :a{%i(13093),%i(40),%i(0),%i(0),%i(0),%i(0),%i(0),%i(13255),%i(0),%i(40),%i(40),%i(40),%i(40),%i(40),%i(4),%i(0),%i(0),%i(0):a}		:i %GLOBAL%$array_size$ = %i(6)	:i endif	:i $OnExitRun$$GuitarEvent_StarSequenceBonus_Exit$$params$ = :s{$player$ = %GLOBAL%$player$$gem_array$ = %GLOBAL%$gem_array$:s}	:i $destroy_big_bolt$:s{$player$ = %GLOBAL%$player$$gem_array$ = %GLOBAL%$gem_array$:s}	:i $FormatText$$checksumname$ = $container_id$%s("nowbar_container_p%p")$p$ = %GLOBAL%$player$	:i $getnowbarscale$$player$ = %GLOBAL%$player$	:i $player_index$ = (%GLOBAL%$player$ - %i(1))	:i $gem_count$ = %i(0)	:i while 	:i %GLOBAL%$note_value$ = (%GLOBAL%$gem_array$:a{(%GLOBAL%$gem_count$ + %i(1)):a})	:i if (%GLOBAL%$note_value$ > %i(0))		:i if (%GLOBAL%$gem_count$ = (%GLOBAL%$array_size$%i(4294967295)))			:i if $GotParam$${StructQBKey got_one}$				:i continue			:i endif		:i else 			:i $got_one$ = %i(1)		:i endif		:i $color$ = (~$gem_colors$:a{%GLOBAL%$gem_count$:a})		:i if $playerinfoequals$%GLOBAL%$player$$lefthanded_button_ups$ = %i(1)			:i %GLOBAL%$pos2d$ = ((~$button_up_models$:a{%GLOBAL%$player_index$:a})->%GLOBAL%$color$->$left_pos_2d$)			:i %GLOBAL%$Angle$ = ((~$button_models$:a{%GLOBAL%$player_index$:a})->%GLOBAL%$color$->$Angle$)		:i else 			:i %GLOBAL%$pos2d$ = ((~$button_up_models$:a{%GLOBAL%$player_index$:a})->%GLOBAL%$color$->$pos_2d$)			:i %GLOBAL%$Angle$ = ((~$button_models$:a{%GLOBAL%$player_index$:a})->%GLOBAL%$color$->$left_angle$)		:i endif		:i $Lightning_RGBA_01$ = :a{%i(255)%i(128)%i(128)%i(255):a}		:i $Lightning_RGBA_02$ = :a{%i(255)%i(0)%i(0)%i(128):a}		:i $Bolt_dims$ = %vec2(128.0,32.0)		:i $FormatText$$checksumname$ = $name$%s("big_boltp%p%e")$p$ = %GLOBAL%$player$$e$ = %GLOBAL%$gem_count$$addtostringlookup$ = $true$		:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$name$			:i $CreateScreenElement$:s{				:i $type$ = $ContainerElement$				:i $id$ = %GLOBAL%$name$				:i $parent$ = %GLOBAL%$container_id$				:i $Pos$ = %GLOBAL%$pos2d$				:i $rot_angle$ = %GLOBAL%$Angle$				:i $alpha$ = %i(1)				:i $Scale$ = %vec2(1.0,1.0)				:i $just$ = :a{$RIGHT$$bottom$:a}				:i $z_priority$ = %i(16)				:i $dims$ = %vec2(32.0,32.0)			:i :s}			:i $CreateScreenElement$:s{				:i $type$ = $SpriteElement$				:i $parent$ = %GLOBAL%$Bolt_Cont$				:i $material$ = $Mat_Lightning_Arc_Anim01$				:i $rgba$ = %GLOBAL%$Lightning_RGBA_01$				:i $rot_angle$ = %i(0)				:i $Scale$ = %GLOBAL%$Scale$				:i $just$ = :a{$RIGHT$$bottom$:a}				:i $z_priority$ = %i(16)				:i $alpha$ = %GLOBAL%$Default_Lightning_Alpha$			:i :s}			:i $Bolt1$ = %GLOBAL%$id$			:i $CreateScreenElement$:s{				:i $type$ = $SpriteElement$				:i $parent$ = %GLOBAL%$Bolt_Cont$				:i $material$ = $Mat_Lightning_Arc_Anim02$				:i $rgba$ = %GLOBAL%$Lightning_RGBA_02$				:i $Pos$ = %vec2(0.0,0.0)				:i $rot_angle$ = %i(0)				:i $Scale$ = %GLOBAL%$Scale$				:i $just$ = :a{$RIGHT$$bottom$:a}				:i $z_priority$ = %i(16)				:i $alpha$ = %GLOBAL%$Default_Lightning_Alpha$				:i $dims$ = %GLOBAL%$Bolt_dims$			:i :s}			:i $Bolt2$ = %GLOBAL%$id$		:i endif		:i $FormatText$$checksumname$ = $nameH$%s("big_bolt_hitp%p%e")$p$ = %GLOBAL%$player$$e$ = %GLOBAL%$gem_count$$addtostringlookup$ = $true$		:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$nameH$			:i $CreateScreenElement$:s{				:i $type$ = $SpriteElement$				:i $id$ = %GLOBAL%$nameH$				:i $parent$ = %GLOBAL%$container_id$				:i $material$ = $Mat_SP_Xplosion1$				:i $rgba$ = :a{%i(255)%i(0)%i(0)%i(255):a}				:i $Pos$ = %GLOBAL%$pos2d$				:i $rot_angle$ = %i(0)				:i $Scale$ = %vec2(2.0,2.0)				:i $just$ = :a{$center$$bottom$:a}				:i $z_priority$ = %i(16)			:i :s}		:i endif		:i $FormatText$$checksumname$ = $fx_id$%s("big_bolt_particlep%p%e")$p$ = %GLOBAL%$player$$e$ = %GLOBAL%$gem_count$$addtostringlookup$ = $true$		:i $destroy2dparticlesystem$$id$ = %GLOBAL%$fx_id$		:i %GLOBAL%$particle_pos$ = %GLOBAL%$pos2d$		:i %GLOBAL%$particle_pos$ = ((((%GLOBAL%$particle_pos$:a{%i(0):a}) * %GLOBAL%$nowbar_x_scale$) * %vec2(1.0,0.0)) + ((((%GLOBAL%$particle_pos$:a{%i(1):a}) * %GLOBAL%$nowbar_y_scale$)) * %vec2(0.0,1.0)))		:i $FormatText$$checksumname$ = $hwy$%s("highway_containerp%p")$p$ = %GLOBAL%$player$		:i if NOT $ObjectExists$$id$ = %GLOBAL%$fx_id$			:i if ((~$g_debug_highway_visible$) = %i(1))				:i $create2dparticlesystem$:s{					:i $id$ = %GLOBAL%$fx_id$					:i $Pos$ = %GLOBAL%$particle_pos$					:i $z_priority$ = %f(8.0)					:i $material$ = $sys_Particle_Star01_sys_Particle_Star01$					:i $parent$ = %GLOBAL%$container_id$					:i $start_color$ = :a{%i(255)%i(32)%i(0)%i(255):a}					:i $end_color$ = :a{%i(128)%i(16)%i(0)%i(0):a}					:i $start_scale$ = %vec2(0.25,0.25)					:i $end_scale$ = %vec2(0.25,0.25)					:i $start_angle_spread$ = %f(360.0)					:i $min_rotation$ = %f(-120.0)					:i $max_rotation$ = %f(240.0)					:i $emit_start_radius$ = %f(0.0)					:i $emit_radius$ = %f(2.0)					:i $emit_rate$ = %f(0.0399999)					:i $emit_dir$ = %f(0.0)					:i $emit_spread$ = %f(44.0)					:i $velocity$ = %f(24.0)					:i $friction$ = %vec2(0.0,66.0)					:i $time$ = %f(2.0)				:i :s}			:i endif		:i endif		:i $FormatText$$checksumname$ = $fx2_id$%s("big_bolt_particle2p%p%e")$p$ = %GLOBAL%$player$$e$ = %GLOBAL%$gem_count$$addtostringlookup$ = $true$		:i %GLOBAL%$particle_pos$ = %GLOBAL%$pos2d$		:i %GLOBAL%$particle_pos$ = ((((%GLOBAL%$particle_pos$:a{%i(0):a}) * %GLOBAL%$nowbar_x_scale$) * %vec2(1.0,0.0)) + ((((%GLOBAL%$particle_pos$:a{%i(1):a}) * %GLOBAL%$nowbar_y_scale$)) * %vec2(0.0,1.0)))		:i if NOT $ObjectExists$$id$ = %GLOBAL%$fx2_id$			:i if ((~$g_debug_highway_visible$) = %i(1))				:i $create2dparticlesystem$:s{					:i $id$ = %GLOBAL%$fx2_id$					:i $Pos$ = %GLOBAL%$particle_pos$					:i $z_priority$ = %f(8.0)					:i $material$ = $Mat_Star03$					:i $parent$ = %GLOBAL%$container_id$					:i $start_color$ = :a{%i(255)%i(255)%i(255)%i(128):a}					:i $end_color$ = :a{%i(128)%i(128)%i(128)%i(0):a}					:i $start_scale$ = %vec2(0.125,0.125)					:i $end_scale$ = %vec2(0.15000000596046448,0.15000000596046448)					:i $start_angle_spread$ = %f(360.0)					:i $min_rotation$ = %f(-120.0)					:i $max_rotation$ = %f(508.0)					:i $emit_start_radius$ = %f(0.0)					:i $emit_radius$ = %f(2.0)					:i $emit_rate$ = %f(0.0700000)					:i $emit_dir$ = %f(0.0)					:i $emit_spread$ = %f(28.0)					:i $velocity$ = %f(12.0)					:i $friction$ = %vec2(0.0,33.0)					:i $time$ = %f(1.0)				:i :s}			:i endif		:i endif		:i $FormatText$$checksumname$ = $fx3_id$%s("big_bolt_particle3p%p%e")$p$ = %GLOBAL%$player$$e$ = %GLOBAL%$gem_count$$addtostringlookup$ = $true$		:i %GLOBAL%$particle_pos$ = %GLOBAL%$pos2d$		:i %GLOBAL%$particle_pos$ = (%GLOBAL%$particle_pos$ - %vec2(0.0,15.0))		:i %GLOBAL%$particle_pos$ = ((((%GLOBAL%$particle_pos$:a{%i(0):a}) * %GLOBAL%$nowbar_x_scale$) * %vec2(1.0,0.0)) + ((((%GLOBAL%$particle_pos$:a{%i(1):a}) * %GLOBAL%$nowbar_y_scale$)) * %vec2(0.0,1.0)))		:i if NOT $ObjectExists$$id$ = %GLOBAL%$fx3_id$			:i if ((~$g_debug_highway_visible$) = %i(1))				:i $create2dparticlesystem$:s{					:i $id$ = %GLOBAL%$fx3_id$					:i $Pos$ = %GLOBAL%$particle_pos$					:i $z_priority$ = %f(8.0)					:i $material$ = $sys_Particle_lnzflare02_sys_Particle_lnzflare02$					:i $parent$ = %GLOBAL%$container_id$					:i $start_color$ = :a{%i(255)%i(255)%i(255)%i(255):a}					:i $end_color$ = :a{%i(255)%i(0)%i(0)%i(0):a}					:i $start_scale$ = %vec2(0.5,0.5)					:i $end_scale$ = %vec2(0.05000000074505806,0.05000000074505806)					:i $start_angle_spread$ = %f(360.0)					:i $min_rotation$ = %f(-500.0)					:i $max_rotation$ = %f(500.0)					:i $emit_start_radius$ = %f(0.0)					:i $emit_radius$ = %f(2.0)					:i $emit_rate$ = %f(0.0500000)					:i $emit_dir$ = %f(0.0)					:i $emit_spread$ = %f(180.0)					:i $velocity$ = %f(12.0)					:i $friction$ = %vec2(0.0,12.0)					:i $time$ = %f(0.5)				:i :s}			:i endif		:i endif	:i endif	:i $gem_count$ = (%GLOBAL%$gem_count$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i $wait$${		StructQBString star_power_bolt_time		StructQBKey seconds	}$		:i $destroy_big_bolt$:s{$player$ = %GLOBAL%$player$$gem_array$ = %GLOBAL%$gem_array$$kill_when_empty$ = $kill_when_empty$:s}	:i $OnExitRun$${StructQBKey NullScript}$	:i endfunction]