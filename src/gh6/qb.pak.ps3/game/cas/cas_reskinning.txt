Unknown [1c00000000000000000019700000000000000000]SectionStruct ReskinTree{	StructHeader	{		StructQBKey type = degenerateblend		StructQBKey id = RootNode	}}SectionStruct ReskinAnimBranch{	StructHeader	{		StructQBKey type = param_timer_type		StructQBKey id = TimerNode		StructQBKey Speed = param_speed		StructQBKey start = param_start		StructQBKey anim = param_anim		StructArray 0x00000000		{			ArrayStruct			[				StructHeader				{					StructQBKey type = tweakbones					StructQBKey id = tweakbonesnode					StructArray 0x00000000					{						ArrayStruct						[							StructHeader							{								StructQBKey type = source								StructQBKey id = SourceNode								StructQBKey anim = param_anim							}												]					}				}						]		}	}}Script cas_get_bone_slider_value afc2328c [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				part				group_name			]		}		StructQBKey all	}$		:i if NOT $GetCASAppearancePart$$part$ = %GLOBAL%$part$		:i $scriptassert$%s("Part %s not found")$s$ = %GLOBAL%$part$	:i else 		:i if $GotParam$${StructQBKey bones}$			:i if $StructureContains$$structure$ = %GLOBAL%$bones$%GLOBAL%$group_name$				:i $slider$ = (%GLOBAL%$bones$->%GLOBAL%$group_name$)			:i else 				:i $printf$%s("Bone %s missing in part, will devise a default setting")$s$ = %GLOBAL%$group_name$			:i endif		:i else 		:i endif	:i endif	:i if NOT $GetActualCASOptionStruct$$part$ = %GLOBAL%$part$$desc_id$ = %GLOBAL%$desc_id$		:i $scriptassert$%s("%s %t not found")$s$ = %GLOBAL%$part$$t$ = %GLOBAL%$desc_id$	:i endif	:i $GetArraySize$%GLOBAL%$deform_bones$$globalarray$	:i $i$ = %i(0)	:i while 	:i $deform_info$ = (~%GLOBAL%$deform_bones$:a{%GLOBAL%$i$:a})	:i if (%GLOBAL%$group_name$ = (%GLOBAL%$deform_info$->$group_name$))		:i if NOT $GotParam$${StructQBKey slider}$			:i $cas_get_default_slider_value$$deform_info$ = %GLOBAL%$deform_info$		:i endif		:i $cas_get_min_bone_slider$$deform_info$ = %GLOBAL%$deform_info$		:i $cas_get_max_bone_slider$$deform_info$ = %GLOBAL%$deform_info$		:i if (%GLOBAL%$slider$ < %GLOBAL%$min_slider$)			:i $slider$ = (%GLOBAL%$min_slider$)		:i endif		:i if (%GLOBAL%$slider$ > %GLOBAL%$max_slider$)			:i $slider$ = (%GLOBAL%$max_slider$)		:i endif		:i continue	:i endif	:i $i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i if NOT $GotParam$${StructQBKey slider}$		:i $slider$ = %f(0.0)	:i endif	:i return :s{$slider$ = %GLOBAL%$slider$$min_slider$ = %GLOBAL%$min_slider$$max_slider$ = %GLOBAL%$max_slider$:s}	:i endfunction]Script cas_set_bone_slider 0x23b0ca55 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				part				group_name				slider			]		}		StructQBKey all	}$		:i $GetCASAppearancePart$$part$ = %GLOBAL%$part$	:i if NOT $GotParam$${StructQBKey bones}$		:i $bones$ = :s{:s}	:i endif	:i $UpdateStructElement$$struct$ = %GLOBAL%$bones$$element$ = %GLOBAL%$group_name$$value$ = %GLOBAL%$slider$	:i $SetCASAppearanceBones$$part$ = %GLOBAL%$part$$bones$ = %GLOBAL%$newstruct$	:i endfunction]Script cas_part_reskin_create_object 0x27a8fae5 [	:i if $CompositeObjectExists$$name$ = %GLOBAL%$id$		:i if (~$cas_reskin_preview$ = $None$)			:i $scriptassert$%s("Name clash on %s when reskinning")$s$ = %GLOBAL%$id$$DoNotResolve$		:i else 			:i return 		:i endif	:i endif	:i if NOT $GotParam$${StructQBKey deform_mesh}$		:i $scriptassert$${StructString 0x00000000 = "deform_mesh missing"}$	:i endif	:i if NOT $GotParam$${StructQBKey deform_skel}$		:i $scriptassert$${StructString 0x00000000 = "deform_mesh missing"}$	:i endif	:i $extendcrc$%GLOBAL%$deform_skel$%s("_default")$out$ = $deform_anim$	:i $MemPushContext$${StructQBKey topdownheap}$	:i if (~$cas_reskin_debug$ = %i(1))		:i if $GetCurrentCASObject$			:i %GLOBAL%$cas_object$.$obj_getposition$		:i endif		:i $Pos$ = (%GLOBAL%$Pos$ + %vec3(-0.45000001788139343,0.0,0.0))	:i endif	:i $CreateCompositeObject$:s{		:i $params$ = :s{			:i $name$ = %GLOBAL%$id$			:i $SkeletonName$ = %GLOBAL%$deform_skel$			:i $modelchecksum$ = %GLOBAL%$deform_mesh$			:i $model_asset_context$ = $cas_temporaries$			:i $geomname$ = %GLOBAL%$part$			:i $Pos$ = %GLOBAL%$Pos$			:i $allow_reset$		:i :s}		:i $Components$ = :a{			:i :s{$Component$ = $skeleton$:s}			:i :s{$Component$ = $Model$:s}			:i :s{$Component$ = $AnimTree$:s}		:i :a}	:i :s}	:i %GLOBAL%$id$.$anim_inittree$:s{		:i $tree$ = ~$ReskinTree$		:i $nodeiddeclaration$ = :a{			:i $RootNode$			:i $TimerNode$			:i $SourceNode$			:i $FlipNode$			:i $tweakbonesnode$		:i :a}	:i :s}	:i %GLOBAL%$id$.$anim_command$:s{		:i $target$ = $RootNode$		:i $command$ = $degenerateblend_addbranch$		:i $params$ = :s{			:i $blendduration$ = %f(0.0)			:i $tree$ = ~$ReskinAnimBranch$			:i $params$ = :s{				:i $param_timer_type$ = $Cycle$				:i $param_anim$ = %GLOBAL%$deform_anim$				:i $param_speed$ = %f(1.0)			:i :s}		:i :s}	:i :s}	:i if (~$cas_reskin_debug$ = %i(0))		:i %GLOBAL%$id$.$hide$	:i endif	:i $MemPopContext$	:i endfunction]Script cas_apply_bone_group_settings 0x67a156d4 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				bone_settings				deform_bones			]		}		StructQBKey all	}$		:i $GetArraySize$%GLOBAL%$deform_bones$$globalarray$	:i $num_groups$ = %GLOBAL%$array_size$	:i $iGroup$ = %i(0)	:i while 	:i $deform_info$ = (~%GLOBAL%$deform_bones$:a{%GLOBAL%$iGroup$:a})	:i $group_name$ = (%GLOBAL%$deform_info$->$group_name$)	:i if $StructureContains$$structure$ = %GLOBAL%$bone_settings$%GLOBAL%$group_name$		:i $slider$ = (%GLOBAL%$bone_settings$->%GLOBAL%$group_name$)		:i $GetArraySize$(%GLOBAL%$deform_info$->$bones$)		:i $iBone$ = %i(0)		:i while 		:i $cas_apply_bone_transforms$:s{			:i $bone_info$ = (%GLOBAL%$deform_info$->$bones$:a{%GLOBAL%$iBone$:a})			:i $slider$ = %GLOBAL%$slider$			:i $deform_info$ = %GLOBAL%$deform_info$			:i $main_skeleton$ = %GLOBAL%$main_skeleton$			:i $lowres_rig$ = %GLOBAL%$lowres_rig$			:i $deform_skel$ = %GLOBAL%$deform_skel$		:i :s}		:i $iBone$ = (%GLOBAL%$iBone$ + %i(1))		:i loop_to %GLOBAL%$array_size$		:i if $StructureContains$$structure$ = %GLOBAL%$deform_info$$texture_info$			:i $cas_apply_texture_uv$:s{				:i $texture_info$ = (%GLOBAL%$deform_info$->$texture_info$)				:i $slider$ = %GLOBAL%$slider$				:i $deform_info$ = %GLOBAL%$deform_info$				:i $part$ = %GLOBAL%$part$			:i :s}		:i endif	:i endif	:i $iGroup$ = (%GLOBAL%$iGroup$ + %i(1))	:i loop_to %GLOBAL%$num_groups$	:i endfunction]Script cas_apply_bone_transforms_lowres 0x7ad9b178 [	:i if $skeleton_hasbone$$bone$ = %GLOBAL%$bone_name$		:i %GLOBAL%$transform_script$$transform_data$ = %GLOBAL%$transform_data$$amount$ = %GLOBAL%$amount$$bone_name$ = %GLOBAL%$bone_name$	:i endif	:i if $GotParam$${StructQBKey no_recurse}$		:i return 	:i endif	:i $GetSkeletonChildBones$$bone$ = %GLOBAL%$bone_name$$skeleton$ = %GLOBAL%$deform_skel$	:i $GetArraySize$%GLOBAL%$child_bones$	:i $i$ = %i(0)	:i if (%GLOBAL%$array_size$ > %i(0))		:i while 		:i $cas_apply_bone_transforms_lowres$:s{			:i $transform_script$ = %GLOBAL%$transform_script$			:i $transform_data$ = %GLOBAL%$transform_data$			:i $amount$ = %GLOBAL%$amount$			:i $bone_name$ = (%GLOBAL%$child_bones$:a{%GLOBAL%$i$:a})			:i $deform_skel$ = %GLOBAL%$deform_skel$		:i :s}		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$	:i endif	:i endfunction]Script cas_apply_bone_transforms 0x9eed73c4 [	:i if $GetBoneMappedValue$${StructQBKey name = scaling}$		:i if $GotParam$${StructQBKey lowres_rig}$			:i $cas_apply_bone_transforms_lowres$:s{				:i $transform_script$ = $cas_bone_scaling$				:i $transform_data$ = (%GLOBAL%$bone_info$->$scaling$)				:i $amount$ = %GLOBAL%$mapped_value$				:i $bone_name$ = (%GLOBAL%$bone_info$->$bone$)				:i $deform_skel$ = %GLOBAL%$deform_skel$				:i $no_recurse$			:i :s}		:i else 			:i $cas_bone_scaling$$transform_data$ = (%GLOBAL%$bone_info$->$scaling$)$amount$ = %GLOBAL%$mapped_value$$bone_name$ = (%GLOBAL%$bone_info$->$bone$)		:i endif	:i endif	:i if $GetBoneMappedValue$${StructQBKey name = translation}$		:i if $GotParam$${StructQBKey lowres_rig}$			:i $cas_apply_bone_transforms_lowres$:s{				:i $transform_script$ = $cas_bone_translation$				:i $transform_data$ = (%GLOBAL%$bone_info$->$translation$)				:i $amount$ = %GLOBAL%$mapped_value$				:i $bone_name$ = (%GLOBAL%$bone_info$->$bone$)				:i $deform_skel$ = %GLOBAL%$deform_skel$			:i :s}		:i else 			:i $cas_bone_translation$$transform_data$ = (%GLOBAL%$bone_info$->$translation$)$amount$ = %GLOBAL%$mapped_value$$bone_name$ = (%GLOBAL%$bone_info$->$bone$)		:i endif	:i endif	:i if $GetBoneMappedValue$${StructQBKey name = rotation}$		:i if $GotParam$${StructQBKey lowres_rig}$			:i $cas_apply_bone_transforms_lowres$:s{				:i $transform_script$ = $cas_bone_rotation$				:i $transform_data$ = (%GLOBAL%$bone_info$->$rotation$)				:i $amount$ = %GLOBAL%$mapped_value$				:i $bone_name$ = (%GLOBAL%$bone_info$->$bone$)				:i $deform_skel$ = %GLOBAL%$deform_skel$			:i :s}		:i else 			:i $cas_bone_rotation$$transform_data$ = (%GLOBAL%$bone_info$->$rotation$)$amount$ = %GLOBAL%$mapped_value$$bone_name$ = (%GLOBAL%$bone_info$->$bone$)		:i endif	:i endif	:i endfunction]Script cas_bone_translation 0x953a8c67 [	:i if $StructureContains$$structure$ = %GLOBAL%$transform_data$$bone_space$		:i $amount$ = (%GLOBAL%$amount$->%vec3(1.0,0.0,0.0))	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$transform_data$$no_propagate$		:i $obj_addbonetranslation$$bone$ = %GLOBAL%$bone_name$%GLOBAL%$amount$	:i else 		:i $anim_command$:s{			:i $target$ = $tweakbonesnode$			:i $command$ = $tweakbones_translatebone$			:i $params$ = :s{				:i $bone$ = %GLOBAL%$bone_name$				:i %GLOBAL%$amount$			:i :s}		:i :s}	:i endif	:i endfunction]Script cas_bone_scaling 0x9155914f [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				transform_data				amount				bone_name			]		}	}$		:i if NOT $StructureContains$$structure$ = %GLOBAL%$transform_data$$no_propagate$		:i $obj_addbonescale$$bone$ = %GLOBAL%$bone_name$%GLOBAL%$amount$$propagate$	:i elseif $StructureContains$$structure$ = %GLOBAL%$transform_data$$stop_propagate$		:i $obj_addbonescale$$bone$ = %GLOBAL%$bone_name$%GLOBAL%$amount$$stop_propagate$	:i else 		:i $obj_addbonescale$$bone$ = %GLOBAL%$bone_name$%GLOBAL%$amount$	:i endif	:i endfunction]Script cas_bone_rotation 0x4528f53a [	:i if $StructureContains$$structure$ = %GLOBAL%$transform_data$$no_propagate$		:i $obj_addbonerotation$$bone$ = %GLOBAL%$bone_name$%GLOBAL%$amount$	:i else 		:i $anim_command$:s{			:i $target$ = $tweakbonesnode$			:i $command$ = $tweakbones_rotatebone$			:i $params$ = :s{				:i $bone$ = %GLOBAL%$bone_name$				:i %GLOBAL%$amount$			:i :s}		:i :s}	:i endif	:i endfunction]Script cas_apply_texture_uv 0x6f0fae1c [	:i if $StructureContains$$structure$ = %GLOBAL%$texture_info$$name$ = $scaling$		:i %GLOBAL%$scaling_info$ = :s{			:i $from$ = (%vec3(1.0,0.0,0.0) * (%GLOBAL%$texture_info$->$scaling$->$from$))			:i $to$ = (%vec3(1.0,0.0,0.0) * (%GLOBAL%$texture_info$->$scaling$->$to$))		:i :s}		:i %GLOBAL%$bone_info$ = :s{			:i $name$ = (%GLOBAL%$texture_info$->$name$)			:i $scaling$ = %GLOBAL%$scaling_info$		:i :s}		:i if $GetBoneMappedValue$${StructQBKey name = scaling}$			:i $cas_bone_texture_scaling$$transform_data$ = (%GLOBAL%$texture_info$->$scaling$)$amount$ = %GLOBAL%$mapped_value$$part$ = %GLOBAL%$part$$name$ = (%GLOBAL%$texture_info$->$name$)		:i endif	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$texture_info$$name$ = $translation$		:i %GLOBAL%$translation_info$ = :s{			:i $from$ = ((%vec3(1.0,0.0,0.0) * (%GLOBAL%$texture_info$->$translation$->$from$:a{%i(0):a})) + (%vec3(0.0,1.0,0.0) * (%GLOBAL%$texture_info$->$translation$->$from$:a{%i(1):a})))			:i $to$ = ((%vec3(1.0,0.0,0.0) * (%GLOBAL%$texture_info$->$translation$->$to$:a{%i(0):a})) + (%vec3(0.0,1.0,0.0) * (%GLOBAL%$texture_info$->$translation$->$to$:a{%i(1):a})))		:i :s}		:i %GLOBAL%$bone_info$ = :s{			:i $name$ = (%GLOBAL%$texture_info$->$name$)			:i $translation$ = %GLOBAL%$translation_info$		:i :s}		:i if $GetBoneMappedValue$${StructQBKey name = translation}$			:i $cas_bone_texture_translation$$transform_data$ = (%GLOBAL%$texture_info$->$translation$)$amount$ = %GLOBAL%$mapped_value$$part$ = %GLOBAL%$part$$name$ = (%GLOBAL%$texture_info$->$name$)		:i endif	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$texture_info$$name$ = $rotation$		:i %GLOBAL%$rotation_info$ = :s{			:i $from$ = (%vec3(1.0,0.0,0.0) * (%GLOBAL%$texture_info$->$rotation$->$from$))			:i $to$ = (%vec3(1.0,0.0,0.0) * (%GLOBAL%$texture_info$->$rotation$->$to$))		:i :s}		:i %GLOBAL%$bone_info$ = :s{			:i $name$ = (%GLOBAL%$texture_info$->$name$)			:i $rotation$ = %GLOBAL%$rotation_info$		:i :s}		:i if $GetBoneMappedValue$${StructQBKey name = rotation}$			:i $cas_bone_texture_rotation$$transform_data$ = (%GLOBAL%$texture_info$->$rotation$)$amount$ = %GLOBAL%$mapped_value$$part$ = %GLOBAL%$part$$name$ = (%GLOBAL%$texture_info$->$name$)		:i endif	:i endif	:i endfunction]Script cas_bone_texture_scaling e1d65a8d [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				transform_data				amount				part				name			]		}	}$		:i $modelbuilder$.$addbonetexturescaling$$part$ = %GLOBAL%$part$$name$ = %GLOBAL%$name$$uv_scale$ = (%GLOBAL%$amount$:a{%i(0):a})	:i endfunction]Script cas_bone_texture_translation 0x9696c71a [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				transform_data				amount				part				name			]		}	}$		:i $modelbuilder$.$addbonetexturetranslation$$part$ = %GLOBAL%$part$$name$ = %GLOBAL%$name$$uv_u$ = (%GLOBAL%$amount$:a{%i(0):a})$uv_v$ = (%GLOBAL%$amount$:a{%i(1):a})	:i endfunction]Script cas_bone_texture_rotation 0x94e39f5e [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				transform_data				amount				part				name			]		}	}$		:i $modelbuilder$.$addbonetexturerotation$$part$ = %GLOBAL%$part$$name$ = %GLOBAL%$name$$uv_rot$ = (%GLOBAL%$amount$:a{%i(0):a})	:i endfunction]Script cas_reset_bones 0x9d1b4e93 [	:i $obj_resetbones$	:i if $anim_animnodeexists$${StructQBKey id = tweakbonesnode}$		:i $anim_command$${			StructQBKey target = tweakbonesnode			StructQBKey command = tweakbones_reset		}$			:i endif	:i endfunction]Script cas_get_default_slider_value a8720b4a [	:i $slider_sum$ = %f(0.0)	:i $sliders_checked$ = %f(0.0)	:i if $StructureContains$$structure$ = %GLOBAL%$deform_info$$bones$		:i $GetArraySize$(%GLOBAL%$deform_info$->$bones$)		:i $i$ = %i(0)		:i if (%GLOBAL%$array_size$ > %i(0))			:i while 			:i $cas_get_default_slider_value_struct$:s{				:i $deform_info$ = %GLOBAL%$deform_info$				:i $deform_map$ = ((%GLOBAL%$deform_info$->$bones$):a{%GLOBAL%$i$:a})				:i $group_name$ = (%GLOBAL%$deform_info$->$group_name$)			:i :s}			:i $slider_sum$ = (%GLOBAL%$slider_sum$ + %GLOBAL%$slider$)			:i $sliders_checked$ = (%GLOBAL%$sliders_checked$ + %f(1.0))			:i $i$ = (%GLOBAL%$i$ + %i(1))			:i loop_to %GLOBAL%$array_size$		:i endif	:i endif	:i if (%GLOBAL%$sliders_checked$ > %f(0.0))		:i $slider_sum$ = (%GLOBAL%$slider_sum$ / %GLOBAL%$sliders_checked$)	:i endif	:i $printf$%s("avg of %s %v")$s$ = (%GLOBAL%$deform_info$->$group_name$)$v$ = %GLOBAL%$slider_sum$	:i return $slider$ = %GLOBAL%$slider_sum$	:i endfunction]Script cas_get_default_slider_value_struct 0x57d33b21 [	:i $slider_sum$ = %f(0.0)	:i $sliders_checked$ = %f(0.0)	:i if $StructureContains$$structure$ = %GLOBAL%$deform_map$$rotation$		:i $cas_get_default_slider_value_entry$$deform_info$ = %GLOBAL%$deform_info$$map$ = (%GLOBAL%$deform_map$->$rotation$)		:i $slider_sum$ = (%GLOBAL%$slider_sum$ + %GLOBAL%$slider$)		:i $sliders_checked$ = (%GLOBAL%$sliders_checked$ + %f(1.0))	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$deform_map$$translation$		:i $cas_get_default_slider_value_entry$$deform_info$ = %GLOBAL%$deform_info$$map$ = (%GLOBAL%$deform_map$->$translation$)		:i $slider_sum$ = (%GLOBAL%$slider_sum$ + %GLOBAL%$slider$)		:i $sliders_checked$ = (%GLOBAL%$sliders_checked$ + %f(1.0))	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$deform_map$$scaling$		:i $cas_get_default_slider_value_entry$$deform_info$ = %GLOBAL%$deform_info$$map$ = (%GLOBAL%$deform_map$->$scaling$)		:i $slider_sum$ = (%GLOBAL%$slider_sum$ + %GLOBAL%$slider$)		:i $sliders_checked$ = (%GLOBAL%$sliders_checked$ + %f(1.0))	:i endif	:i if (%GLOBAL%$sliders_checked$ > %f(0.0))		:i $slider_sum$ = (%GLOBAL%$slider_sum$ / %GLOBAL%$sliders_checked$)	:i endif	:i return $slider$ = %GLOBAL%$slider_sum$	:i endfunction]Script cas_get_default_slider_value_entry c7fcf7dd [	:i $cas_get_slider_linearmap_values$$map$ = %GLOBAL%$map$$deform_info$ = %GLOBAL%$deform_info$	:i if $IsVector$%GLOBAL%$from_bone$		:i $divisor$ = %f(0.0)		:i if ((%GLOBAL%$from_bone$->%vec3(1.0,0.0,0.0)) !== (%GLOBAL%$to_bone$->%vec3(1.0,0.0,0.0)))			:i $LinearMap$$result$ = $x$$from$ = %GLOBAL%$min_slider$$to$ = %GLOBAL%$max_slider$$basedon$ = %f(0.0)$lowerbound$ = (%GLOBAL%$from_bone$->%vec3(1.0,0.0,0.0))$upperbound$ = (%GLOBAL%$to_bone$->%vec3(1.0,0.0,0.0))			:i %GLOBAL%$divisor$ = (%GLOBAL%$divisor$ + %f(1.0))		:i else 			:i $x$ = %f(0.0)		:i endif		:i if ((%GLOBAL%$from_bone$->%vec3(0.0,1.0,0.0)) !== (%GLOBAL%$to_bone$->%vec3(0.0,1.0,0.0)))			:i $LinearMap$$result$ = $y$$from$ = %GLOBAL%$min_slider$$to$ = %GLOBAL%$max_slider$$basedon$ = %f(0.0)$lowerbound$ = (%GLOBAL%$from_bone$->%vec3(0.0,1.0,0.0))$upperbound$ = (%GLOBAL%$to_bone$->%vec3(0.0,1.0,0.0))			:i %GLOBAL%$divisor$ = (%GLOBAL%$divisor$ + %f(1.0))		:i else 			:i $y$ = %f(0.0)		:i endif		:i if ((%GLOBAL%$from_bone$->%vec3(0.0,0.0,1.0)) !== (%GLOBAL%$to_bone$->%vec3(0.0,0.0,1.0)))			:i $LinearMap$$result$ = $z$$from$ = %GLOBAL%$min_slider$$to$ = %GLOBAL%$max_slider$$basedon$ = %f(0.0)$lowerbound$ = (%GLOBAL%$from_bone$->%vec3(0.0,0.0,1.0))$upperbound$ = (%GLOBAL%$to_bone$->%vec3(0.0,0.0,1.0))			:i %GLOBAL%$divisor$ = (%GLOBAL%$divisor$ + %f(1.0))		:i else 			:i $z$ = %f(0.0)		:i endif		:i if (%GLOBAL%$divisor$ > %f(0.0))			:i return $slider$ = ((%GLOBAL%$x$ + %GLOBAL%$y$ + %GLOBAL%$z$) / %GLOBAL%$divisor$)		:i else 			:i return $slider$ = %GLOBAL%$min_slider$		:i endif	:i else 		:i $LinearMap$$result$ = $slider$$from$ = %GLOBAL%$min_slider$$to$ = %GLOBAL%$max_slider$$basedon$ = %f(0.0)$lowerbound$ = %GLOBAL%$from_bone$$upperbound$ = %GLOBAL%$to_bone$		:i return $slider$ = %GLOBAL%$slider$	:i endif	:i endfunction]Script cas_get_slider_linearmap_values 0x436d1219 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				map				deform_info			]		}		StructQBKey all	}$		:i if NOT $StructureContains$$structure$ = %GLOBAL%$map$$to$		:i $printf$%s("Missing 'to' entry for %s-%t!")$s$ = (%GLOBAL%$deform_info$->$frontend_desc$)$t$ = (%GLOBAL%$deform_info$->$group_name$)$DoNotResolve$		:i return ${			StructFloat from_bone = 0.00			StructFloat to_bone = 0.00			StructFloat min_slider = 0.00			StructFloat max_slider = 1.00		}$			:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$map$$from$		:i $from_bone$ = (%GLOBAL%$map$->$from$)	:i else 		:i if $IsVector$(%GLOBAL%$map$->$to$)			:i $from_bone$ = %vec3(0.0,0.0,0.0)		:i else 			:i $from_bone$ = %i(0)		:i endif	:i endif	:i $to_bone$ = (%GLOBAL%$map$->$to$)	:i if $StructureContains$$structure$ = %GLOBAL%$map$$min$		:i $min_slider$ = (%GLOBAL%$map$->$min$)	:i else 		:i $cas_get_min_bone_slider$$deform_info$ = %GLOBAL%$deform_info$	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$map$$max$		:i $max_slider$ = (%GLOBAL%$map$->$max$)	:i else 		:i $cas_get_max_bone_slider$$deform_info$ = %GLOBAL%$deform_info$	:i endif	:i return $from_bone$ = %GLOBAL%$from_bone$$to_bone$ = %GLOBAL%$to_bone$$min_slider$ = %GLOBAL%$min_slider$$max_slider$ = %GLOBAL%$max_slider$	:i endfunction]Script cas_get_min_bone_slider 0x9ced5d7e [	:i if $StructureContains$$structure$ = %GLOBAL%$deform_info$$min$		:i return $min_slider$ = (%GLOBAL%$deform_info$->$min$)	:i else 		:i return ${StructFloat min_slider = 0.00}$	:i endif	:i endfunction]Script cas_get_max_bone_slider b2819421 [	:i if $StructureContains$$structure$ = %GLOBAL%$deform_info$$max$		:i return $max_slider$ = (%GLOBAL%$deform_info$->$max$)	:i else 		:i return ${StructFloat max_slider = 1.00}$	:i endif	:i endfunction]Script cas_part_reskin 0x81a85396 [	:i if NOT $GotParam$${StructQBKey bone_settings}$		:i $bone_settings$ = :s{:s}	:i endif	:i $cas_part_reskin_create_object$$id$ = %GLOBAL%$reskin_object$$part$ = %GLOBAL%$part$$Pos$ = %vec3(0.0,0.0,0.0)$deform_mesh$ = %GLOBAL%$deform_mesh$$deform_skel$ = %GLOBAL%$deform_skel$	:i %GLOBAL%$reskin_object$.$cas_reset_bones$	:i if $GotParam$${StructQBKey bone_settings}$		:i %GLOBAL%$reskin_object$.$cas_apply_bone_group_settings$$part$ = %GLOBAL%$part$$bone_settings$ = %GLOBAL%$bone_settings$$deform_bones$ = %GLOBAL%$deform_bones$	:i endif	:i if $GotParam$${StructQBKey additional_bone_transforms}$		:i $printf$%s("Doing additional transforms for %s")$s$ = %GLOBAL%$part$$DoNotResolve$		:i %GLOBAL%$reskin_object$.$cas_apply_additional_bone_transforms$$additional_bone_transforms$ = %GLOBAL%$additional_bone_transforms$	:i endif	:i %GLOBAL%$reskin_object$.$anim_updatepose$	:i return ${StructQBKey true}$	:i endfunction]Script cas_main_skel_scale 0x830afe40 [	:i if NOT $GotParam$${StructQBKey bone_settings}$		:i $bone_settings$ = :s{:s}	:i endif	:i if $GotParam$${StructQBKey bone_settings}$		:i $cas_apply_bone_group_settings$$bone_settings$ = %GLOBAL%$bone_settings$$deform_bones$ = %GLOBAL%$deform_bones$$main_skeleton$ = %i(1)	:i endif	:i if $GotParam$${StructQBKey additional_bone_transforms}$		:i $printf$%s("Doing additional transforms for %s")$s$ = %GLOBAL%$part$$DoNotResolve$		:i $cas_apply_additional_bone_transforms$$additional_bone_transforms$ = %GLOBAL%$additional_bone_transforms$$main_skeleton$ = %i(1)	:i endif	:i endfunction]Script cas_apply_additional_bone_transforms d6103a70 [	:i $GetArraySize$%GLOBAL%$additional_bone_transforms$	:i $i$ = %i(0)	:i if (%GLOBAL%$array_size$ > %i(0))		:i while 		:i $transform$ = (%GLOBAL%$additional_bone_transforms$:a{%GLOBAL%$i$:a})		:i $cas_apply_bone_transforms$:s{			:i $bone_info$ = %GLOBAL%$transform$			:i $slider$ = $value_only$			:i $main_skeleton$ = %GLOBAL%$main_skeleton$			:i $lowres_rig$ = %GLOBAL%$lowres_rig$			:i $deform_skel$ = %GLOBAL%$deform_skel$		:i :s}		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$	:i endif	:i endfunction]Script cas_lowres_rig_reskin 0x681ffc5d [	:i if $GotParam$${StructQBKey bone_settings}$		:i $cas_apply_bone_group_settings$$bone_settings$ = %GLOBAL%$bone_settings$$deform_bones$ = %GLOBAL%$deform_bones$$deform_skel$ = %GLOBAL%$deform_skel$$lowres_rig$ = %i(1)	:i endif	:i if $GotParam$${StructQBKey additional_bone_transforms}$		:i $cas_apply_additional_bone_transforms$$additional_bone_transforms$ = %GLOBAL%$additional_bone_transforms$$deform_skel$ = %GLOBAL%$deform_skel$$lowres_rig$ = %i(1)	:i endif	:i $anim_updatepose$	:i return ${StructQBKey true}$	:i endfunction]