Unknown [1c0000000000000000000a240000000000000000]Script CASCacheModel be503edc [	${Unknown [0001240090e07c79696969690000001800012b00554c7d6f696969690000002800012600299ee352696969690000003800012b007a3d505b696969690000004800012600c001242a6969696900000000]}$	:i $printf$${StructString 0x00000000 = "CASCacheModel"}$	:i if $CompositeObjectExists$${StructQBKey name = Global_Cas_Cache}$		:i $ArchiveWaitLoading$:s{			:i $cas_building_cache$			:i $async$ = %GLOBAL%$async$		:i :s}		:i $Global_Cas_Cache$.$modelbuilder_cache$:s{			:i $cache_name$ = $cas_building_cache$			:i $appearance$ = %GLOBAL%$appearance$			:i $buildscript$ = %GLOBAL%$buildscript$			:i $buildscriptparams$ = :s{				:i %GLOBAL%$buildscriptparams$				:i $caching$			:i :s}			:i $async$ = %GLOBAL%$async$			:i $global_storage$ = %GLOBAL%$global_storage$		:i :s}		:i $DumpArchiveCache$${StructQBKey name = cas_building_cache}$	:i else 		:i $printf$${StructString 0x00000000 = "CASCacheModel Failed - No cache object"}$	:i endif	:i endfunction]Script CASCacheFlushVRAM 0x8410fdf8 [	:i $FlushArchiveCache$${		StructQBKey name = cas_building_cache		StructQBKey vram	}$		:i endfunction]Script create_cas_caches 0x2e1ecc61 [	:i $MemPushContext$${StructQBKey heap_cas_cache}$	:i if NOT $CompositeObjectExists$${StructQBKey name = Global_Cas_Cache}$		:i $CreateCompositeObject$${			StructArray Components			{				ArrayStruct				[					StructHeader					{						StructQBKey Component = modelbuilder					}				]			}			StructStruct params			{				StructHeader				{					StructQBKey name = Global_Cas_Cache				}			}		}$				:i $memory_get_heap_sizes$		:i $SetupArchiveCache$:s{			:i $name$ = $cas_building_cache$			:i $max_files$ = %i(128)			:i $size$ = %GLOBAL%$cas_building_cache_size$			:i $vram_size$ = %GLOBAL%$cas_building_cache_size_vram$		:i :s}		:i if (%GLOBAL%$cas_ui_precache_size$ > %i(0))			:i $SetupArchiveCache$:s{				:i $name$ = $cas_ui_precache$				:i $max_files$ = %i(1280)				:i $size$ = %GLOBAL%$cas_ui_precache_size$				:i $vram_size$ = %GLOBAL%$cas_ui_precache_size_vram$				:i $no_purge$			:i :s}		:i endif	:i else 		:i $printf$${StructString 0x00000000 = "Global CAS Cache already exists"}$	:i endif	:i $MemPopContext$${StructQBKey heap_cas_cache}$	:i endfunction]Script free_cas_caches e264bbb3 [	:i if $CompositeObjectExists$${StructQBKey name = Global_Cas_Cache}$		:i $ArchiveCancelLoading$${StructQBKey cas_ui_precache}$		:i $ArchiveWaitLoading$${			StructQBKey cas_ui_precache			StructInt async = 0		}$				:i $Global_Cas_Cache$.$Die$		:i $flushdeadobjects$		:i $FreeArchiveCache$${StructQBKey name = cas_building_cache}$		:i $FreeArchiveCache$${StructQBKey name = cas_ui_precache}$		:i $change$${StructQBKey cas_current_precached_array_list = None}$	:i endif	:i endfunction]Script flush_cas_caches 0x809e1694 [	:i $free_cas_caches$	:i $create_cas_caches$	:i endfunction]Script ui_cas_precache f334a811 [	:i if (~$cas_pieces_is_a_reference_archive$ = %i(1))		:i return 	:i endif	:i if $GotParam$${StructQBKey Finishes}$		:i switch (%GLOBAL%$Finishes$)			:i case $CAS_Guitar_Body$				:i $pak$ = $cas_guitarpak_finishes$				:i endcase			case $CAS_Guitar_Pickguards$				:i endcase			case $CAS_Guitar_Bridges$				:i endcase			case $CAS_Guitar_Knobs$				:i endcase			case $CAS_Guitar_Pickups$				:i endcase			case $CAS_Guitar_Misc$				:i return 				:i endcase			case $CAS_Guitar_Neck$				:i endcase			case $CAS_Guitar_Head$				:i $pak$ = $cas_guitarpak_nh$				:i endcase			default 				:i $part$ = %GLOBAL%$Finishes$		:i end_switch	:i endif	:i $RemoveParameter$${StructQBKey Finishes}$	:i if $GotParam$${StructQBKey Instrument}$		:i switch (%GLOBAL%$Instrument$)			:i case $guitar$				:i $pak$ = $cas_guitarpak$				:i endcase			case $Bass$				:i $pak$ = $cas_basspak$				:i endcase			case $drum$				:i $pak$ = $cas_drumspak$				:i endcase			case $Vocals$				:i $pak$ = $cas_vocalspak$				:i endcase			default 				:i $scriptassert$%s("ui_cas_precache: bad instrument %s")$s$ = %GLOBAL%$Instrument$		:i end_switch	:i elseif $GotParam$${StructQBKey part}$		:i $cas_get_is_female$$player$ = (~$cas_current_player$)		:i $ResolveBodySpecificPartInAppearance$$part$ = %GLOBAL%$part$		:i switch (%GLOBAL%$part$)			:i case $cas_body$				:i if (%GLOBAL%$is_female$ = %i(1))					:i $pak$ = $cas_female_bodypak$				:i else 					:i $pak$ = $cas_male_bodypak$				:i endif				:i endcase			case $CAS_Female_Facial_Hair$				:i endcase			case $CAS_Female_Eyebrows$				:i $pak$ = $cas_female_bodypak$				:i endcase			case $CAS_Male_Facial_Hair$				:i endcase			case $CAS_Male_Eyebrows$				:i $pak$ = $cas_male_bodypak$				:i endcase			case $CAS_Female_Hair$				:i endcase			case $CAS_Female_Hat_Hair$				:i $pak$ = $cas_female_hairpak$				:i endcase			case $CAS_Male_Hair$				:i endcase			case $CAS_Male_Hat_Hair$				:i $pak$ = $cas_male_hairpak$				:i endcase			case $CAS_Female_Hat$				:i endcase			case $CAS_Female_Acc_Left$				:i endcase			case $CAS_Female_Acc_Right$				:i endcase			case $CAS_Female_Acc_Face$				:i endcase			case $CAS_Female_Acc_Ears$				:i $pak$ = $cas_female_accpak$				:i endcase			case $CAS_Male_Hat$				:i endcase			case $CAS_Male_Acc_Left$				:i endcase			case $CAS_Male_Acc_Right$				:i endcase			case $CAS_Male_Acc_Face$				:i endcase			case $CAS_Male_Acc_Ears$				:i $pak$ = $cas_male_accpak$				:i endcase			case $CAS_Female_Torso$				:i $pak$ = $cas_female_torsopak$				:i endcase			case $CAS_Male_Torso$				:i $pak$ = $cas_male_torsopak$				:i endcase			case $CAS_Female_Legs$				:i $pak$ = $cas_female_legspak$				:i endcase			case $CAS_Male_Legs$				:i $pak$ = $cas_male_legspak$				:i endcase			case $CAS_Female_Shoes$				:i $pak$ = $cas_female_shoespak$				:i endcase			case $CAS_Male_Shoes$				:i $pak$ = $cas_male_shoespak$				:i endcase			case $CAS_Guitar_Body$				:i endcase			case $CAS_Guitar_Pickguards$				:i endcase			case $CAS_Guitar_Bridges$				:i endcase			case $CAS_Guitar_Knobs$				:i endcase			case $CAS_Guitar_Pickups$				:i endcase			case $CAS_Guitar_Misc$				:i $pak$ = $cas_guitarpak$				:i endcase			case $CAS_Guitar_Neck$				:i endcase			case $CAS_Guitar_Head$				:i $pak$ = $cas_guitarpak_nh$				:i endcase			case $CAS_Bass_Body$				:i endcase			case $CAS_Bass_Pickguards$				:i endcase			case $CAS_Bass_Pickups$				:i endcase			case $CAS_Bass_Bridges$				:i endcase			case $CAS_Bass_Knobs$				:i endcase			case $CAS_Bass_Misc$				:i endcase			case $CAS_Bass_Neck$				:i endcase			case $CAS_Bass_Head$				:i $pak$ = $cas_basspak$				:i endcase			case $CAS_Drums$				:i endcase			case $CAS_Drums_Sticks$				:i $pak$ = $cas_drumspak$				:i endcase			case $CAS_Mic$				:i endcase			case $CAS_Mic_Stand$				:i $pak$ = $cas_vocalspak$				:i endcase			default 				:i $printf$%s("ui_cas_precache: No pak to load part=%p")$p$ = %GLOBAL%$part$$DoNotResolve$		:i end_switch	:i endif	:i if $GotParam$${StructQBKey pak}$		:i $extendcrc$%GLOBAL%$pak$%s("_ui_assets")$out$ = $array_name$		:i if $globalexists$$name$ = %GLOBAL%$array_name$$type$ = $array$			:i $cas_precache_file_list$$global_array_name$ = %GLOBAL%$array_name$		:i else 			:i $printf$%s("ui_cas_precache: %s not found")$s$ = %GLOBAL%$array_name$		:i endif	:i endif	:i endfunction]Script cas_precache_file_list 0x32dc8ed1 [	:i if ((~$cas_current_precached_array_list$) = %GLOBAL%$global_array_name$)		:i $printf$%s("Already cached or caching %s")$s$ = %GLOBAL%$global_array_name$		:i return 	:i endif	:i $change$$cas_current_precached_array_list$ = %GLOBAL%$global_array_name$	:i $ArchiveCancelLoading$${StructQBKey cas_ui_precache}$	:i $ArchiveWaitLoading$${		StructQBKey cas_ui_precache		StructInt async = 0	}$		:i $FlushArchiveCache$${StructQBKey name = cas_ui_precache}$	:i $FlushArchiveCache$${		StructQBKey name = cas_ui_precache		StructQBKey vram	}$		:i $ArchiveCacheFiles$:s{		:i $name$ = $cas_ui_precache$		:i $files$ = %GLOBAL%$global_array_name$		:i $globalarray$		:i $priority$ = %i(4294967295)	:i :s}	:i $KillSpawnedScript$${StructQBKey name = cas_precache_file_list_timing}$	:i $spawnscriptnow$$cas_precache_file_list_timing$$params$ = :s{$list_name$ = %GLOBAL%$global_array_name$:s}	:i endfunction]Script cas_precache_file_list_timing 0x69aad7b1 [	:i $GetTrueStartTime$	:i $ArchiveWaitLoading$${		StructQBKey cas_ui_precache		StructInt async = 1	}$		:i $GetTrueElapsedTime$$starttime$ = %GLOBAL%$starttime$	:i $DumpArchiveCache$${StructQBKey name = cas_ui_precache}$	:i $finalprintf$^[bf4b6e86]^$a$ = %GLOBAL%$elapsedtime$$t$ = %GLOBAL%$list_name$$DontAssertForChecksums$	:i endfunction]