Unknown [1c0000000000000000000e580000000000000000]SectionInteger DEBUG_ROCK_RECORD 0SectionQBKeyStringQs g_rock_record_genre_default ae01dcbeSectionArray rock_record_main_stats{	ArrayStruct	[		StructHeader		{			StructQBStringQs text = 0x131f6f33			StructArray columns			{				ArrayQBKey				[					num_times_played_guitar					num_times_played_bass					num_times_played_drums					num_times_played_vocals				]			}			StructArray more_data			{				ArrayArray				[					ArrayQBKey					[						num_times_played_beginner_guitar						num_times_played_easy_guitar						num_times_played_medium_guitar						num_times_played_hard_guitar						num_times_played_expert_guitar					]					ArrayQBKey					[						num_times_played_beginner_bass						num_times_played_easy_bass						num_times_played_medium_bass						num_times_played_hard_bass						num_times_played_expert_bass					]					ArrayQBKey					[						num_times_played_beginner_drum						num_times_played_easy_drum						num_times_played_medium_drum						num_times_played_hard_drum						num_times_played_expert_drum						num_times_played_expert_plus_drum					]					ArrayQBKey					[						num_times_played_beginner_vocal						num_times_played_easy_vocal						num_times_played_medium_vocal						num_times_played_hard_vocal						num_times_played_expert_vocal					]								]			}			StructQBKey format_script = rr_get_preferred_instrument		}		StructHeader		{			StructQBStringQs text = f832129c			StructArray columns			{				ArrayQBKey				[					lifetime_total_song_multiplier					lifetime_num_additions_to_total_song_multiplier				]			}			StructQBKey format_script = rr_average_two_columns		}		StructHeader		{			StructQBStringQs text = 0x17edc7fc			StructArray columns			{				ArrayQBKey				[					total_song_multiplier					num_additions_to_total_song_multiplier				]			}			StructQBKey format_script = rr_average_two_columns		}		StructHeader		{			StructQBStringQs text = 0x8839a0ec			StructArray columns			{				ArrayQBKey				[					lifetime_num_songs_completed				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = ca9c1910			StructArray columns			{				ArrayQBKey				[					num_songs_completed				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = 0x44a38388			StructArray columns			{				ArrayQBKey				[					lifetime_notes_hit				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = c649c34d			StructArray columns			{				ArrayQBKey				[					notes_hit				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = 0x46921616			StructArray columns			{				ArrayQBKey				[					lifetime_total_time_playing_in_seconds				]			}			StructQBKey format_script = rr_get_time_string			StructStruct format_data			{				StructHeader				{					StructInt new_format = 1				}			}		}		StructHeader		{			StructQBStringQs text = 0x4c26f12a			StructArray columns			{				ArrayQBKey				[					total_time_playing_in_seconds				]			}			StructQBKey format_script = rr_get_time_string			StructStruct format_data			{				StructHeader				{					StructInt new_format = 1				}			}		}		StructHeader		{			StructQBStringQs text = 0x57c4b17c			StructArray columns			{				ArrayQBKey				[					lifetime_longest_notestreak				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = d6199c04			StructArray columns			{				ArrayQBKey				[					longest_notestreak				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = 0x85a7d2a8			StructArray columns			{				ArrayQBKey				[					total_score				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = 0x3cba2309			StructArray columns			{				ArrayQBKey				[					favorite_genre				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = 0x9f60cdef			StructArray columns			{				ArrayQBKey				[					num_star_power_activations				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = fd3f32d7			StructArray columns			{				ArrayQBKey				[					num_songs_in_library				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = b828b8ca			StructArray columns			{				ArrayQBKey				[					lifetime_num_coop_games_played				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = e6ecedb5			StructArray columns			{				ArrayQBKey				[					num_coop_games_played				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = a5a3146a			StructArray columns			{				ArrayQBKey				[					lifetime_num_versus_games_played				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = fb674115			StructArray columns			{				ArrayQBKey				[					num_versus_games_played				]			}			StructQBKey format_script = rr_use_single_column		}		StructHeader		{			StructQBStringQs text = b278db37			StructArray columns			{				ArrayQBKey				[					lifetime_num_versus_games_played				]			}			StructQBKey format_script = rr_use_blank_column		}		]}Script rr_use_single_column 0x3089dcd5 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				Data			]		}		StructQBKey all	}$		:i return $stat_value$ = (%GLOBAL%$Data$:a{%i(0):a})	:i endfunction]Script rr_use_blank_column 0x45e9ab41 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				Data			]		}		StructQBKey all	}$		:i return ${StructQBStringQs stat_value = 0x00000000}$	:i endfunction]Script rr_slash_divider 0x6681b65d [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				Data			]		}		StructQBKey all	}$		:i $GetArraySize$%GLOBAL%$Data$	:i if (%GLOBAL%$array_size$ >= %i(2))		:i $FormatText$$textname$ = $data_text$^[c68134fb]^$f$ = (%GLOBAL%$Data$:a{%i(0):a})$s$ = (%GLOBAL%$Data$:a{%i(1):a})		:i return $data_text$ = %GLOBAL%$data_text$	:i endif	:i return $stat_value$ = (%GLOBAL%$Data$:a{%i(0):a})	:i endfunction]Script get_max_value_index c9b20a89 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				array			]		}		StructQBKey all	}$		:i $GetArraySize$%GLOBAL%$array$	:i if (%GLOBAL%$array_size$ > %i(0))		:i %GLOBAL%$max_index$ = %i(0)		:i %GLOBAL%$index$ = %i(1)		:i while 		:i if (%GLOBAL%$array$:a{%GLOBAL%$index$:a} >= %GLOBAL%$array$:a{%GLOBAL%$max_index$:a} AND %GLOBAL%$array$:a{%GLOBAL%$index$:a} > %i(0))			:i %GLOBAL%$max_index$ = %GLOBAL%$index$		:i endif		:i %GLOBAL%$index$ = (%GLOBAL%$index$ + %i(1))		:i loop_to (%GLOBAL%$array_size$ - %i(1))		:i return $index$ = %GLOBAL%$max_index$	:i endif	:i endfunction]Script rr_get_preferred_instrument 0x00a83b3d [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				Data			]		}		StructQBKey all	}$		:i $get_max_value_index$$array$ = %GLOBAL%$Data$	:i if $GotParam$${StructQBKey index}$		:i switch (%GLOBAL%$index$)			:i case %i(0)				:i %GLOBAL%$Instrument$ = ^[9504b94a]^				:i endcase			case %i(1)				:i %GLOBAL%$Instrument$ = ^[7d4f9214]^				:i endcase			case %i(2)				:i %GLOBAL%$Instrument$ = ^[cf488ba5]^				:i endcase			case %i(3)				:i %GLOBAL%$Instrument$ = ^[1b9f6f84]^				:i endcase			default 				:i %GLOBAL%$Instrument$ = ^[4c1271a9]^		:i end_switch		:i $rr_get_preferred_difficulty$$Data$ = (%GLOBAL%$more_data$:a{%GLOBAL%$index$:a})		:i %GLOBAL%$difficulty$ = %GLOBAL%$data_text$	:i else 		:i %GLOBAL%$Instrument$ = ^[4c1271a9]^		:i %GLOBAL%$difficulty$ = ^[4c1271a9]^	:i endif	:i $FormatText$$textname$ = $data_text$^[1a22a2c1]^$i$ = %GLOBAL%$Instrument$$d$ = %GLOBAL%$difficulty$	:i return $data_text$ = %GLOBAL%$data_text$	:i endfunction]Script rr_average_two_columns 0x16b564fe [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				Data			]		}		StructQBKey all	}$		:i $GetArraySize$%GLOBAL%$Data$	:i if (%GLOBAL%$array_size$ >= %i(2))		:i %GLOBAL%$value$ = %f(0.0)		:i if (%GLOBAL%$Data$:a{%i(1):a} > %f(0.0))			:i %GLOBAL%$value$ = (%GLOBAL%$Data$:a{%i(0):a} / (%GLOBAL%$Data$:a{%i(1):a} * %f(1.0)))		:i endif		:i $FormatText$$textname$ = $data_text$^[35b12509]^$a$ = %GLOBAL%$value$		:i return $data_text$ = %GLOBAL%$data_text$	:i endif	:i return $stat_value$ = (%GLOBAL%$Data$:a{%i(0):a})	:i endfunction]Script rr_get_preferred_difficulty a7de670a [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				Data			]		}		StructQBKey all	}$		:i $get_max_value_index$$array$ = %GLOBAL%$Data$	:i if $GotParam$${StructQBKey index}$		:i switch (%GLOBAL%$index$)			:i case %i(0)				:i $data_text$ = ^[74d6a0a0]^				:i endcase			case %i(1)				:i $data_text$ = ^[8d657387]^				:i endcase			case %i(2)				:i $data_text$ = ^[6ef11a01]^				:i endcase			case %i(3)				:i $data_text$ = ^[51b06d2f]^				:i endcase			case %i(4)				:i $data_text$ = ^[334908ac]^				:i endcase			case %i(5)				:i $data_text$ = ^[41873008]^				:i endcase			default 				:i $data_text$ = ^[4c1271a9]^		:i end_switch	:i else 		:i $data_text$ = ^[4c1271a9]^	:i endif	:i return $data_text$ = %GLOBAL%$data_text$	:i endfunction]Script rr_get_time_string 0x76e009e5 [	${StructInt new_format = 0}$	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				Data			]		}		StructQBKey all	}$		:i %GLOBAL%$total_time$ = (%GLOBAL%$Data$:a{%i(0):a})	:i $mod$$a$ = %GLOBAL%$total_time$$b$ = %i(60)	:i %GLOBAL%$seconds$ = %GLOBAL%$mod$	:i if (%GLOBAL%$seconds$ < %i(10))		:i $FormatText$$textname$ = $data_text$^[a14d5c1b]^$a$ = %GLOBAL%$seconds$	:i else 		:i $FormatText$$textname$ = $data_text$^[35b12509]^$a$ = %GLOBAL%$seconds$	:i endif	:i %GLOBAL%$total_time$ = (%GLOBAL%$total_time$ - %GLOBAL%$seconds$)	:i if (%GLOBAL%$total_time$ > %i(0))		:i $mod$$a$ = %GLOBAL%$total_time$$b$ = (%i(60) * %i(60))		:i %GLOBAL%$minutes$ = %GLOBAL%$mod$		:i $FormatText$$textname$ = $data_text$^[d01e380d]^$a$ = (%GLOBAL%$minutes$ / %i(60))$t$ = %GLOBAL%$data_text$		:i %GLOBAL%$total_time$ = (%GLOBAL%$total_time$ - %GLOBAL%$minutes$)		:i if (%GLOBAL%$total_time$ > %i(0))			:i $mod$$a$ = %GLOBAL%$total_time$$b$ = (%i(60) * %i(60) * %i(60))			:i %GLOBAL%$hours$ = %GLOBAL%$mod$			:i if (%GLOBAL%$minutes$ < (%i(10) * %i(60)))				:i $FormatText$$textname$ = $data_text$^[96f8ba0f]^$t$ = %GLOBAL%$data_text$				:i $FormatText$$textname$ = $data_text$^[d01e380d]^$a$ = (%GLOBAL%$hours$ / (%i(60) * %i(60)))$t$ = %GLOBAL%$data_text$			:i else 				:i $FormatText$$textname$ = $data_text$^[d01e380d]^$a$ = (%GLOBAL%$hours$ / (%i(60) * %i(60)))$t$ = %GLOBAL%$data_text$			:i endif			:i %GLOBAL%$total_time$ = (%GLOBAL%$total_time$ - %GLOBAL%$hours$)			:i if (%GLOBAL%$total_time$ > %i(0))				:i $mod$$a$ = %GLOBAL%$total_time$$b$ = (%i(60) * %i(60) * %i(60) * %i(24))				:i %GLOBAL%$days$ = %GLOBAL%$mod$				:i if (%GLOBAL%$hours$ < (%i(10) * %i(60) * %i(60)))					:i $FormatText$$textname$ = $data_text$^[96f8ba0f]^$t$ = %GLOBAL%$data_text$					:i $FormatText$$textname$ = $data_text$^[d01e380d]^$t$ = %GLOBAL%$data_text$$a$ = (%GLOBAL%$days$ / (%i(60) * %i(60) * %i(60)))				:i else 					:i $FormatText$$textname$ = $data_text$^[d01e380d]^$t$ = %GLOBAL%$data_text$$a$ = (%GLOBAL%$days$ / (%i(60) * %i(60) * %i(60)))				:i endif			:i elseif (%GLOBAL%$new_format$ = %i(1))				:i if (%GLOBAL%$hours$ < (%i(10) * %i(60) * %i(60)))					:i $FormatText$$textname$ = $data_text$^[96f8ba0f]^$t$ = %GLOBAL%$data_text$				:i endif			:i endif		:i elseif (%GLOBAL%$new_format$ = %i(1))			:i if (%GLOBAL%$minutes$ < (%i(10) * %i(60)))				:i $FormatText$$textname$ = $data_text$^[96f8ba0f]^$t$ = %GLOBAL%$data_text$				:i $FormatText$$textname$ = $data_text$^[881581f9]^$t$ = %GLOBAL%$data_text$			:i else 				:i $FormatText$$textname$ = $data_text$^[881581f9]^$t$ = %GLOBAL%$data_text$			:i endif		:i endif	:i elseif (%GLOBAL%$new_format$ = %i(1))		:i $FormatText$$textname$ = $data_text$^[23f47de8]^$t$ = %GLOBAL%$data_text$	:i endif	:i return $data_text$ = %GLOBAL%$data_text$	:i endfunction]