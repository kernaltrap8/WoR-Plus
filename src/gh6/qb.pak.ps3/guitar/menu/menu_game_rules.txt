Unknown [1c000000000000000000106c0000000000000000]SectionInteger g_game_rules_count 0Script band_lobby_create_popup_menu_game_rules 0x2f96dafe [	${Unknown [00012600c2719fb0696969690000001800012400b90a78d7696969690000002800012600803ba0e26969696900000000]}$	:i $printf$${		StructQBKey channel = band_lobby		StructQBStringQs 0x1572f2ea	}$		:i if NOT $GotParam$${StructQBKey Pos}$		:i %GLOBAL%$Pos$ = %vec2(-320.0,-65.0)	:i endif	:i switch %GLOBAL%$filter$		:i case $no_team$			:i %GLOBAL%$team_param$ = %i(0)			:i endcase		case $team_only$			:i %GLOBAL%$team_param$ = %i(1)			:i endcase		case $all$			:i endcase		default 			:i %GLOBAL%$team_param$ = %i(4294967295)	:i end_switch	:i $CreateScreenElement$:s{		:i $parent$ = %GLOBAL%$parent$		:i $type$ = $descinterface$		:i $id$ = $band_lobby_pu_gr$		:i $desc$ = %s("band_lobby_pu_gr")		:i $z_priority$ = %f(25.0)		:i $pos_anchor$ = :a{$left$,$top$:a}		:i $just$ = :a{$left$,$top$:a}	:i :s}	:i if NOT %GLOBAL%$id$.$desc_resolvealias$$name$ = $alias_generic_scrollbar_wgt$		:i $scriptassert$${StructString 0x00000000 = "could not find scrollbar for game rules screen!"}$	:i else 		:i $AssignAlias$$id$ = %GLOBAL%$resolved_id$$alias$ = $game_rules_scrollbar$		:i $generic_scrollbar_wgt_initialize$${StructQBKey id = game_rules_scrollbar}$	:i endif	:i if $InInternetMode$		:i %GLOBAL%$id$.$se_setprops$:s{			:i $right_container_pos$ = %vec2(257.0,30.0)		:i :s}	:i endif	:i if NOT $GotParam$${StructQBKey alias}$		:i %GLOBAL%$alias$ = $current_band_lobby_popup$	:i endif	:i $AssignAlias$$id$ = %GLOBAL%$id$$alias$ = %GLOBAL%$alias$	:i $change$${StructInt g_game_rules_count = 0}$	:i %GLOBAL%$index_to_focus$ = %i(4294967295)	:i if $ScreenElementExists$$id$ = %GLOBAL%$alias$		:i if %GLOBAL%$alias$.$desc_resolvealias$$name$ = $alias_game_rules_vmenu$			:i %GLOBAL%$resolved_id$.$se_setprops$:s{				:i $event_handlers$ = :a{					:i :s{$menu_selection_changed$$UI_SFX$$params$ = :s{$menustate$ = $generic$$uitype$ = $ScrollUp$:s}:s}					:i :s{$pad_back$$UI_SFX$$params$ = :s{$menustate$ = $generic$$uitype$ = $back$:s}:s}				:i :a}			:i :s}			:i $GetArraySize$(~$competitive_rules_array$)			:i %GLOBAL%$i$ = %i(0)			:i %GLOBAL%$competitive_game_rules_index$ = %i(0)			:i while 			:i %GLOBAL%$game_rule_struct$ = (~$competitive_rules_array$:a{%GLOBAL%$i$:a})			:i if $StructureContains$$structure$ = (~%GLOBAL%$game_rule_struct$)$condition$				:i if (~%GLOBAL%$game_rule_struct$->$condition$)					:i $is_game_rule_playable$$game_rule$ = %GLOBAL%$game_rule_struct$					:i %GLOBAL%$current_rules$ = (~$competitive_rules$)					:i if ((~$game_mode$) = $fest_mode$)						:i %GLOBAL%$current_rules$ = $solo_fest_mode$					:i elseif ((~$game_mode$) = $fest_mode_team$)						:i %GLOBAL%$current_rules$ = $team_fest_mode$					:i endif					:i if (%GLOBAL%$game_rule_struct$ = %GLOBAL%$current_rules$)						:i if (%GLOBAL%$game_rule_playable$ = %i(1))							:i %GLOBAL%$index_to_focus$ = %GLOBAL%$competitive_game_rules_index$						:i endif					:i elseif (%GLOBAL%$index_to_focus$ = %i(4294967295))						:i if (%GLOBAL%$game_rule_playable$ = %i(1))							:i %GLOBAL%$index_to_focus$ = %GLOBAL%$competitive_game_rules_index$						:i endif					:i endif					:i if ((%GLOBAL%$team_param$ = %i(4294967295)) OR ((%GLOBAL%$team_param$ = %i(0)) AND ((~%GLOBAL%$game_rule_struct$->$team$) = %i(0))) OR ((%GLOBAL%$team_param$ = %i(1)) AND ((~%GLOBAL%$game_rule_struct$->$team$) = %i(1))))						:i $CreateScreenElement$:s{							:i $parent$ = %GLOBAL%$resolved_id$							:i $type$ = $descinterface$							:i $desc$ = %s("band_lobby_pu_gr_item")							:i $pos_anchor$ = :a{$left$,$top$:a}							:i $just$ = :a{$left$,$top$:a}							:i $item_text_text$ = (~%GLOBAL%$game_rule_struct$->$text$)							:i $highlight_btn_alpha$ = %i(0)							:i $dims$ = %vec2(470.0,65.0)							:i $alpha$ = %i(1)						:i :s}						:i $array$ = :a{							:i :s{$focus$$game_rules_set_highlight$$params$ = :s{$screen_id$ = %GLOBAL%$alias$$item_id$ = %GLOBAL%$id$$highlight$ = %i(1)$playable$ = %GLOBAL%$game_rule_playable$:s}:s}							:i :s{$focus$$game_rules_set_scroll_bar_pos$$params$ = :s{$rule_index$ = %GLOBAL%$competitive_game_rules_index$:s}:s}							:i :s{$unfocus$$game_rules_set_highlight$$params$ = :s{$screen_id$ = %GLOBAL%$alias$$item_id$ = %GLOBAL%$id$$highlight$ = %i(0)$playable$ = %GLOBAL%$game_rule_playable$:s}:s}							:i :s{$pad_option$$game_rules_show_full_rules$$params$ = :s{$alias$ = %GLOBAL%$alias$:s}:s}							:i :s{$pad_choose$$UI_SFX$$params$ = :s{$menustate$ = $generic$$uitype$ = $select$:s}:s}						:i :a}						:i if (%GLOBAL%$game_rule_playable$ = %i(1))							:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = :s{$pad_choose$$game_rules_choose_rule_set$$params$ = :s{$rules$ = %GLOBAL%$game_rule_struct$$game_rule_index$ = %GLOBAL%$i$$is_popup$ = %GLOBAL%$is_popup$:s}:s}							:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = :s{$focus$$update_game_rule_box$$params$ = :s{$screen_id$ = %GLOBAL%$alias$$game_rule_index$ = %GLOBAL%$i$$playable$ = %i(1):s}:s}							:i %GLOBAL%$text_rgba$ = $GH6_gold$						:i else 							:i if NOT $GotParam$${StructQBKey not_playable_reason}$								:i $scriptassert$${StructString 0x00000000 = "Game rules not playable, but no reason why was returned. Defaulting to basic not playable reason"}$								:i $not_playable_reason$ = $default_reason$							:i endif							:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = :s{$pad_choose$$UI_SFX$$params$ = :s{$menustate$ = $generic$$uitype$ = $negativeselect$:s}:s}							:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = :s{$focus$$update_game_rule_box$$params$ = :s{$screen_id$ = %GLOBAL%$alias$$game_rule_index$ = %GLOBAL%$i$$playable$ = %i(0)$not_playable_reason$ = %GLOBAL%$not_playable_reason$:s}:s}							:i %GLOBAL%$text_rgba$ = :a{%i(100)%i(88)%i(71)%i(255):a}						:i endif						:i if NOT $GotParam$${StructQBKey exclusive_devices}$							:i %GLOBAL%$exclusive_devices$ = (~$primary_controller$)						:i endif						:i %GLOBAL%$id$.$se_setprops$:s{							:i $event_handlers$ = %GLOBAL%$array$							:i $item_text_rgba$ = %GLOBAL%$text_rgba$							:i $exclusive_device$ = %GLOBAL%$exclusive_devices$						:i :s}						:i $change$$g_game_rules_count$ = ((~$g_game_rules_count$) + %i(1))						:i %GLOBAL%$competitive_game_rules_index$ = (%GLOBAL%$competitive_game_rules_index$ + %i(1))					:i endif				:i endif			:i endif			:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))			:i loop_to %GLOBAL%$array_size$			:i $generic_scrollbar_wgt_set_resolution$$id$ = $game_rules_scrollbar$$num_elements$ = (~$g_game_rules_count$)			:i if (%GLOBAL%$is_popup$ = %i(0))				:i %GLOBAL%$resolved_id$.$se_setprops$:s{					:i $event_handlers$ = :a{						:i :s{$pad_back$$generic_event_back$:s}						:i :s{$pad_back$$UI_SFX$$params$ = :s{$menustate$ = $generic$$uitype$ = $back$:s}:s}					:i :a}				:i :s}			:i endif			:i if (%GLOBAL%$index_to_focus$ = %i(4294967295))				:i %GLOBAL%$index_to_focus$ = %i(0)			:i endif			:i return :s{				:i $vmenu$ = %GLOBAL%$resolved_id$				:i $index_to_focus$ = %GLOBAL%$index_to_focus$			:i :s}		:i endif	:i endif	:i endfunction]Script game_rules_choose_rule_set 0x0d4841a5 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				rules				is_popup			]		}		StructQBKey all	}$		:i $is_game_rule_playable$$game_rule$ = %GLOBAL%$rules$	:i $game_rules_get_new_game_mode$$rule$ = %GLOBAL%$rules$	:i if $InNetGame$		:i $GMan_ShutDownGameModeGoal$	:i endif	:i $change$$game_mode$ = %GLOBAL%$game_mode$	:i $change$$competitive_rules$ = %GLOBAL%$rules$	:i $band_lobby_update_lobby_title$	:i if $InInternetMode$		:i if $InNetGame$			:i $GMan_StartGameModeGoal$			:i $SendStructure$$callback$ = $net_private_set_game_mode_and_rules$$data_to_send$ = :s{$game_mode$ = %GLOBAL%$game_mode$$rules$ = %GLOBAL%$rules$:s}		:i else 			:i $PartyGameRuleSelect$$game_rules$ = %GLOBAL%$rules$		:i endif	:i endif	:i if (%GLOBAL%$is_popup$ = %i(0))		:i $UI_SFX$${			StructQBKey menustate = generic			StructQBKey uitype = select		}$				:i $generic_event_back$	:i elseif (%GLOBAL%$game_rule_playable$ = %i(1))		:i $band_lobby_continue_vs$$player$ = (~$g_leader_player_num$)	:i else 		:i $obj_getid$		:i $se_setprops$:s{			:i $event_handlers$ = :a{				:i :s{$focus$$update_game_rule_box$$params$ = :s{$screen_id$ = $current_band_lobby_popup$$game_rule_index$ = %GLOBAL%$game_rule_index$$playable$ = %i(0)$not_playable_reason$ = %GLOBAL%$not_playable_reason$:s}:s}				:i :s{$focus$$game_rules_set_highlight$$params$ = :s{$screen_id$ = $current_band_lobby_popup$$item_id$ = %GLOBAL%$ObjID$$highlight$ = %i(1)$playable$ = %i(0):s}:s}				:i :s{$focus$$game_rules_set_scroll_bar_pos$$params$ = :s{$screen_id$ = $current_band_lobby_popup$$rule_index$ = %GLOBAL%$game_rule_index$:s}:s}				:i :s{$unfocus$$game_rules_set_highlight$$params$ = :s{$screen_id$ = $current_band_lobby_popup$$item_id$ = %GLOBAL%$ObjID$$highlight$ = %i(0)$playable$ = %i(0):s}:s}			:i :a}			:i $replace_handlers$			:i $item_text_rgba$ = :a{%i(100)%i(88)%i(71)%i(255):a}		:i :s}	:i endif	:i endfunction]Script game_rules_get_new_game_mode 0x32f5088b [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				rule			]		}		StructQBKey all	}$		:i if ((~$competitive_rules$ = $solo_fest_mode$) OR (~$competitive_rules$ = $team_fest_mode$))		:i if NOT ((%GLOBAL%$rule$ = $solo_fest_mode$) OR (%GLOBAL%$rule$ = $team_fest_mode$))			:i if (((~%GLOBAL%$rule$)->$team$) = %i(1))				:i return ${StructQBKey game_mode = compmega_team}$			:i else 				:i return ${StructQBKey game_mode = compmega}$			:i endif		:i endif	:i endif	:i if (%GLOBAL%$rule$ = $solo_fest_mode$)		:i return ${StructQBKey game_mode = fest_mode}$	:i elseif (%GLOBAL%$rule$ = $team_fest_mode$)		:i return ${StructQBKey game_mode = fest_mode_team}$	:i else 		:i if (((~%GLOBAL%$rule$)->$team$) = %i(1))			:i return ${StructQBKey game_mode = compmega_team}$		:i else 			:i return ${StructQBKey game_mode = compmega}$		:i endif	:i endif	:i endfunction]Script update_game_rule_box 0x3de3110a [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				screen_id				game_rule_index				playable			]		}		StructQBKey all	}$		:i $menu_options$ = (~$competitive_rules_array$)	:i if $ScreenElementExists$$id$ = %GLOBAL%$screen_id$		:i %GLOBAL%$ruleset$ = (~$competitive_rules_array$:a{%GLOBAL%$game_rule_index$:a})		:i if $StructureContains$$structure$ = (~%GLOBAL%$ruleset$)$description$			:i if (%GLOBAL%$playable$ = %i(1))				:i %GLOBAL%$screen_id$.$se_setprops$:s{					:i $helper_text_text$ = (~%GLOBAL%$ruleset$->$description$)					:i $full_rules_text_text$ = (~%GLOBAL%$ruleset$->$full_rules$)					:i $game_rule_img_texture$ = (~%GLOBAL%$ruleset$->$image$)				:i :s}			:i else 				:i $text$ = %s("Error in update_game_rule_box. No <not_playable_reason> found")				:i $rules_name$ = (~%GLOBAL%$ruleset$->$text$)				:i switch (%GLOBAL%$not_playable_reason$)					:i case $not_enough_players$						:i if $IsXenonOrWinDX$							:i $FormatText$$textname$ = $text$^[6098b11a]^$g$ = %GLOBAL%$rules_name$						:i else 							:i $FormatText$$textname$ = $text$^[5567cb79]^$g$ = %GLOBAL%$rules_name$						:i endif						:i endcase					case $need_matching_instruments$						:i $FormatText$$textname$ = $text$^[d9f912d3]^$g$ = %GLOBAL%$rules_name$						:i endcase					case $need_even_number_of_instruments$						:i $FormatText$$textname$ = $text$^[b7998f8d]^$g$ = %GLOBAL%$rules_name$						:i endcase					case $default_reason$						:i if $IsXenonOrWinDX$							:i $text$ = ^[79e058ec]^						:i else 							:i $text$ = ^[5e58cc98]^						:i endif				:i end_switch				:i %GLOBAL%$screen_id$.$se_setprops$:s{					:i $helper_text_text$ = %GLOBAL%$text$					:i $full_rules_text_text$ = (~%GLOBAL%$ruleset$->$full_rules$)					:i $game_rule_img_texture$ = (~%GLOBAL%$ruleset$->$image$)				:i :s}			:i endif		:i else 			:i %GLOBAL%$screen_id$.$se_setprops$:s{				:i $helper_text_text$ = ^[da8b1d8e]^			:i :s}		:i endif	:i endif	:i endfunction]Script game_rules_set_highlight 0x3ba5b92d [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				screen_id				item_id				highlight			]		}		StructQBKey all	}$		:i if $ScreenElementExists$$id$ = %GLOBAL%$screen_id$		:i if (%GLOBAL%$highlight$ = %i(1))			:i %GLOBAL%$item_id$.$se_setprops$:s{				:i $highlight_btn_alpha$ = %f(0.8000000)				:i $time$ = %f(0.1000000)			:i :s}			:i if (%GLOBAL%$playable$)				:i $se_setprops$${StructQBKey item_text_rgba = NTSCWhite}$			:i endif		:i else 			:i %GLOBAL%$item_id$.$se_setprops$:s{				:i $highlight_btn_alpha$ = %i(0)				:i $time$ = %f(0.1000000)			:i :s}			:i if (%GLOBAL%$playable$)				:i $se_setprops$${StructQBKey item_text_rgba = GH6_gold}$			:i endif		:i endif	:i endif	:i endfunction]Script game_rules_set_scroll_bar_pos 0x7169ba1d [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				rule_index			]		}		StructQBKey all	}$		:i $generic_scrollbar_wgt_update_thumb_pos$:s{		:i $id$ = $game_rules_scrollbar$		:i $index$ = %GLOBAL%$rule_index$	:i :s}	:i endfunction]Script game_rules_show_full_rules da3813e3 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				alias			]		}		StructQBKey all	}$		:i if $ScreenElementExists$$id$ = %GLOBAL%$alias$		:i %GLOBAL%$alias$.$se_getprops$		:i if (%GLOBAL%$info_container_alpha$ = %i(0))			:i $UI_SFX$${				StructQBKey menustate = GameRules				StructQBKey uitype = ToggleOn			}$						:i %GLOBAL%$alias$.$se_setprops$:s{				:i $info_container_alpha$ = %i(1)				:i $game_rule_img_alpha$ = %i(0)				:i $helper_text_alpha$ = %i(0)			:i :s}		:i else 			:i $UI_SFX$${				StructQBKey menustate = GameRules				StructQBKey uitype = ToggleOff			}$						:i %GLOBAL%$alias$.$se_setprops$:s{				:i $info_container_alpha$ = %i(0)				:i $game_rule_img_alpha$ = %i(1)				:i $helper_text_alpha$ = %i(1)			:i :s}		:i endif	:i endif	:i endfunction]Script is_game_rule_playable 0x04fca3a1 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				game_rule			]		}		StructQBKey all	}$		:i $reason$ = $default_reason$	:i $is_valid$ = %i(0)	:i switch %GLOBAL%$game_rule$		:i case $elimination$			:i endcase		case $do_or_die$			:i endcase		case $momentum$			:i endcase		case $momentum_plus$			:i endcase		case $solo_fest_mode$			:i endcase		case $perfectionist$			:i endcase		case $streakers$			:i endcase		case $faceoff$			:i if $band_lobby_is_matching_instruments$				:i if (~$g_lobby_net_state$ = $net_public$)					:i $is_valid$ = %i(1)				:i else 					:i if $band_lobby_satisfy_min_players$$team$ = %i(0)$game_rule$ = %GLOBAL%$game_rule$						:i $is_valid$ = %i(1)					:i else 						:i $reason$ = $not_enough_players$					:i endif				:i endif			:i else 				:i $reason$ = $need_matching_instruments$			:i endif			:i endcase		case $team_do_or_die$			:i endcase		case $team_momentum$			:i endcase		case $team_perfectionist$			:i endcase		case $team_elimination$			:i endcase		case $team_streakers$			:i endcase		case $team_fest_mode$			:i if (~$g_lobby_net_state$ = $net_public$)				:i if $band_lobby_is_matching_instruments$					:i $is_valid$ = %i(1)				:i else 					:i $reason$ = $need_matching_instruments$				:i endif			:i else 				:i if $band_lobby_is_matching_instruments$					:i if $band_lobby_is_even_number_of_instruments$						:i if $band_lobby_satisfy_min_players$${StructInt team = 1}$							:i $is_valid$ = %i(1)						:i else 							:i $reason$ = $not_enough_players$						:i endif					:i else 						:i $reason$ = $need_even_number_of_instruments$					:i endif				:i else 					:i $reason$ = $need_matching_instruments$				:i endif			:i endif			:i endcase		case $team_faceoff$			:i if (~$g_lobby_net_state$ = $net_public$)				:i $is_valid$ = %i(1)			:i else 				:i if $band_lobby_is_even_number_of_instruments$					:i if $band_lobby_satisfy_min_players$${StructInt team = 1}$						:i $is_valid$ = %i(1)					:i else 						:i $reason$ = $not_enough_players$					:i endif				:i else 					:i $reason$ = $need_even_number_of_instruments$				:i endif			:i endif			:i endcase		case $band_vs_band$			:i if $band_lobby_is_traditional_band$				:i if (~$g_lobby_net_state$ = $net_public$)					:i $is_valid$ = %i(1)				:i else 					:i if $band_lobby_is_even_number_of_instruments$						:i if $band_lobby_satisfy_min_players$${StructInt team = 1}$							:i $is_valid$ = %i(1)						:i else 							:i $reason$ = $not_enough_players$						:i endif					:i else 						:i $reason$ = $need_even_number_of_instruments$					:i endif				:i endif			:i endif			:i endcase		default 			:i %GLOBAL%$is_valid$ = %i(0)	:i end_switch	:i if (%GLOBAL%$is_valid$ = %i(1))		:i return $game_rule_playable$ = %GLOBAL%$is_valid$	:i else 		:i return $game_rule_playable$ = %GLOBAL%$is_valid$$not_playable_reason$ = %GLOBAL%$reason$	:i endif	:i endfunction]Script net_private_set_game_mode_and_rules d1368e8a [	:i $printf$${StructQBStringQs 0x52b42ee6}$	:i $GMan_ShutDownGameModeGoal$	:i $change$$game_mode$ = %GLOBAL%$game_mode$	:i $change$$competitive_rules$ = %GLOBAL%$rules$	:i $GMan_StartGameModeGoal$	:i endfunction]