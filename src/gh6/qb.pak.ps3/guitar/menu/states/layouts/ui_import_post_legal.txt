Unknown [1c00000000000000000005fc0000000000000000]Script ui_create_import_post_legal 0x073d9416 [	:i if $MarketplacePersistenceFunc$${StructQBKey func = encountered_error}$		:i return 	:i endif	:i if ((~$g_marketplace_responding_to_error$) = %i(1))		:i return 	:i endif	:i $FormatText$$textname$ = $dialog_text$^[5f4b19c5]^$s$ = (%GLOBAL%$purchase_struct$->$song_title$)	:i $CreateScreenElement$:s{		:i $parent$ = $root_window$		:i $type$ = $descinterface$		:i $id$ = $import_legal_dialog_box$		:i $desc$ = %s("privacy_policy")		:i $event_handlers$ = :a{			:i :s{$pad_choose$$ui_import_post_legal_choose$$params$ = :s{$purchase_struct$ = %GLOBAL%$purchase_struct$:s}:s}			:i :s{$pad_back$$ui_import_post_legal_back$$params$ = :s{:s}:s}			:i :s{$pad_up$$ui_privacy_policy_scroll$$params$ = :s{$desc_id$ = $import_legal_dialog_box$$up$ = %i(1):s}:s}			:i :s{$pad_down$$ui_privacy_policy_scroll$$params$ = :s{$desc_id$ = $import_legal_dialog_box$$down$ = %i(1):s}:s}		:i :a}		:i $exclusive_device$ = (~$primary_controller$)		:i $dlog_heading_text$ = ^[aa163738]^	:i :s}	:i if $import_legal_dialog_box$.$desc_resolvealias$${StructQBKey name = alias_text_clip}$		:i $GetScreenElementDims$$id$ = %GLOBAL%$resolved_id$		:i %GLOBAL%$max_y$ = %GLOBAL%$height$	:i else 		:i $scriptassert$${StructString 0x00000000 = "ui_create_import_pre_legal is unable to resolve alias_text_clip"}$	:i endif	:i if $import_legal_dialog_box$.$desc_resolvealias$${StructQBKey name = alias_text_menu}$		:i $AssignAlias$$id$ = %GLOBAL%$resolved_id$$alias$ = $import_legal_text_parent$		:i %GLOBAL%$common_props$ = :s{			:i $type$ = $TextBlockElement$			:i $font$ = $fontgrid_text_a1$			:i $just$ = :a{$left$$top$:a}			:i $internal_just$ = :a{$left$$top$:a}			:i $internal_scale$ = %f(0.3200000)			:i $rgba$ = $GH6_gold$			:i $dims$ = %vec2(700.0,30.0)			:i $fit_width$ = $wrap$			:i $fit_height$ = $expand dims$			:i $scale_mode$ = $proportional$			:i $text_case$ = $Original$		:i :s}		:i $CreateScreenElement$:s{			:i %GLOBAL%$common_props$			:i $id$ = $dummy$			:i $parent$ = $root_window$			:i $text$ = %GLOBAL%$dialog_text$			:i $alpha$ = %f(0.0)		:i :s}		:i $GetScreenElementChildren$$id$ = %GLOBAL%$id$		:i $GetArraySize$%GLOBAL%$children$		:i %GLOBAL%$i$ = %i(0)		:i while 		:i (%GLOBAL%$children$:a{%GLOBAL%$i$:a}).$se_getprops$		:i $CreateScreenElement$:s{			:i %GLOBAL%$common_props$			:i $parent$ = $import_legal_text_parent$			:i $text$ = %GLOBAL%$text$		:i :s}		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$		:i $DestroyScreenElement$${StructQBKey id = dummy}$		:i %GLOBAL%$enable_scrolling$ = %i(1)		:i $GetScreenElementDims$${StructQBKey id = import_legal_text_parent}$		:i if (%GLOBAL%$height$ < %GLOBAL%$max_y$)			:i %GLOBAL%$enable_scrolling$ = %i(0)			:i $import_legal_dialog_box$.$se_setprops$${				StructArray event_handlers				{					ArrayStruct					[						StructHeader						{							StructQBKey pad_up							StructQBKey NullScript						}						StructHeader						{							StructQBKey pad_down							StructQBKey NullScript						}					]				}				StructQBKey replace_handlers			}$					:i endif		:i if $import_legal_dialog_box$.$desc_resolvealias$${StructQBKey name = alias_generic_scrollbar_wgt}$			:i if (%GLOBAL%$enable_scrolling$ = %i(1))				:i $generic_scrollbar_wgt_initialize$$id$ = %GLOBAL%$resolved_id$				:i $generic_scrollbar_wgt_set_resolution$$id$ = %GLOBAL%$resolved_id$$num_elements$ = %GLOBAL%$array_size$			:i else 				:i %GLOBAL%$resolved_id$.$se_setprops$$alpha$ = %f(0.0)			:i endif		:i endif	:i else 		:i $scriptassert$${StructString 0x00000000 = "ui_create_import_pre_legal is unable to resolve alias_text_menu"}$	:i endif	:i $add_gamertag_helper$$exclusive_device$ = (~$primary_controller$)	:i $add_user_control_helper$${		StructQBStringQs text = b73cb78f		StructQBKey button = green		StructInt z = 100000	}$		:i $add_user_control_helper$${		StructQBStringQs text = f7723015		StructQBKey button = red		StructInt z = 100000	}$		:i endfunction]Script ui_destroy_import_post_legal f803c550 [	:i if (~$g_marketplace_responding_to_error$ = %i(0))		:i $DestroyScreenElement$${StructQBKey id = import_legal_dialog_box}$		:i $clean_up_user_control_helpers$		:i $destroy_dialog_box$	:i endif	:i endfunction]Script ui_import_post_legal_choose 0x692cc550 [	:i $import_legal_dialog_box$.$se_setprops$${StructQBKey block_events}$	:i $UI_SFX$${		StructQBKey menustate = generic		StructQBKey uitype = select	}$		:i $SetSpawnInstanceLimits$${		StructInt max = 1		StructQBKey managment = ignore_spawn_request	}$		:i $ui_destroy_import_post_legal$	:i $songlist_options_music_store_purchase_accepted$$purchase_struct$ = %GLOBAL%$purchase_struct$	:i endfunction]Script ui_import_post_legal_back e531ae74 [	:i $UI_SFX$${		StructQBKey menustate = generic		StructQBKey uitype = back	}$		:i $import_legal_dialog_box$.$se_setprops$${StructQBKey block_events}$	:i $SetSpawnInstanceLimits$${		StructInt max = 1		StructQBKey managment = ignore_spawn_request	}$		:i $generic_event_back$${StructQBKey state = UIState_songlist}$	:i endfunction]