Unknown [1c00000000000000000028880000000000000000]SectionInteger show_gpu_time 0SectionInteger output_gpu_log 0SectionInteger gpu_log_start_logging 0SectionInteger show_cpu_time 0SectionInteger show_play_log 0SectionInteger play_log_lines 10SectionInteger show_guitar_tilt 0SectionInteger nxwatson_channels 1SectionInteger output_song_stats 0SectionInteger show_sensor_debug 0SectionInteger vocal_debug_hud 0SectionInteger roland_drumkit 1SectionInteger save_heap_created_at_boot 0SectionInteger g_skip_intro_movie 0SectionInteger g_suppress_menu_stack_loop_check 0SectionInteger q_boot_scanning_finished 0SectionInteger g_long_dlc_scan_at_boot 0SectionInteger g_long_dlc_scan_at_boot_start_time 0SectionInteger ps2_venues 0SectionQBKeyString current_level Default_VenueSectionFloat current_time 0.00000SectionFloat current_deltatime 0.0167000SectionInteger current_starttime 0SectionInteger current_endtime 0SectionInteger current_looppoint -1000000SectionFloat current_speedfactor 1.00000SectionInteger autolaunch_startnow 0SectionInteger Autolaunch_ShowStorageSelector 1SectionQBKey current_song_qpak NoneSectionInteger current_song_qpak_performance 0SectionInteger freeplay_mem_dump_done 0SectionQBKey last_song_failed NoneSectionInteger current_song_failed_num 0SectionQBKey current_transition NoneSectionQBKey debug_current_transition NoneSectionInteger in_band_lobby 0SectionInteger num_players_finished 0SectionInteger guitar_fretbar_divisions 2SectionInteger drum_fretbar_divisions 2SectionInteger always_corrupt_savegames 0SectionInteger disable_band 0SectionInteger disable_crowd 0SectionInteger disable_note_input 0SectionInteger is_network_game 0SectionInteger net_ready_to_start 0SectionQBKey rich_presence_context presence_menusSectionQBKey game_mode quickplaySectionInteger allow_controller_for_all_instruments 0SectionInteger autolaunch_cas 0SectionInteger autolaunch_jam 0SectionInteger autolaunch_lobby 0SectionInteger autolaunch_mainmenu 0SectionInteger g_skip_social_networks 0SectionInteger skip_signin 0SectionInteger skip_career_forced_flow 0SectionInteger show_movies 1SectionInteger downloadcontent_enabled 1SectionQBKey input_mode recordSectionInteger replay_suspend 1SectionInteger songtime_paused 0SectionInteger drum_solo_songtime_paused 0SectionFloat drum_solo_length 0.00000SectionInteger drum_solo_no_gems 0SectionStruct drum_rock_meter_weights{	StructHeader	{		StructArray beginner		{			ArrayFloat			[				1.00000				1.00000			]		}		StructArray easy		{			ArrayFloat			[				1.00000				1.00000			]		}		StructArray medium		{			ArrayFloat			[				1.50000				1.50000			]		}		StructArray hard		{			ArrayFloat			[				2.00000				2.50000			]		}		StructArray expert		{			ArrayFloat			[				2.00000				2.50000			]		}	}}SectionInteger net_pattern 0SectionInteger net_strum 0SectionInteger display_debug_input 0SectionInteger output_log_file 0SectionInteger practice_start_time 0SectionInteger practice_end_time 0SectionInteger practice_loop_section 1SectionQBKey startup_song BloodlinesSectionFloat time_audio_offset 0.00000SectionFloat time_gem_offset 0.00000SectionFloat time_input_offset 0.00000SectionFloat time_drum_midi_offset 0.00000SectionFloat time_gem_offset_with_lag 0.00000SectionFloat time_drum_midi_offset_with_lag 0.00000SectionInteger cheat_airinstruments -1SectionInteger Cheat_InvisibleCharacters -1SectionInteger cheat_performancemode -1SectionInteger cheat_invincible 0SectionInteger Cheat_FocusMode -1SectionInteger Cheat_HUDFreeMode -1SectionInteger Cheat_SoundCheckMode -1SectionFloat challenge_fretbar_width 1.50000SectionFloat challenge_fretbar_z 3.90000SectionQBKey crowd_model_array NoneSectionQBKey crowd_3D_model_array NoneSectionFloat failed_song_time 0.00000SectionQBKey current_section_array NoneSectionInteger current_section_array_entry 0SectionInteger primary_controller 0SectionInteger primary_controller_assigned 0SectionInteger invite_controller -1SectionInteger allow_missing_song_fsbs 0SectionInteger streamall_fsb_index -1SectionInteger sixchannelfiles_fsb_index -1SectionInteger enable_button_cheats 1SectionInteger enable_debug_menus 1SectionInteger winning_player_camera_percentage 100SectionInteger playerserver_frame_lag 0SectionQBKey sysnotify_menus_position toprightSectionQBKey sysnotify_ingame_position toprightSectionArray instrument_checksums{	ArrayQBKey	[		guitar		Bass		Vocals		drum	]}SectionArray instrument_text{	ArrayQBKeyStringQs	[		0x09048d9e		b6237ee8		0x879f5b50		0x04246759	]}SectionArray part_priority{	ArrayQBKey	[		Vocals		drum		guitar		Bass	]}SectionInteger random_songs_on_disc_only 0SectionInteger boot_movie_done 0SectionInteger CameraCuts_EnableVideoVenueCams 0SectionInteger use_worst_band 0SectionInteger g_skinning_lod_dist 6Script print_loading_time d877a329 [	:i $GetTrueElapsedTime$$starttime$ = %GLOBAL%$starttime$	:i $finalprintf$^[c84bff60]^$a$ = %GLOBAL%$elapsedtime$$t$ = %GLOBAL%$text$	:i $GetTrueStartTime$	:i return $starttime$ = %GLOBAL%$starttime$	:i endfunction]Script guitar_startup ead77ca1 [	:i if $globalexists$${StructQBKey name = scriptstocompile}$		:i $GetArraySize$${StructQBString scriptstocompile}$		:i if (%GLOBAL%$array_size$ > %i(0))			:i $index$ = %i(0)			:i while 			:i $EnableCompiledScript$$ScriptName$ = (~$scriptstocompile$:a{%GLOBAL%$index$:a}->$ScriptName$)			:i $index$ = (%GLOBAL%$index$ + %i(1))			:i loop_to %GLOBAL%$array_size$		:i endif	:i endif	:i if $ScriptExists$${StructQBKey pre_startup}$		:i $pre_startup$	:i endif	:i if $DemoBuild$		:i if (~$kiosk_demo$ = %i(1))			:i $change$$gh6_songlist$ = (~$gh6_demo_kiosk_songlist$)		:i else 			:i $change$$gh6_songlist$ = (~$gh6_demo_xbla_songlist$)		:i endif	:i endif	:i $GetTrueStartTime$	:i $guitar_startup_initialize$	:i $guitar_startup_memory$	:i $guitar_startup_systems$	:i $print_loading_time$$starttime$ = %GLOBAL%$starttime$$text$ = ^[c0c883fd]^	:i if $ScriptExists$${StructQBKey console_debug_create_personal}$		:i $console_debug_create_personal$	:i else 		:i $console_debug_create$	:i endif	:i $spawnscriptnow$${StructQBKey guitar_startup_spawned}$	:i endfunction]Script debug_timing_test 0x6874b01e [	:i $ToggleMetrics$${StructInt mode = 2}$	:i $MoveProfileCursor$$cpu$ = (~$current_cpu$)$freeze$	:i endfunction]Script guitar_startup_spawned b5b3b6e0 [	:i $audio_ui_menu_music_off$	:i $memory_create_song_heap$	:i $guitar_startup_critical_loads$	:i $spawnscriptnow$${StructQBKey guitar_startup_async_init}$	:i $output_status_begin$${StructString prefix = "movie"}$	:i $output_status$${		StructString prefix = "movie"		StructString text = "Loading intro movie to memory."	}$		:i $output_status$${		StructString prefix = "movie"		StructString text = "cleanup"	}$		:i $startrendering$	:i $hideloadingscreen$	:i $fadetoblack$${		StructQBKey Off		StructQBKey no_wait	}$		:i $create_loading_screen$${		StructQBKey loading_screen_type = bink		StructString bink = "logo_intro"		StructQBKey bink_heap = heap_cas_cache		StructQBKey bink_heap_ps3 = heap_cas_cache_vram		StructQBKey pause_script = guitar_startup_async_init	}$		:i $output_status_end$${StructString prefix = "movie"}$	:i $output_status_begin$${StructString prefix = "mload"}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "pak/anims/perm_anims/perm_anims.pak & pak/ui_shared/ui_shared.pak"	}$		:i $LoadPakAsync$${		StructString pak_name = "pak/anims/perm_anims/perm_anims.pak"		StructQBKey heap = heap_musician_anim		StructQBKey no_vram	}$		:i $LoadPakAsync$${		StructString pak_name = "pak/ui_shared/ui_shared.pak"		StructQBKey heap = heap_ui_shared	}$		:i $output_status$${		StructString prefix = "mload"		StructString text = "Font setup"	}$		:i $interlock$${StructQBKey lock_name = lock_uishared}$	:i $output_status$${		StructString prefix = "mgame"		StructString text = "Load in-game textures"	}$		:i $PushMemProfile$${StructString 0x00000000 = "z_in_game"}$	:i $LoadPakAsync$${		StructString pak_name = "zones/z_ingame/z_in_game.pak"		StructQBKey heap = heap_in_game	}$		:i $PopMemProfile$	:i $output_status$${		StructString prefix = "mload"		StructString text = "Initializing Anim Cache"	}$		:i $LoadPakAsync$${		StructString pak_name = "pak/animq.pak"		StructQBKey heap = topdownheap		StructQBKey no_vram	}$		:i $RegisterAllAnimEvents$	:i $UnloadPak$${StructString 0x00000000 = "pak/animq.pak"}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "Loading global_model_tex"	}$		:i $PushMemProfile$${StructString 0x00000000 = "global_model_tex"}$	:i $LoadPakAsync$${		StructString pak_name = "pak/global_model_tex/global_model_tex.pak"		StructQBKey heap = heap_global_pak	}$		:i $PopMemProfile$	:i $output_status$${		StructString prefix = "mload"		StructString text = "Loading cas_captextures"	}$		:i $PushMemProfile$${StructString 0x00000000 = "Game Heaps"}$	:i $LoadPakAsync$${		StructString pak_name = "pak/cas_captextures.pak"		StructQBKey heap = heap_cas_global	}$		:i $memory_create_zone_maps$	:i $PopMemProfile$	:i $output_status$${		StructString prefix = "mload"		StructString text = "Pak for global venue ad textures"	}$		:i $LoadPakAsync$${		StructString pak_name = "pak/global_ad_tex/global_ad_tex.pak"		StructQBKey heap = heap_massive_ads	}$		:i $RegisterTexDictForUI$${StructQBKey pak\global_ad_tex\global_ad_tex.tex}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "Pak for menu ad textures"	}$		:i $DynamicAdManagerCommand$${StructQBKey func = loadingpak}$	:i $LoadPakAsync$${		StructString pak_name = "pak/menu_ad_tex/menu_ad_tex.pak"		StructQBKey heap = heap_massive_ads	}$		:i $RegisterTexDictForUI$${StructQBKey pak\menu_ad_tex\menu_ad_tex.tex}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "Load up global ragdoll/skeleton pak. As a rawpak, we're instancing out assets from it"	}$		:i $LoadPakAsync$${		StructString pak_name = "pak/global_skeletons/global_skeletons.pak"		StructQBKey heap = heap_global_pak		StructInt is_raw = 1	}$		:i $output_status$${		StructString prefix = "mload"		StructString text = "Load up song stats"	}$		:i $LoadPakAsync$${		StructString pak_name = "pak/songstat.pak"		StructQBKey heap = heap_songstat_pak		StructQBKey no_vram	}$		:i $LoadPakAsync$${		StructString pak_name = "pak/songstat_fcc.pak"		StructQBKey heap = heap_songstat_pak		StructQBKey no_vram	}$		:i $output_status$${		StructString prefix = "mload"		StructString text = "Loading global.pak"	}$		:i $LoadPakAsync$${		StructString pak_name = "zones/global/global.pak"		StructQBKey heap = heap_global_pak	}$		:i $output_status$${		StructString prefix = "mload"		StructString text = "Loading global.pak nodearray"	}$		:i $ParseNodeArray$${		StructQBKey queue		StructQBKey zone_name = global		StructQBKey array_name = global_nodearray		StructQBKey heap = heap_global_pak	}$		:i $output_status$${		StructString prefix = "mload"		StructString text = "AvatarBoneRemapTable"	}$		:i $PushMemProfile$${StructString 0x00000000 = "InitializeAvatarBoneRemapTable"}$	:i $InitializeAvatarBoneRemapTable$	:i $PopMemProfile$	:i $interlock$${StructQBKey lock_name = lock_materials}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "Changelist display settings"	}$		:i if (~$show_build_version$ = %i(1))		:i $debug_toggle_changelist$${StructQBKey show}$	:i endif	:i $output_status$${		StructString prefix = "mload"		StructString text = "FMod Streams + SFX"	}$		:i $PauseSpawnedScript$${StructQBKey guitar_startup_async_init}$	:i $PushMemProfile$${StructString 0x00000000 = "FMod Streams + SFX"}$	:i if $IsFmodEnabled$		:i $conditional_async_wait$${StructInt async = 1}$		:i $LoadFSB$${			StructString filename = "streams/streamall"			StructInt numstreams = 3		}$				:i $change$$streamall_fsb_index$ = %GLOBAL%$fsb_index$		:i $conditional_async_wait$${StructInt async = 1}$		:i $LoadFSB$${			StructString filename = "streams/sixchannelfiles"			StructInt numstreams = 1		}$				:i $change$$sixchannelfiles_fsb_index$ = %GLOBAL%$fsb_index$		:i $conditional_async_wait$${StructInt async = 1}$		:i $SfxEngineDeferAddSounds$${StructQBKey func = enable}$		:i $LoadPakAsync$${			StructString pak_name = "zones/global/global_sfx.pak"			StructQBKey heap = heap_global_sfx		}$				:i $SfxEngineDeferAddSounds$${StructQBKey func = disable}$		:i $conditional_async_wait$${StructInt async = 1}$		:i while 		:i if $SfxEngineDeferAddSounds$${				StructQBKey func = Process				StructInt count = 50			}$						:i continue		:i endif		:i $wait$${			StructInt 1			StructQBKey gameframe		}$				:i loop_to 		:i $conditional_async_wait$${StructInt async = 1}$	:i endif	:i $PopMemProfile$	:i $unpausespawnedscript$${StructQBKey guitar_startup_async_init}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "global_gfx setup"	}$		:i $SetScenePermanent$${		StructString scene = "zones/global/global_gfx.scn"		StructQBKey permanent	}$		:i $output_status$${		StructString prefix = "iinit"		StructString text = "Set SkinLookupTexture"	}$		:i $engineConfig$${StructQBKey skinlookuptexture = tex\SFX\SkinLookup64x64_dnc.dds}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "setup_models"	}$		:i $PushMemProfile$${StructString 0x00000000 = "setup_models"}$	:i $setup_models$	:i $PopMemProfile$	:i $output_status$${		StructString prefix = "mload"		StructString text = "Loading Zone"	}$		:i $printf$${		StructQBStringQs 0x7ef8c198		StructQBString s = current_level	}$		:i $SetPakManCurrentBlock$${		StructQBKey map = zones		StructQBKey pak = None		StructInt block_scripts = 1	}$		:i $output_status$${		StructString prefix = "mload"		StructString text = "Creating Reverb"	}$		:i $audio_effects_create_settings_by_venue$	:i $audio_jam_effects_create_jam_mode_effects$	:i $change$${StructInt g_not_start_of_game = 0}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "AddEditableList ped_editable_list"	}$		:i $AddEditableList$${StructQBKey ped_editable_list}$	:i $output_status$${		StructString prefix = "mload"		StructString text = "StartKeyboardHandler"	}$		:i $StartKeyboardHandler$${StructQBKey callback_script = handle_keyboard_input}$	:i $output_status_end$${StructString prefix = "mload"}$	:i $printf$${StructQBStringQs b698d219}$	:i $output_status_begin$${StructString prefix = "mgame"}$	:i $output_status$${		StructString prefix = "mgame"		StructString text = "Load in-game anims"	}$		:i $PushMemProfile$${StructString 0x00000000 = "z_in_game"}$	:i $PopMemProfile$	:i $output_status$${		StructString prefix = "mgame"		StructString text = "Band logo"	}$		:i $PushMemProfile$${StructString 0x00000000 = "band_logo"}$	:i $conditional_async_wait$${StructInt async = 1}$	:i $cas_band_logo_create_object$	:i $conditional_async_wait$${StructInt async = 1}$	:i $PopMemProfile$	:i $RegisterTexDictForUI$(~$CAS_Band_Logo_Details$->$texdict$)	:i $output_status$${		StructString prefix = "mgame"		StructString text = "Create MusicStudio Object"	}$		:i $PushMemProfile$${StructString 0x00000000 = "MusicStudio"}$	:i $CreateCompositeObject$${StructQBString musicstudio_mainobj_desc}$	:i $PopMemProfile$	:i $output_status$${		StructString prefix = "mgame"		StructString text = "Vocals setup"	}$		:i $vocals_start_mic$	:i $webpresence_init$	:i if (~$autolaunch_startnow$ !== %i(0))		:i $vocals_distribute_mics$	:i endif	:i $output_status$${		StructString prefix = "mgame"		StructString text = "Jam Session"	}$		:i $SongFileManager$${		StructQBKey func = add_song_file		StructQBKey song_name = jamsession	}$		:i $interlock$${		StructQBKey wait		StructString prefix = "mgame"		StructQBKey lock_name = lock_savegame	}$		:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i $output_status$${		StructString prefix = "mgame"		StructString text = "Load venue"	}$		:i $interlock$${		StructQBKey wait		StructString prefix = "mgame"		StructQBKey lock_name = lock_globaltags	}$		:i if (~$autolaunch_go$ = %i(4294967295))		:i $quickplay_choose_random_venue$		:i $Load_Venue$		:i $wait$${			StructInt 1			StructQBKey gameframe		}$			:i endif	:i $output_status$${		StructString prefix = "mgame"		StructString text = "Load song"	}$		:i $Playlist_Clear$	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i $freeplay_next_song$${StructQBKey initial_song_list = true}$	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i $output_status$${		StructString prefix = "mgame"		StructString text = "Load persistent band."	}$		:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i $persistent_band_create_band$${		StructInt startup = 1		StructInt async = 1	}$		:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i $WaitUnloadGroup$${		StructQBKey cas		StructInt async = 1	}$		:i $anim_paks_set_state$${StructQBKey state = frontend}$	:i $output_status$${		StructString prefix = "mgame"		StructString text = "Preload band_lobbyUI Pak"	}$		:i $SetPakManCurrent$${		StructQBKey map = ui_paks		StructString pakname = "band_lobby"	}$		:i $output_status$${		StructString prefix = "mgame"		StructString text = "Make sure all async scripts are done."	}$		:i $interlock$${		StructQBKey wait		StructString prefix = "mgame"	}$		:i $output_status_end$${StructString prefix = "mgame"}$	:i $output_status_begin$${StructString prefix = "movie"}$	:i $output_status$${		StructString prefix = "movie"		StructString text = "Waiting for movie to finish."	}$		:i $destroy_loading_screen$${		StructQBKey wait_for_unload		StructInt wait_for_end = 1	}$		:i $output_status_end$${StructString prefix = "movie"}$	:i if (~$g_skip_intro_movie$ = %i(0))		:i if $IsPS3$			:i $SetBinkHeap$${				StructQBKey heap_audio				StructQBKey alloc_type = binkalloc			}$						:i $SetBinkHeap$${				StructQBKey heap_bink				StructQBKey alloc_type = binktexture			}$					:i else 			:i $SetBinkHeap$${StructQBKey heap_cas_cache}$		:i endif		:i $PlayMovieAndWait$${			StructString movie = "initial_boot_movie"			StructQBKey noblack		}$				:i $SetBinkHeap$${StructQBKey heap_bink}$	:i endif	:i $change$${StructInt boot_movie_done = 1}$	:i $interlock$${		StructQBKey wait		StructString prefix = "mgame"		StructQBKey lock_name = lock_freeplay	}$		:i $memory_destroy_save_heap_at_boot$	:i $destroy_bink_sub_heaps$	:i $create_bink_sub_heaps$	:i $create_song_and_musicstudio_heaps$	:i $autolaunch_run$	:i $printf$${StructQBStringQs 0x160a1d8c}$	:i $guitar_initialize_profilers$	:i $GetMaxLocalPlayers$	:i $player$ = %i(1)	:i while 	:i $generate_pos_table$$player$ = %GLOBAL%$player$$jam_room_highway$ = %i(0)	:i if (~$autolaunch_startnow$ = %i(1))		:i $spawnscriptnow$$create_guitar_events$$params$ = :s{ isNull :s}	:i else 		:i $SpawnScriptLater$$create_guitar_events$$params$ = :s{ isNull :s}	:i endif	:i $player$ = (%GLOBAL%$player$ + %i(1))	:i loop_to %GLOBAL%$max_players$	:i $SpawnScriptLater$${StructQBKey create_news_feed_events}$	:i $fadetoblack$${		StructQBKey on		StructFloat alpha = 1.00		StructFloat time = 0.00		StructInt z_priority = 100		StructQBKey no_wait	}$		:i if (~$autolaunch_startnow$ = %i(0))		:i if $globalexists$${				StructQBKey name = autolaunch_state				StructQBKey type = checksum			}$						:i $fadetoblack$${				StructQBKey Off				StructQBKey no_wait			}$						:i $ThreadSafeSetGlobalInteger$${				StructQBKey global_name = primary_controller_assigned				StructInt new_value = 1			}$						:i $change$${StructQBKey g_boot_sysnotify_wait = false}$			:i $ui_event$${				StructQBKey event = menu_change				StructStruct Data				{					StructHeader					{						StructQBString state = autolaunch_state					}				}			}$					:i else 			:i if (~$skip_signin$ = %i(1))				:i $ui_event$${					StructQBKey event = menu_replace					StructStruct Data					{						StructHeader						{							StructQBKey state = uistate_mainmenu							StructQBKey clear_previous_stack						}					}				}$							:i else 				:i $ui_event$:s{					:i $event$ = $menu_replace$					:i $Data$ = :s{						:i $state$ = $UIstate_save_icon_warning$						:i $device_num$ = (~$primary_controller$)						:i $clear_previous_stack$					:i :s}				:i :s}			:i endif			:i $globaltag_setup_traditional_band$${StructInt savegame = 0}$			:i $fadetoblack$${				StructQBKey Off				StructQBKey no_wait			}$					:i endif	:i else 		:i $fadetoblack$${			StructQBKey Off			StructQBKey no_wait		}$				:i $getplayerinfo$${			StructInt 1			StructQBKey controller		}$				:i $ui_event_wait_for_safe$		:i $ui_event$$event$ = $menu_change$$Data$ = :s{$state$ = $UIState_Gameplay$$device_num$ = %GLOBAL%$controller$$uselaststarttime$ = %i(1):s}	:i endif	:i if (~$debug_unlockall_on_boot$)		:i if ((~$primary_controller_assigned$ = %i(0)) OR (~$primary_controller$ = %i(4294967295)))			:i $ThreadSafeSetGlobalInteger$${				StructQBKey global_name = primary_controller_assigned				StructInt new_value = 1			}$						:i $ThreadSafeSetGlobalInteger$${				StructQBKey global_name = primary_controller				StructInt new_value = 0			}$						:i $unset_primary_controller$ = %i(1)		:i endif		:i $debug_menu_unlockall$		:i if $GotParam$${StructQBKey unset_primary_controller}$			:i $ThreadSafeSetGlobalInteger$${				StructQBKey global_name = primary_controller_assigned				StructInt new_value = 0			}$					:i endif	:i endif	:i $spawnscriptnow$${StructQBKey song_preview_monitor}$	:i $create_ui_visualizer$	:i if $IsPS3$		:i $sys_mem_limit$ = ((%i(226) * %i(1024)) + (%i(1040) * %i(1024)))	:i else 		:i $sys_mem_limit$ = %i(0)	:i endif	:i $SetSystemMemoryLimit$$limit$ = %GLOBAL%$sys_mem_limit$	:i $SpawnScriptLater$${StructQBKey news_feed_friend_update_request_loop}$	:i if (~$autolaunch_startnow$ = %i(1))		:i $stoprendering$		:i $spawnscriptnow$$autolaunch_start_game$$params$ = :s{$starttime$ = (~$current_starttime$):s}	:i endif	:i endfunction]Script guitar_initialize_profilers d5b027e9 [	:i %GLOBAL%$profile_gpu$ = %i(0)	:i if (~$show_gpu_time$ = %i(1))		:i %GLOBAL%$profile_gpu$ = %i(1)	:i endif	:i if (~$output_gpu_log$ = %i(1))		:i %GLOBAL%$profile_gpu$ = %i(1)		:i if $IsXenon$			:i $EnableProfileInManager$${				StructInt processor = 0				StructInt enabled = 0			}$						:i $EnableProfileInManager$${				StructInt processor = 1				StructInt enabled = 1			}$						:i $EnableProfileInManager$${				StructInt processor = 2				StructInt enabled = 0			}$						:i $EnableProfileInManager$${				StructInt processor = 3				StructInt enabled = 0			}$						:i $EnableProfileInManager$${				StructInt processor = 4				StructInt enabled = 0			}$						:i $EnableProfileInManager$${				StructInt processor = 5				StructInt enabled = 0			}$						:i $EnableProfileInManager$${				StructInt processor = 6				StructInt enabled = 0			}$					:i else 			:i $EnableProfileInManager$${				StructInt processor = 0				StructInt enabled = 0			}$						:i $EnableProfileInManager$${				StructInt processor = 1				StructInt enabled = 1			}$						:i $EnableProfileInManager$${				StructInt processor = 2				StructInt enabled = 0			}$					:i endif	:i endif	:i if (%GLOBAL%$profile_gpu$ = %i(1))		:i $ToggleMetrics$${StructInt mode = 5}$		:i $change$${StructInt current_cpu = 6}$	:i else 		:i if (~$show_cpu_time$ = %i(1))			:i $change$${StructInt current_cpu = 0}$			:i $ToggleMetrics$${StructInt mode = 5}$		:i endif	:i endif	:i endfunction]Script autolaunch_start_game c6a88389 [	${StructInt starttime = 0}$	:i $Transition_SelectTransition$	:i $SpawnScriptLater$$start_gem_scroller$$params$ = :s{$starttime$ = %GLOBAL%$starttime$$autolaunched_game$ = %i(1):s}	:i $gh_unpause_ui$	:i endfunction]Script autolaunch_spawned f0d71787 [	:i if (~$net_autolaunch_role$ = $None$)		:i (~$default_loading_screen$->$Create$)		:i $MC_SetActivePlayer$${StructQBKey querydefault}$		:i if (~$Autolaunch_ShowStorageSelector$ = %i(1))			:i $ShowStorageSelector$		:i endif		:i $ui_event_block$${			StructQBKey event = menu_add			StructQBKey state = uistate_mainmenu			StructStruct Data			{				StructHeader				{					StructString base_name = "mainmenu"				}			}		}$				:i $ui_event_block$${			StructQBKey event = menu_add			StructQBKey state = UIState_songlist			StructStruct Data			{				StructHeader				{					StructString base_name = "songlist"				}			}		}$				:i $getplayerinfo$${			StructInt 1			StructQBKey controller		}$				:i $ui_event$$event$ = $menu_change$$Data$ = :s{$state$ = $uistate_play_song$$device_num$ = %GLOBAL%$controller$$uselaststarttime$ = %i(1):s}	:i else 		:i $printf$${StructQBStringQs e17688e1}$		:i $MC_SetActivePlayer$${StructQBKey querydefault}$		:i if (~$Autolaunch_ShowStorageSelector$ = %i(1))			:i $ShowStorageSelector$		:i endif		:i $ui_event_block$${			StructQBKey event = menu_add			StructQBKey state = uistate_mainmenu			StructStruct Data			{				StructHeader				{					StructString base_name = "mainmenu"				}			}		}$				:i $assign_new_primary_controller$${StructInt device_num = 0}$		:i $net_autolaunch_spawned$	:i endif	:i endfunction]Script kill_dummy_bg_camera 0x71df7ea7 [	:i $KillCamAnim$${StructQBKey name = dummy_cam_bg}$	:i endfunction]Script restore_dummy_bg_camera 0x2dc549b4 [	:i $kill_dummy_bg_camera$	:i $PlayIGCCam$${		StructQBKey name = dummy_cam_bg		StructQBKey viewport = bg_viewport		StructFloatX3 Pos		{			Floats [-2.80000e+6, 100000, 700000]		}		StructFloatX3 Quat		{			Floats [-0.000720000, -0.997060, -0.0760400]		}		StructFloat FOV = 72.00		StructQBKey Play_hold	}$		:i endfunction]Script get_LevelZoneArray_size a194e3a8 [	:i $GetArraySize$${StructQBString levelzonearray}$	:i $size$ = (%GLOBAL%$array_size$)	:i return $array_size$ = %GLOBAL%$size$	:i endfunction]Script get_LevelZoneArray_checksum 0x0f84c6dc [	:i $GetArraySize$${StructQBString levelzonearray}$	:i if (%GLOBAL%$index$ < %GLOBAL%$array_size$)		:i return $level_checksum$ = (~$levelzonearray$:a{%GLOBAL%$index$:a})	:i endif	:i endfunction]SectionArray debug_checksum_names{	ArrayQBKey	[		largest_desc_id		budget_report_main		budget_report_vram		budget_report_geo		main		vram		underbudget		overbudget		totalsize		slack		heap_cas_vram		assetsizes		budgetsizes		largestpieces		worst_parts		specific_parts		size_kb		custom_character_0		custom_character_1		custom_character_2		custom_character_3		custom_character_4		Script cache small		Script cache big		Script		playerinfoheap		heap_global_scripts		heap_script_pools		heap_hashitem_pool		heap_network		AsyncRenderer		heap_frontend		heap_render_data		heap_lightortho		loadingscreen		heap_massive_ads	]}Script GetCurrentLevel 0x57a14f3d [	:i return $level$ = (~$current_level$)	:i endfunction]Script get_level_prefix df278766 [	:i if $StructureContains$${			StructQBString structure = LevelZones			StructQBString current_level		}$				:i return $prefix$ = (~$LevelZones$->(~$current_level$)->$name$)$prefix_crc$ = (~$LevelZones$->(~$current_level$)->$zone$)	:i endif	:i $printf$${StructQBStringQs fd035b9c}$	:i $printf$${StructQBStringQs fd035b9c}$	:i $printf$${StructQBStringQs c350451a}$	:i $printf$${StructQBStringQs fd035b9c}$	:i $printf$${StructQBStringQs fd035b9c}$	:i return ${		StructString prefix = "z_unknown"		StructQBKey prefix_crc = z_unknown	}$		:i endfunction]Script preqbromid 0x58156875 [	:i $gh_pause_ui$	:i endfunction]Script postqbromid 0x6aa3b8cd [	:i $getplayerinfo$${		StructInt 1		StructQBKey controller		StructQBKey out = device_num	}$		:i $restart_gem_scroller$:s{		:i $starttime$ = (~$current_starttime$)		:i $device_num$ = %GLOBAL%$device_num$	:i :s}	:i endfunction]Script are_replays_enabled 0x3b827a19 [	:i return ${StructQBKey false}$	:i endfunction]Script startrendering 0x65fedeb0 [	${StructInt delay = 4}$	:i $PopDisableRendering$$context$ = $legacy_stop_rendering_script$$type$ = $unchecked$$delay$ = %GLOBAL%$delay$	:i endfunction]Script stoprendering a2bad3a2 [	:i $PushDisableRendering$${		StructQBKey context = legacy_stop_rendering_script		StructQBKey type = unchecked	}$		:i endfunction]Script hide_glitch eecf76f8 [	${Unknown [00012400b8b0217d6969696900000000]}$	:i $spawnscriptnow$$hide_glitch_spawned$$params$ = :s{$num_frames$ = %GLOBAL%$num_frames$:s}	:i endfunction]Script hide_glitch_spawned 0x43f5360d [	${Unknown [00012400b8b0217d6969696900000000]}$	:i $OnExitRun$${StructQBKey hide_glitch_spawned_exit}$	:i $setscriptcannotpause$	:i $PushDisableRendering$${		StructQBKey context = hide_glitch		StructQBKey type = stack	}$		:i $wait$%GLOBAL%$num_frames$$gameframes$	:i endfunction]Script hide_glitch_spawned_exit e3b3dcd4 [	:i $PopDisableRendering$${		StructQBKey context = hide_glitch		StructQBKey type = stack	}$		:i endfunction]Script SpawnScriptDelayed 0x3d80af50 [	:i $GetUnnamedChecksum$	:i $SpawnScriptLater$$SpawnScriptDelayedWorker$$params$ = :s{$ScriptName$ = %GLOBAL%$checksum$$params$ = %GLOBAL%$params$$frames$ = %GLOBAL%$frames$$seconds$ = %GLOBAL%$seconds$:s}	:i endfunction]Script SpawnScriptDelayedWorker 0x2b4f1f0e [	:i if $GotParam$${StructQBKey frames}$		:i $wait$%GLOBAL%$frames$$gameframes$	:i endif	:i if $GotParam$${StructQBKey seconds}$		:i $wait$%GLOBAL%$seconds$$seconds$	:i endif	:i $spawnscriptnow$%GLOBAL%$ScriptName$$params$ = %GLOBAL%$params$	:i endfunction]Script console_debug_create cf41a171 [	:i $debugconsole_display_params$ = :s{		:i $m_back_color$ = :a{%i(190),%i(190),%i(190),%i(100):a}		:i $m_text_color$ = :a{%i(10),%i(255),%i(10),%i(255):a}		:i $m_scroll_btn_color$ = :a{%i(250),%i(250),%i(250),%i(255):a}		:i $m_corner$ = :a{%f(100.0),%f(100.0):a}		:i $m_width$ = %f(800.0)		:i $m_height$ = %f(310.0)		:i $m_text_scale$ = %f(0.5)		:i $m_num_rows$ = %i(12)		:i $m_char_per_row$ = %i(80)		:i $m_animate$ = %i(1)	:i :s}	:i $memory_get_heap_sizes$	:i $dbg_console_heap$ = $heap_debug$	:i if (%GLOBAL%$heap_size_stash$ > %i(10240))		:i if $MemHeapExists$${StructQBKey name = heap_stash}$			:i $dbg_console_heap$ = $heap_stash$		:i endif	:i endif	:i $debugconsole_create_params$ = :s{		:i $m_num_command_history$ = %i(5)		:i $m_history$ = %i(100)		:i $m_toggle_char$ = %s("`")		:i $m_enable$ = %i(0)		:i $m_display$ = %i(0)		:i $m_heap$ = %GLOBAL%$dbg_console_heap$		:i $m_use_thread_safe$ = %i(1)		:i $m_name$ = $debug$	:i :s}	:i $DebugConsoleCreate$$display_params$ = %GLOBAL%$debugconsole_display_params$$create_params$ = %GLOBAL%$debugconsole_create_params$	:i endfunction]Script console_debug_destroy d6be063f [	:i $DebugConsoleDestroy$${StructQBKey name = debug}$	:i endfunction]Script stop_venue_effects ed61809c [	:i if $ScriptExists$${StructQBKey z_Riothouse_Lightning}$		:i $z_Riothouse_Lightning_Kill$		:i $KillSpawnedScript$${StructQBKey name = z_Riothouse_Lightning}$	:i endif	:i if $ScriptExists$${StructQBKey Z_MansionStudio_Ambient_Lightning}$		:i $Z_MansionStudio_CelebIntro_LIGHTNING_SetDark$		:i $KillSpawnedScript$${StructQBKey name = Z_MansionStudio_Ambient_Lightning}$		:i $KillSpawnedScript$${StructQBKey name = Z_MansionStudio_CelebIntro_LIGHTNING}$		:i $KillSpawnedScript$${StructQBKey name = Z_MansionStudio_CelebIntro_LIGHTNING_Four_Flashes}$	:i endif	:i endfunction]Script start_venue_effects e4bb95c6 [	:i if $ScriptExists$${StructQBKey z_Riothouse_Lightning}$		:i $KillSpawnedScript$${StructQBKey name = z_Riothouse_Lightning}$		:i $SpawnScript$${StructQBKey z_Riothouse_Lightning}$	:i endif	:i if $ScriptExists$${StructQBKey Z_MansionStudio_Ambient_Lightning}$		:i $KillSpawnedScript$${StructQBKey name = Z_MansionStudio_Ambient_Lightning}$		:i $SpawnScript$${StructQBKey Z_MansionStudio_Ambient_Lightning}$	:i endif	:i endfunction]Script ensure_current_venue_is_loaded 0x598f2204 [	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i if $GotParam$${StructQBKey pak}$		:i if NOT $StructureContains$${				StructQBString structure = LevelZones				StructQBString current_level			}$						:i $scriptassert$${				StructString 0x00000000 = "No level named %s, check LevelZones in venuelist.q for available levels"				StructQBString s = current_level			}$					:i endif		:i if NOT (%GLOBAL%$pak$ = ((~$LevelZones$->~$current_level$)->$zone$))			:i $PushDisableRendering$${StructQBKey context = ensure_current_venue_is_loaded}$			:i $PushUnsafeForShutdown$${StructQBKey context = ensure_current_venue_is_loaded}$			:i $create_loading_screen$			:i $crowd_system_deinit$			:i $wait_for_deferred_rendering$			:i $venue_system_init$${StructInt block_scripts = 0}$			:i $wait_for_deferred_rendering$			:i $crowd_system_init$			:i $wait_for_deferred_rendering$			:i $destroy_loading_screen$			:i $PopUnsafeForShutdown$${StructQBKey context = ensure_current_venue_is_loaded}$			:i $PopDisableRendering$${StructQBKey context = ensure_current_venue_is_loaded}$		:i endif	:i endif	:i endfunction]