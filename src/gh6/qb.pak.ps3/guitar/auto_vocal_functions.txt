Unknown [1c0000000000000000000e940000000000000000]SectionInteger vocals_current_pitch_midinote 0Script Vocalist_Kill_Spawnscripts fda051b1 [	:i $KillSpawnedScriptsByName$${StructQBKey name = phon_solve_transits}$	:i $KillSpawnedScriptsByName$${StructQBKey name = phon_create_desired_init}$	:i $KillSpawnedScriptsByName$${StructQBKey name = fake_sentance}$	:i $KillSpawnedScriptsByName$${StructQBKey name = phon_timer}$	:i $KillSpawnedScriptsByName$${StructQBKey name = phon_transit}$	:i $KillSpawnedScriptsByName$${StructQBKey name = autovocal_controlscript}$	:i $KillSpawnedScriptsByName$${StructQBKey name = av_face_noise}$	:i $KillSpawnedScriptsByName$${StructQBKey name = av_brow_inflect}$	:i $KillSpawnedScriptsByName$${StructQBKey name = av_pitch_control}$	:i $KillSpawnedScriptsByName$${StructQBKey name = av_mouth_idle}$	:i $KillSpawnedScriptsByName$${StructQBKey name = band_lookat_on}$	:i $KillSpawnedScriptsByName$${StructQBKey name = band_lookat_off}$	:i $KillSpawnedScriptsByName$${StructQBKey name = band_lookat}$	:i $KillSpawnedScriptsByName$${StructQBKey name = AV_Set_Brow}$	:i $KillSpawnedScriptsByName$${StructQBKey name = spawn_auto_vocal_jaw_flap}$	:i $KillSpawnedScriptsByName$${StructQBKey name = auto_vocal_jaw_flap}$	:i $KillSpawnedScriptsByName$${StructQBKey name = Debug_Phons}$	:i $KillSpawnedScriptsByName$${StructQBKey name = graphblendduration}$	:i endfunction]Script Vocalist_Reset_Globals fca11f89 [	:i $Vocalist_Kill_Spawnscripts$	:i $Vocalist_reset_vocalist_anim_tree$	:i $change$${StructInt vocal_note = 0}$	:i $Enable_Tempo$	:i endfunction]Script Vocalist_reset_vocalist_anim_tree cde90364 [	:i $vocalist_Ids$ = :a{		:i $musician1$		:i $musician2$		:i $musician3$		:i $musician4$	:i :a}	:i $index$ = %i(0)	:i while 	:i if $ObjectExists$$id$ = (%GLOBAL%$vocalist_Ids$:a{%GLOBAL%$index$:a})		:i if (%GLOBAL%$vocalist_Ids$:a{%GLOBAL%$index$:a}).$anim_animnodeexists$$id$ = $autovocals_switch$			:i (%GLOBAL%$vocalist_Ids$:a{%GLOBAL%$index$:a}).$anim_command$$target$ = $autovocals_switch$$command$ = $partialswitch_setstate$$params$ = :s{$Off$$blendduration$ = %f(0.0):s}		:i endif	:i endif	:i $index$ = (%GLOBAL%$index$ + %i(1))	:i loop_to %i(4)	:i endfunction]Script init_vocal_arrays f8753dc0 [	:i $Extended_Checksum$ = $somechecksum$	:i $cycle_branch$ = %i(0)	:i while 	:i $channel_maker$ = (%GLOBAL%$cycle_branch$ + %i(1))	:i $extendcrcwithinteger$$checksum$ = $Vocal_AV_$$integer$ = %GLOBAL%$channel_maker$	:i $addchecksumarrayelement$$array$ = %GLOBAL%$channel$$element$ = %GLOBAL%$Extended_Checksum$	:i $channel$ = %GLOBAL%$array$	:i $AddFloatArrayElement$$array$ = %GLOBAL%$AV_Vocal_Cycle$$element$ = %f(0.0)	:i $AV_Vocal_Cycle$ = %GLOBAL%$array$	:i $addchecksumarrayelement$$array$ = %GLOBAL%$Phon_branch$$element$ = $inctive$	:i $Phon_branch$ = %GLOBAL%$array$	:i $AddFloatArrayElement$$array$ = %GLOBAL%$waittime$$element$ = %f(0.0)	:i $waittime$ = %GLOBAL%$array$	:i $AddFloatArrayElement$$array$ = %GLOBAL%$Length$$element$ = %f(0.0)	:i $Length$ = %GLOBAL%$array$	:i $AddFloatArrayElement$$array$ = %GLOBAL%$Init_Length$$element$ = %f(0.0)	:i $Init_Length$ = %GLOBAL%$array$	:i $AddFloatArrayElement$$array$ = %GLOBAL%$blend_duration$$element$ = %f(0.0)	:i $blend_duration$ = %GLOBAL%$array$	:i $AddFloatArrayElement$$array$ = %GLOBAL%$trans_trigger$$element$ = %f(0.0)	:i $trans_trigger$ = %GLOBAL%$array$	:i $addchecksumarrayelement$$array$ = %GLOBAL%$first_pass$$element$ = $false$	:i $first_pass$ = %GLOBAL%$array$	:i $AddFloatArrayElement$$array$ = %GLOBAL%$OldAnimStep$$element$ = %f(0.0)	:i $OldAnimStep$ = %GLOBAL%$array$	:i $addchecksumarrayelement$$array$ = %GLOBAL%$Anim_End$$element$ = $untriggered$	:i $Anim_End$ = %GLOBAL%$array$	:i $cycle_branch$ = (%GLOBAL%$cycle_branch$ + %i(1))	:i loop_to (~$max_Phon_Branches$)	:i return :s{		:i $channel$ = %GLOBAL%$channel$		:i $AV_Vocal_Cycle$ = %GLOBAL%$AV_Vocal_Cycle$		:i $Phon_branch$ = %GLOBAL%$Phon_branch$		:i $waittime$ = %GLOBAL%$waittime$		:i $Length$ = %GLOBAL%$Length$		:i $Init_Length$ = %GLOBAL%$Init_Length$		:i $blend_duration$ = %GLOBAL%$blend_duration$		:i $trans_trigger$ = %GLOBAL%$trans_trigger$		:i $first_pass$ = %GLOBAL%$first_pass$		:i $AV_Vocal_Cycle$ = %GLOBAL%$AV_Vocal_Cycle$		:i $OldAnimStep$ = %GLOBAL%$OldAnimStep$		:i $Anim_End$ = %GLOBAL%$Anim_End$	:i :s}	:i $channel$ = :a{$Vocal_AV_1$:a}	:i $AV_Vocal_Cycle$ = :a{%f(0.0):a}	:i $Phon_branch$ = :a{$active$:a}	:i $waittime$ = :a{%f(0.0):a}	:i $Length$ = :a{%f(0.0):a}	:i $Init_Length$ = :a{%f(0.0):a}	:i $blend_duration$ = :a{%f(0.0):a}	:i $trans_trigger$ = :a{%f(0.0):a}	:i $first_pass$ = :a{$true$:a}	:i $OldAnimStep$ = :a{%f(0.0):a}	:i $Anim_End$ = :a{$untriggered$:a}	:i endfunction]Script fake_sentance 0x5b0b4a9d [	${StructInt debug = 1}$	:i if (%GLOBAL%$newword$ = $true$)		:i $getrandomfloat$${			StructFloat a = 1.00			StructFloat b = 10.00		}$				:i if (%GLOBAL%$random_float$ > %f(2.0))			:i $short$ = %f(10.0)			:i $long$ = %f(300.0)		:i else 			:i $short$ = %f(500.0)			:i $long$ = %f(3000.0)		:i endif		:i $getrandomfloat$$a$ = %GLOBAL%$short$$b$ = %GLOBAL%$long$		:i $wordlength$ = %GLOBAL%$random_float$		:i if (%GLOBAL%$wordlength$ > %f(50.0))			:i $max_syl$ = %f(2.0)		:i elseif (%GLOBAL%$wordlength$ > %f(100.0))			:i $max_syl$ = %f(3.0)		:i elseif (%GLOBAL%$wordlength$ > %f(150.0))			:i $max_syl$ = %f(4.0)		:i else 			:i $max_syl$ = %f(1.0)		:i endif		:i $newword$ = $false$		:i $getrandomfloat$$a$ = %f(1.0)$b$ = %GLOBAL%$max_syl$		:i $word$ = %GLOBAL%$random_float$	:i endif	:i $getrandomfloat$${		StructFloat a = 0.800000011920929		StructFloat b = 1.2000000476837158	}$		:i $Next_Phon_Length$ = (%GLOBAL%$wordlength$ * %GLOBAL%$random_float$)	:i if (%GLOBAL%$sentance$ > %i(1))		:i if (%GLOBAL%$word$ > %f(1.0))			:i $getrandomfloat$${				StructFloat a = 1.00				StructFloat b = 10.00			}$						:i $randomDistance$ = %GLOBAL%$random_float$			:i $wordlength$ = (%GLOBAL%$wordlength$ - (%GLOBAL%$wordlength$ / %GLOBAL%$word$))			:i $word$ = (%GLOBAL%$word$%f(-1.0))		:i else 			:i $getrandomfloat$${				StructFloat a = 50.00				StructFloat b = 300.00			}$						:i $randomDistance$ = %GLOBAL%$random_float$			:i $newword$ = $true$			:i $sentance$ = (%GLOBAL%$sentance$%i(4294967295))		:i endif	:i else 		:i $newword$ = $true$		:i $getrandomfloat$${			StructFloat a = 500.00			StructFloat b = 5000.00		}$				:i $randomDistance$ = %GLOBAL%$random_float$		:i $GetRandomInteger$${			StructInt a = 8			StructInt b = 15		}$				:i $sentance$ = %GLOBAL%$random_integer$	:i endif	:i $Next_Phon_Distance$ = %GLOBAL%$randomDistance$	:i while 	:i $GetRandomInteger$${		StructInt a = 1		StructInt b = 22	}$		:i $randomphon$ = %GLOBAL%$random_integer$	:i if (%GLOBAL%$randomphon$ !== %GLOBAL%$old_set$)		:i continue	:i endif	:i loop_to 	:i $fake_speed$ = %f(1.0)	:i $Next_Phon_Length$ = (%GLOBAL%$Next_Phon_Length$ * %GLOBAL%$fake_speed$)	:i $Next_Phon_Distance$ = (%GLOBAL%$Next_Phon_Distance$ * %GLOBAL%$fake_speed$)	:i return :s{		:i $Next_Phon_Length$ = %GLOBAL%$Next_Phon_Length$		:i $Next_Phon_Distance$ = %GLOBAL%$Next_Phon_Distance$		:i $randomphon$ = %GLOBAL%$randomphon$		:i $sentance$ = %GLOBAL%$sentance$		:i $newword$ = %GLOBAL%$newword$		:i $word$ = %GLOBAL%$word$		:i $wordlength$ = %GLOBAL%$wordlength$	:i :s}	:i $randomDistance$ = %f(0.0)	:i $randomphon$ = %i(0)	:i $old_set$ = %i(0)	:i $Next_Phon_Distance$ = %f(0.0)	:i $randomword$ = %f(0.0)	:i endfunction]Script phon_create_desired_init 0x281ba5b5 [	:i $neutral_Init1$ = ((~$neutral_phon$) * (~$Phon_init_point$))	:i $neutral_Init2$ = ((~$neutral_phon$) * ((~$phon_Sweet_Start$) - (~$Phon_init_point$)))	:i $extracted_length$ = ((%i(1) / ((~$phon_Sweet_End$) - (~$phon_Sweet_Start$))) * %GLOBAL%$Length$)	:i if (%GLOBAL%$extracted_length$ < ~$fastest_phon$)		:i $extracted_length$ = (~$fastest_phon$)	:i endif	:i $extracted_length$ = (%GLOBAL%$extracted_length$ * ((~$phon_Sweet_Start$) - (~$Phon_init_point$)))	:i $Desired_Init_Length$ = (%GLOBAL%$neutral_Init1$ + ((%GLOBAL%$extracted_length$ + %GLOBAL%$neutral_Init2$) * %f(0.5)))	:i return $Desired_Init_Length$ = %GLOBAL%$Desired_Init_Length$	:i $Length$ = %f(0.0)	:i endfunction]Script phon_solve_transits 0x031a3997 [	${Unknown [00012500fb23d8846969696900000018000125003527a90e69696969000000280001260085bf970a696969690000003800012500fc70461b69696969000000480001250089210636696969690000005800012500af825e0d6969696900000000]}$	:i $Max_Blend_for_Distance$ = (~$Phon_longest_Init$)	:i if (%GLOBAL%$current_Phon_Length$ < %GLOBAL%$Next_Phon_Length$)		:i $Max_Blend_For_Length$ = (%GLOBAL%$current_Phon_Length$ * %f(2.0))	:i else 		:i $Max_Blend_For_Length$ = (%GLOBAL%$Next_Phon_Length$ * %f(2.0))	:i endif	:i if (%GLOBAL%$Max_Blend_For_Length$ > %GLOBAL%$Max_Blend_for_Distance$)		:i $Max_Blend_For_Length$ = %GLOBAL%$Max_Blend_for_Distance$	:i elseif (%GLOBAL%$Max_Blend_For_Length$ < %f(0.0))		:i $Max_Blend_For_Length$ = %f(0.0)	:i endif	:i if (%GLOBAL%$Next_Phon_Distance$ > %GLOBAL%$Max_Blend_for_Distance$)		:i $trans_trigger$ = %f(0.0)		:i $blend_dur_factor$ = (((%GLOBAL%$Next_Phon_Distance$) - %GLOBAL%$Max_Blend_for_Distance$) / %GLOBAL%$Max_Blend_for_Distance$)		:i if (%GLOBAL%$blend_dur_factor$ > %f(1.0))			:i $blend_dur_factor$ = %f(1.0)		:i endif		:i $min$ = (~$Phon_Min_Blend_Duration$)		:i $max$ = (%GLOBAL%$Max_Blend_for_Distance$ / %f(1000.0))		:i $trans_trigger$ = %f(0.0)		:i $blend_duration$ = (((%GLOBAL%$blend_dur_factor$) * (%GLOBAL%$min$)) + ((%i(1) - %GLOBAL%$blend_dur_factor$) * (%GLOBAL%$max$)))	:i else 		:i $critical_blend$ = (%i(1) - (%GLOBAL%$Next_Phon_Distance$ / %GLOBAL%$Max_Blend_for_Distance$))		:i $Max_Blend_For_Length$ = (%GLOBAL%$Max_Blend_For_Length$ * %GLOBAL%$critical_blend$)		:i $trans_trigger$ = (%GLOBAL%$Max_Blend_For_Length$ * %f(0.5))		:i if (%GLOBAL%$trans_trigger$ > %GLOBAL%$current_Phon_Length$)			:i $trans_trigger$ = %GLOBAL%$current_Phon_Length$		:i endif		:i $blend_duration$ = ((%GLOBAL%$Max_Blend_For_Length$ + %GLOBAL%$Next_Phon_Distance$) / %f(1000.0))	:i endif	:i $obtain_anims_from_phon$$Phon$ = %GLOBAL%$Next_Phon$	:i $Max_Extra_Blend$ = %f(0.1500000)	:i $Extra_Blend$ = (%GLOBAL%$Current_Extra_Blend_Factor$ * %GLOBAL%$Max_Extra_Blend$)	:i if (%GLOBAL%$Current_Phon_Distance_Extra$ > (%GLOBAL%$Extra_Blend$ * %f(1000.0)))		:i $Extra_Blend$ = %GLOBAL%$Extra_Blend$	:i else 		:i $Extra_Blend$ = (%GLOBAL%$Current_Phon_Distance_Extra$ / %f(1000.0))	:i endif	:i $trans_trigger$ = (%GLOBAL%$trans_trigger$ + (%GLOBAL%$Extra_Blend$ * %f(1000.0)))	:i $blend_duration$ = (%GLOBAL%$blend_duration$ + %GLOBAL%$Extra_Blend$)	:i $Max_Extra_Blend$ = %f(0.0)	:i $Extra_Blend$ = (%GLOBAL%$Next_Extra_Blend_Factor$ * %GLOBAL%$Max_Extra_Blend$)	:i $blend_duration$ = (%GLOBAL%$blend_duration$ + %GLOBAL%$Extra_Blend$)	:i return $trans_trigger_X$ = %GLOBAL%$trans_trigger$$Next_Blend_Duration$ = %GLOBAL%$blend_duration$$Next_Extra_Blend_Factor$ = %GLOBAL%$Next_Extra_Blend_Factor$$Next_Phon_anim_Closed$ = %GLOBAL%$Next_Phon_anim_Closed$$Next_Phon_anim_Open$ = %GLOBAL%$Next_Phon_anim_Open$	:i $Current_Phon_Distance_Extra$ = %f(0.0)	:i $Next_Phon_Distance$ = %f(0.0)	:i $current_Phon_Length$ = %f(0.0)	:i $Next_Phon_Length$ = %f(0.0)	:i $max_overlap$ = %f(0.0)	:i $max$ = %f(0.0)	:i $extra_blend_potential$ = %f(0.0)	:i $Current_Extra_Blend_Factor$ = %f(0.0)	:i $Next_Extra_Blend_Factor$ = %f(0.0)	:i $Next_Phon_anim_Closed$ = $someanim$	:i $Next_Phon_anim_Open$ = $someanim$	:i endfunction]Script obtain_anims_from_phon e2618540 [	${Unknown [00012600bb2f21d06969696900000000]}$	:i switch %GLOBAL%$Phon$		:i case $eh$			:i $Next_Phon_anim_Closed$ = $gh_av_male_eh_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_eh_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $Th$			:i $Next_Phon_anim_Closed$ = $gh_av_male_th_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_th_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $Dh$			:i $Next_Phon_anim_Closed$ = $gh_av_male_dh_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_dh_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $MBP$			:i $Next_Phon_anim_Closed$ = $gh_av_male_mbp_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_mbp_open$			:i $Next_Extra_Blend_Factor$ = %f(0.0)			:i endcase		case $Oo$			:i $Next_Phon_anim_Closed$ = $gh_av_male_oo_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_oo_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $aa$			:i $Next_Phon_anim_Closed$ = $gh_av_male_aa_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_aa_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $a$			:i $Next_Phon_anim_Closed$ = $gh_av_male_a_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_a_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $r$			:i $Next_Phon_anim_Closed$ = $gh_av_male_r_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_r_open$			:i $Next_Extra_Blend_Factor$ = %f(0.2000000)			:i endcase		case $Oh$			:i $Next_Phon_anim_Closed$ = $gh_av_male_oh_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_oh_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $Uh$			:i $Next_Phon_anim_Closed$ = $gh_av_male_uh_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_uh_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $FV$			:i $Next_Phon_anim_Closed$ = $gh_av_male_fv_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_fv_open$			:i $Next_Extra_Blend_Factor$ = %f(0.2000000)			:i endcase		case $Ai$			:i $Next_Phon_anim_Closed$ = $gh_av_male_ai_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_ai_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $sh$			:i $Next_Phon_anim_Closed$ = $gh_av_male_sh_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_sh_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $Eee$			:i $Next_Phon_anim_Closed$ = $gh_av_male_eee_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_eee_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $eh$			:i $Next_Phon_anim_Closed$ = $gh_av_male_eh_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_eh_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $l$			:i $Next_Phon_anim_Closed$ = $gh_av_male_l_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_l_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $k$			:i $Next_Phon_anim_Closed$ = $gh_av_male_k_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_k_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $s$			:i $Next_Phon_anim_Closed$ = $gh_av_male_s_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_s_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $y$			:i $Next_Phon_anim_Closed$ = $gh_av_male_y_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_y_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $DN$			:i $Next_Phon_anim_Closed$ = $gh_av_male_dn_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_dn_open$			:i $Next_Extra_Blend_Factor$ = %f(1.2000000)			:i endcase		case $w$			:i $Next_Phon_anim_Closed$ = $gh_av_male_w_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_w_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $Ow$			:i $Next_Phon_anim_Closed$ = $gh_av_male_ow_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_ow_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		case $Oi$			:i $Next_Phon_anim_Closed$ = $gh_av_male_oi_closed$			:i $Next_Phon_anim_Open$ = $gh_av_male_oi_open$			:i $Next_Extra_Blend_Factor$ = %f(1.0)			:i endcase		default 			:i $Next_Phon_anim_Closed$ = $gh_rocker_male_default$			:i $Next_Phon_anim_Open$ = $gh_rocker_male_default$			:i $Next_Extra_Blend_Factor$ = %f(1.0)	:i end_switch	:i return $Next_Phon_anim_Closed$ = %GLOBAL%$Next_Phon_anim_Closed$$Next_Phon_anim_Open$ = %GLOBAL%$Next_Phon_anim_Open$$Next_Extra_Blend_Factor$ = %GLOBAL%$Next_Extra_Blend_Factor$	:i endfunction]Script check_for_vocalists b9dad992 [	:i $array$ = :a{:a}	:i $num_vocalists$ = %i(0)	:i $musician_id$ = $musician1$	:i $musician_info$ = $musician1_info$	:i $index$ = %i(0)	:i while 	:i switch %GLOBAL%$index$		:i case %i(0)			:i $musician_id$ = $musician1$			:i $musician_info$ = $musician1_info$			:i endcase		case %i(1)			:i $musician_id$ = $musician2$			:i $musician_info$ = $musician2_info$			:i endcase		case %i(2)			:i $musician_id$ = $musician3$			:i $musician_info$ = $musician3_info$			:i endcase		case %i(3)			:i $musician_id$ = $musician4$			:i $musician_info$ = $musician4_info$	:i end_switch	:i if (~%GLOBAL%$musician_info$->$part$ = $Vocals$)		:i $addchecksumarrayelement$$array$ = %GLOBAL%$array$$element$ = %GLOBAL%$musician_id$		:i $num_vocalists$ = (%GLOBAL%$num_vocalists$ + %i(1))		:i if (%GLOBAL%$num_vocalists$ >= ~$Number_vocalists_Created$)			:i continue		:i endif	:i endif	:i $index$ = (%GLOBAL%$index$ + %i(1))	:i loop_to %i(4)	:i if (%GLOBAL%$num_vocalists$ > %i(0))		:i return $true$$vocalist_Ids$ = %GLOBAL%$array$$num_vocalists$ = %GLOBAL%$num_vocalists$	:i else 		:i return ${StructQBKey false}$	:i endif	:i endfunction]Script graphblendduration 0x0678093d [	:i while 	:i $getsongtimems$${StructQBString time_offset = Vocals_offset}$	:i if (%GLOBAL%$time$ > %GLOBAL%$Next_Phon_Time$)		:i if (%GLOBAL%$time$ > (%GLOBAL%$Next_Phon_Time$ + %GLOBAL%$Next_Phon_Length$))			:i continue		:i else 			:i $generic_graph_printer$$graphme$ = %GLOBAL%$graphvalue$		:i endif	:i else 	:i endif	:i $WaitOneGameFrame$	:i loop_to 	:i endfunction]SectionFloat global_blend_duration 0.00000Script Debug_Phons ea507369 [	:i $spawnscriptnow$$graphblendduration$$params$ = :s{		:i $graphvalue$ = (~$global_blend_duration$)		:i $Next_Phon_Length$ = %GLOBAL%$Next_Phon_Length$		:i $Next_Phon_Time$ = %GLOBAL%$Next_Phon_Time$		:i $channel$ = $mydebug$	:i :s}	:i $change$$global_blend_duration$ = ((~$global_blend_duration$) + %f(0.2000000))	:i if ((~$global_blend_duration$) > %f(1.0))		:i $change$$global_blend_duration$ = ((~$global_blend_duration$)%f(-1.0))	:i endif	:i endfunction]