Unknown [1c000000000000000000c6e40000000000000000]SectionFloat whammy_units_per_second 6.35000SectionFloat prefretbar_time 0.00000SectionQBKey current_startup_script nothingSectionQBKey current_exit_script nothingSectionFloat minimum_transition_load_time 0.00000SectionInteger finished_gig_band_rebuild 0SectionInteger start_gem_scroller_running 0SectionInteger g_gem_scrollers_are_go 1SectionInteger num_song_columns 2SectionArray gem_colors{	ArrayQBKey	[		green		red		yellow		blue		orange		white	]}SectionArray gem_colors_text{	ArrayString	[		"green"		"red"		"yellow"		"blue"		"orange"		"white"	]}SectionArray scripts_array{	ArrayStruct	[		StructHeader		{			StructString name = "scripts"			StructInt lead_ms = 0		}		StructHeader		{			StructString name = "anim"			StructInt lead_ms = 0		}		StructHeader		{			StructString name = "cameras"			StructInt lead_ms = 0		}		StructHeader		{			StructString name = "lightshow"			StructQBString lead_ms = lightshow_offset_ms		}		StructHeader		{			StructString name = "crowd"			StructInt lead_ms = 0		}		StructHeader		{			StructString name = "performance"			StructInt lead_ms = 0		}		StructHeader		{			StructString name = "facial"			StructInt lead_ms = 0		}		]}SectionFloat fretbar_end_scale 0.480000SectionString dlc_songpak_spec "b%i%s_song.pak"SectionArray button_models{	ArrayStruct	[		StructHeader		{			StructStruct green			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Green					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Green					StructQBKey star_material = Mat_Gem_Star_Green					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Green					StructQBKey whammy_material = Mat_Whammy_Green					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Green					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Green					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Green					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Green					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Green					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Green					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Green					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Green					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Green					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Green					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Green					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Green					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Green					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Green					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Green					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Green					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_g				}			}			StructStruct red			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Red					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Red					StructQBKey star_material = Mat_Gem_Star_Red					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Red					StructQBKey whammy_material = Mat_Whammy_Red					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Red					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Red					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Red					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Red					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Red					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Red					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Red					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Red					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Red					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Red					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Red					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Red					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Red					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Red					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Red					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Red					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_r				}			}			StructStruct yellow			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Yellow					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Yellow					StructQBKey star_material = Mat_Gem_Star_Yellow					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Yellow					StructQBKey whammy_material = Mat_Whammy_Yellow					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Yellow					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Yellow					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Yellow					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Yellow					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Yellow					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Yellow					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Yellow					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Yellow					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Yellow					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Yellow					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Yellow					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Yellow					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Yellow					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Yellow					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Yellow					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Yellow					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_y				}			}			StructStruct blue			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Blue					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Blue					StructQBKey star_material = Mat_Gem_Star_Blue					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Blue					StructQBKey whammy_material = Mat_Whammy_Blue					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Blue					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Blue					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Blue					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Blue					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Blue					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Blue					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Blue					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Blue					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Blue					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Blue					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Blue					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Blue					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Blue					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Blue					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Blue					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Blue					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_b				}			}			StructStruct orange			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Orange					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Orange					StructQBKey star_material = Mat_Gem_Star_Orange					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Orange					StructQBKey whammy_material = Mat_Whammy_Orange					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Orange					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Orange					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Orange					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Orange					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Orange					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Orange					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Orange					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Orange					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Orange					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Orange					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Orange					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Orange					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Orange					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Orange					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Orange					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Orange					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_o				}			}			StructStruct white			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Open					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Open					StructQBKey star_material = Mat_Gem_Star_Open					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Open					StructQBKey whammy_material = Mat_Whammy_OpenNote					StructQBKey star_power_material = Mat_Gem_Open_SP					StructQBKey star_power_star_material = Mat_Gem_Star_Open_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_Open_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_Open_SP					StructQBKey star_power_whammy_material = Mat_Whammy_OpenNote_SP					StructQBKey gem_deadnote_material = Mat_Gem_Open_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Open_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Open_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Open_Dead					StructQBKey gem_deadnote_band_moment_hammer_material = Mat_Gem_Hammer_Band_Moment_Open_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Open					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_Open_SP					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Open					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_Open_SP					StructQBKey gem_material_drum = Mat_Gem_Drum_Kick					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Kick					StructQBKey star_power_material_drum = Mat_Gem_Drum_Kick_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_Kick_SP					StructQBKey whammy_material_drum = Mat_Whammy_Kick					StructQBKey star_power_whammy_material_drum = Mat_Whammy_Kick					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Kick_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Kick_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Drum_Band_Moment_kick_Dead					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_kick					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_kick_SP					StructQBKey gem_band_moment_whammy = Mat_Placeholder					StructQBKey gem_material_beginner = Mat_Gem_Kid					StructQBKey star_material_beginner = Mat_Gem_Star_Kid					StructQBKey star_power_material_beginner = Mat_Gem_Kid_SP					StructQBKey star_power_star_material_beginner = Mat_Gem_Star_Kid_SP					StructQBKey gem_band_moment_material_beginner = Mat_Gem_Band_Moment_Kid					StructQBKey star_power_band_moment_material_beginner = Mat_Gem_Band_Moment_Kid_SP					StructQBKey gem_deadnote_material_beginner = Mat_Gem_Kid_Dead					StructQBKey star_deadnote_material_beginner = Mat_Gem_Star_Kid_Dead					StructQBKey gem_band_moment_material_tapping = Mat_Placeholder					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey solo_material = Mat_Placeholder					StructQBKey solo_star_material = Mat_Placeholder					StructQBKey solo_star_power_material = Mat_Placeholder					StructQBKey solo_star_power_star_material = Mat_Placeholder					StructQBKey solo_whammy_material = Mat_Placeholder					StructQBKey solo_whammy_star_material = Mat_Placeholder					StructQBKey star_power_material_band_moment_tapping = Mat_Placeholder					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Placeholder					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey name = button_b				}			}		}		StructHeader		{			StructStruct green			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Green					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Green					StructQBKey star_material = Mat_Gem_Star_Green					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Green					StructQBKey whammy_material = Mat_Whammy_Green					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Green					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Green					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Green					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Green					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Green					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Green					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Green					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Green					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Green					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Green					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Green					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Green					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Green					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Green					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Green					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Green					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_g				}			}			StructStruct red			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Red					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Red					StructQBKey star_material = Mat_Gem_Star_Red					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Red					StructQBKey whammy_material = Mat_Whammy_Red					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Red					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Red					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Red					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Red					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Red					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Red					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Red					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Red					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Red					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Red					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Red					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Red					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Red					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Red					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Red					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Red					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_r				}			}			StructStruct yellow			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Yellow					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Yellow					StructQBKey star_material = Mat_Gem_Star_Yellow					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Yellow					StructQBKey whammy_material = Mat_Whammy_Yellow					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Yellow					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Yellow					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Yellow					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Yellow					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Yellow					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Yellow					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Yellow					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Yellow					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Yellow					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Yellow					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Yellow					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Yellow					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Yellow					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Yellow					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Yellow					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Yellow					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_y				}			}			StructStruct blue			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Blue					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Blue					StructQBKey star_material = Mat_Gem_Star_Blue					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Blue					StructQBKey whammy_material = Mat_Whammy_Blue					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Blue					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Blue					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Blue					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Blue					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Blue					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Blue					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Blue					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Blue					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Blue					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Blue					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Blue					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Blue					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Blue					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Blue					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Blue					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Blue					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_b				}			}			StructStruct orange			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Orange					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Orange					StructQBKey star_material = Mat_Gem_Star_Orange					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Orange					StructQBKey whammy_material = Mat_Whammy_Orange					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Orange					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Orange					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Orange					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Orange					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Orange					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Orange					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Orange					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Orange					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Orange					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Orange					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Orange					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Orange					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Orange					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Orange					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Orange					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Orange					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_o				}			}			StructStruct white			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Open					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Open					StructQBKey star_material = Mat_Gem_Star_Open					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Open					StructQBKey whammy_material = Mat_Whammy_OpenNote					StructQBKey star_power_material = Mat_Gem_Open_SP					StructQBKey star_power_star_material = Mat_Gem_Star_Open_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_Open_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_Open_SP					StructQBKey star_power_whammy_material = Mat_Whammy_OpenNote_SP					StructQBKey gem_deadnote_material = Mat_Gem_Open_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Open_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Open_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Open_Dead					StructQBKey gem_deadnote_band_moment_hammer_material = Mat_Gem_Hammer_Band_Moment_Open_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Open					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_Open_SP					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Open					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_Open_SP					StructQBKey gem_material_drum = Mat_Gem_Drum_Kick					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Kick					StructQBKey star_power_material_drum = Mat_Gem_Drum_Kick_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_Kick_SP					StructQBKey whammy_material_drum = Mat_Whammy_Kick					StructQBKey star_power_whammy_material_drum = Mat_Whammy_Kick					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Kick_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Kick_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Drum_Band_Moment_kick_Dead					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_kick					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_kick_SP					StructQBKey gem_band_moment_whammy = Mat_Placeholder					StructQBKey gem_material_beginner = Mat_Gem_Kid					StructQBKey star_material_beginner = Mat_Gem_Star_Kid					StructQBKey star_power_material_beginner = Mat_Gem_Kid_SP					StructQBKey star_power_star_material_beginner = Mat_Gem_Star_Kid_SP					StructQBKey gem_band_moment_material_beginner = Mat_Gem_Band_Moment_Kid					StructQBKey star_power_band_moment_material_beginner = Mat_Gem_Band_Moment_Kid_SP					StructQBKey gem_deadnote_material_beginner = Mat_Gem_Kid_Dead					StructQBKey star_deadnote_material_beginner = Mat_Gem_Star_Kid_Dead					StructQBKey gem_band_moment_material_tapping = Mat_Placeholder					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey solo_material = Mat_Placeholder					StructQBKey solo_star_material = Mat_Placeholder					StructQBKey solo_star_power_material = Mat_Placeholder					StructQBKey solo_star_power_star_material = Mat_Placeholder					StructQBKey solo_whammy_material = Mat_Placeholder					StructQBKey solo_whammy_star_material = Mat_Placeholder					StructQBKey star_power_material_band_moment_tapping = Mat_Placeholder					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Placeholder					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey name = button_b				}			}		}		StructHeader		{			StructStruct green			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Green					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Green					StructQBKey star_material = Mat_Gem_Star_Green					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Green					StructQBKey whammy_material = Mat_Whammy_Green					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Green					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Green					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Green					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Green					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Green					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Green					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Green					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Green					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Green					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Green					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Green					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Green					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Green					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Green					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Green					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Green					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_g				}			}			StructStruct red			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Red					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Red					StructQBKey star_material = Mat_Gem_Star_Red					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Red					StructQBKey whammy_material = Mat_Whammy_Red					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Red					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Red					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Red					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Red					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Red					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Red					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Red					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Red					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Red					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Red					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Red					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Red					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Red					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Red					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Red					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Red					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_r				}			}			StructStruct yellow			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Yellow					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Yellow					StructQBKey star_material = Mat_Gem_Star_Yellow					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Yellow					StructQBKey whammy_material = Mat_Whammy_Yellow					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Yellow					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Yellow					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Yellow					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Yellow					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Yellow					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Yellow					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Yellow					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Yellow					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Yellow					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Yellow					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Yellow					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Yellow					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Yellow					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Yellow					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Yellow					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Yellow					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_y				}			}			StructStruct blue			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Blue					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Blue					StructQBKey star_material = Mat_Gem_Star_Blue					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Blue					StructQBKey whammy_material = Mat_Whammy_Blue					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Blue					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Blue					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Blue					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Blue					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Blue					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Blue					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Blue					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Blue					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Blue					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Blue					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Blue					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Blue					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Blue					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Blue					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Blue					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Blue					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_b				}			}			StructStruct orange			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Orange					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Orange					StructQBKey star_material = Mat_Gem_Star_Orange					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Orange					StructQBKey whammy_material = Mat_Whammy_Orange					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Orange					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Orange					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Orange					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Orange					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Orange					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Orange					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Orange					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Orange					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Orange					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Orange					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Orange					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Orange					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Orange					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Orange					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Orange					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Orange					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_o				}			}			StructStruct white			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Open					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Open					StructQBKey star_material = Mat_Gem_Star_Open					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Open					StructQBKey whammy_material = Mat_Whammy_OpenNote					StructQBKey star_power_material = Mat_Gem_Open_SP					StructQBKey star_power_star_material = Mat_Gem_Star_Open_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_Open_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_Open_SP					StructQBKey star_power_whammy_material = Mat_Whammy_OpenNote_SP					StructQBKey gem_deadnote_material = Mat_Gem_Open_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Open_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Open_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Open_Dead					StructQBKey gem_deadnote_band_moment_hammer_material = Mat_Gem_Hammer_Band_Moment_Open_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Open					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_Open_SP					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Open					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_Open_SP					StructQBKey gem_material_drum = Mat_Gem_Drum_Kick					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Kick					StructQBKey star_power_material_drum = Mat_Gem_Drum_Kick_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_Kick_SP					StructQBKey whammy_material_drum = Mat_Whammy_Kick					StructQBKey star_power_whammy_material_drum = Mat_Whammy_Kick					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Kick_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Kick_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Drum_Band_Moment_kick_Dead					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_kick					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_kick_SP					StructQBKey gem_band_moment_whammy = Mat_Placeholder					StructQBKey gem_material_beginner = Mat_Gem_Kid					StructQBKey star_material_beginner = Mat_Gem_Star_Kid					StructQBKey star_power_material_beginner = Mat_Gem_Kid_SP					StructQBKey star_power_star_material_beginner = Mat_Gem_Star_Kid_SP					StructQBKey gem_band_moment_material_beginner = Mat_Gem_Band_Moment_Kid					StructQBKey star_power_band_moment_material_beginner = Mat_Gem_Band_Moment_Kid_SP					StructQBKey gem_deadnote_material_beginner = Mat_Gem_Kid_Dead					StructQBKey star_deadnote_material_beginner = Mat_Gem_Star_Kid_Dead					StructQBKey gem_band_moment_material_tapping = Mat_Placeholder					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey solo_material = Mat_Placeholder					StructQBKey solo_star_material = Mat_Placeholder					StructQBKey solo_star_power_material = Mat_Placeholder					StructQBKey solo_star_power_star_material = Mat_Placeholder					StructQBKey solo_whammy_material = Mat_Placeholder					StructQBKey solo_whammy_star_material = Mat_Placeholder					StructQBKey star_power_material_band_moment_tapping = Mat_Placeholder					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Placeholder					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey name = button_b				}			}		}		StructHeader		{			StructStruct green			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Green					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Green					StructQBKey star_material = Mat_Gem_Star_Green					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Green					StructQBKey whammy_material = Mat_Whammy_Green					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Green					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Green					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Green					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Green					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Green					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Green					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Green					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Green					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Green					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Green					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Green					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Green					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Green					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Green					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Green					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Green					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_g				}			}			StructStruct red			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Red					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Red					StructQBKey star_material = Mat_Gem_Star_Red					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Red					StructQBKey whammy_material = Mat_Whammy_Red					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Red					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Red					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Red					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Red					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Red					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Red					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Red					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Red					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Red					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Red					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Red					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Red					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Red					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Red					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Red					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Red					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_r				}			}			StructStruct yellow			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Yellow					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Yellow					StructQBKey star_material = Mat_Gem_Star_Yellow					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Yellow					StructQBKey whammy_material = Mat_Whammy_Yellow					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Yellow					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Yellow					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Yellow					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Yellow					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Yellow					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Yellow					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Yellow					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Yellow					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Yellow					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Yellow					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Yellow					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Yellow					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Yellow					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Yellow					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Yellow					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Yellow					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_y				}			}			StructStruct blue			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Blue					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Blue					StructQBKey star_material = Mat_Gem_Star_Blue					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Blue					StructQBKey whammy_material = Mat_Whammy_Blue					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Blue					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Blue					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Blue					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Blue					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Blue					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Blue					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Blue					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Blue					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Blue					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Blue					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Blue					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Blue					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Blue					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Blue					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Blue					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Blue					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_b				}			}			StructStruct orange			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Orange					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Orange					StructQBKey star_material = Mat_Gem_Star_Orange					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Orange					StructQBKey whammy_material = Mat_Whammy_Orange					StructQBKey star_power_material = Mat_Gem_SP					StructQBKey star_power_star_material = Mat_Gem_Star_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_SP					StructQBKey star_power_whammy_material = Mat_Whammy_SP					StructQBKey solo_material = Mat_Gem_Tapping_Orange					StructQBKey solo_star_material = Mat_Gem_Star_Tapping_Orange					StructQBKey solo_star_power_material = Mat_Gem_Tapping_SP					StructQBKey solo_star_power_star_material = Mat_Gem_Star_Tapping_SP					StructQBKey solo_whammy_material = Mat_Whammy_Tapping_Orange					StructQBKey solo_whammy_star_material = Mat_Whammy_Tapping_SP					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_material_drum = Mat_Gem_Drum_Orange					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Orange					StructQBKey star_power_material_drum = Mat_Gem_Drum_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_SP					StructQBKey whammy_material_drum = Mat_Whammy_Orange					StructQBKey star_power_whammy_material_drum = Mat_Whammy_SP					StructQBKey gem_material_drum_accent = Mat_Gem_Drum_Accent_Orange					StructQBKey star_material_drum_accent = Mat_Gem_Drum_Star_Accent_Orange					StructQBKey star_power_material_drum_accent = Mat_Gem_Drum_Accent_SP					StructQBKey star_power_star_material_drum_accent = Mat_Gem_Drum_Star_Accent_SP					StructQBKey gem_deadnote_material = Mat_Gem_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Dead					StructQBKey solo_deadnote_material = Mat_Gem_Tapping_Dead					StructQBKey solo_star_deadnote_material = Mat_Gem_Star_Tapping_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Dead					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Dead					StructQBKey gem_deadnote_material_drum_accent = Mat_Gem_Drum_Accent_Dead					StructQBKey star_deadnote_material_drum_accent = Mat_Gem_Drum_Star_Accent_Dead					StructQBKey gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Dead					StructQBKey gem_deadnote_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Deadnote					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_SP					StructQBKey star_power_material_band_moment_tapping = Mat_Gem_Tapping_Band_Moment_SP					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_SP					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Gem_Drum_Band_Moment_ghost_SP					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Orange					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_Orange					StructQBKey gem_band_moment_material_drum_accent = Mat_Gem_Drum_Accent_Band_Moment_Orange					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Orange					StructQBKey gem_band_moment_material_tapping = Mat_Gem_Tapping_Band_Moment_Orange					StructQBKey gem_band_moment_whammy = Mat_Whammy_Dead					StructQBKey ghost_gem_material_drum = Mat_Gem_Drum_Ghost_Orange					StructQBKey ghost_star_material_drum = Mat_Gem_Drum_Star_Ghost_Orange					StructQBKey ghost_star_power_material_drum = Mat_Gem_Drum_Ghost_SP					StructQBKey ghost_star_power_star_material_drum = Mat_Gem_Drum_Star_Ghost_SP					StructQBKey ghost_gem_deadnote_material_drum = Mat_Gem_Drum_Ghost_Dead					StructQBKey ghost_star_deadnote_material_drum = Mat_Gem_Drum_Star_Ghost_Dead					StructQBKey ghost_gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Orange					StructQBKey ghost_gem_deadnote_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_ghost_Dead					StructQBKey name = button_o				}			}			StructStruct white			{				StructHeader				{					StructQBKey gem_material = Mat_Gem_Open					StructQBKey gem_hammer_material = Mat_Gem_Hammer_Open					StructQBKey star_material = Mat_Gem_Star_Open					StructQBKey star_hammer_material = Mat_Gem_Star_Hammer_Open					StructQBKey whammy_material = Mat_Whammy_OpenNote					StructQBKey star_power_material = Mat_Gem_Open_SP					StructQBKey star_power_star_material = Mat_Gem_Star_Open_SP					StructQBKey star_power_hammer_star_material = Mat_Gem_Star_Hammer_Open_SP					StructQBKey star_power_hammer_material = Mat_Gem_Hammer_Open_SP					StructQBKey star_power_whammy_material = Mat_Whammy_OpenNote_SP					StructQBKey gem_deadnote_material = Mat_Gem_Open_Dead					StructQBKey star_deadnote_material = Mat_Gem_Star_Open_Dead					StructQBKey gem_deadnote_material_hammer_on = Mat_Gem_Hammer_Open_Dead					StructQBKey star_deadnote_hammer_material = Mat_Gem_Star_Hammer_Open_Dead					StructQBKey gem_deadnote_band_moment_hammer_material = Mat_Gem_Hammer_Band_Moment_Open_Dead					StructQBKey dead_whammy = Mat_Whammy_Dead					StructQBKey gem_band_moment_material = Mat_Gem_Band_Moment_Open					StructQBKey star_power_material_band_moment = Mat_Gem_Band_Moment_Open_SP					StructQBKey gem_band_moment_material_hammer_on = Mat_Gem_Hammer_Band_Moment_Open					StructQBKey star_power_material_band_moment_hammer_on = Mat_Gem_Hammer_Band_Moment_Open_SP					StructQBKey gem_material_drum = Mat_Gem_Drum_Kick					StructQBKey star_material_drum = Mat_Gem_Drum_Star_Kick					StructQBKey star_power_material_drum = Mat_Gem_Drum_Kick_SP					StructQBKey star_power_star_material_drum = Mat_Gem_Drum_Star_Kick_SP					StructQBKey whammy_material_drum = Mat_Whammy_Kick					StructQBKey star_power_whammy_material_drum = Mat_Whammy_Kick					StructQBKey gem_deadnote_material_drum = Mat_Gem_Drum_Kick_Dead					StructQBKey star_deadnote_material_drum = Mat_Gem_Drum_Star_Kick_Dead					StructQBKey gem_deadnote_band_moment_material = Mat_Gem_Drum_Band_Moment_kick_Dead					StructQBKey gem_band_moment_material_drum = Mat_Gem_Drum_Band_Moment_kick					StructQBKey star_power_material_band_moment_drum = Mat_Gem_Drum_Band_Moment_kick_SP					StructQBKey gem_band_moment_whammy = Mat_Placeholder					StructQBKey gem_material_beginner = Mat_Gem_Kid					StructQBKey star_material_beginner = Mat_Gem_Star_Kid					StructQBKey star_power_material_beginner = Mat_Gem_Kid_SP					StructQBKey star_power_star_material_beginner = Mat_Gem_Star_Kid_SP					StructQBKey gem_band_moment_material_beginner = Mat_Gem_Band_Moment_Kid					StructQBKey star_power_band_moment_material_beginner = Mat_Gem_Band_Moment_Kid_SP					StructQBKey gem_deadnote_material_beginner = Mat_Gem_Kid_Dead					StructQBKey star_deadnote_material_beginner = Mat_Gem_Star_Kid_Dead					StructQBKey gem_band_moment_material_tapping = Mat_Placeholder					StructQBKey gem_deadnote_material_tapping = Mat_Gem_Tapping_Dead					StructQBKey solo_material = Mat_Placeholder					StructQBKey solo_star_material = Mat_Placeholder					StructQBKey solo_star_power_material = Mat_Placeholder					StructQBKey solo_star_power_star_material = Mat_Placeholder					StructQBKey solo_whammy_material = Mat_Placeholder					StructQBKey solo_whammy_star_material = Mat_Placeholder					StructQBKey star_power_material_band_moment_tapping = Mat_Placeholder					StructQBKey star_power_material_band_moment_drum_ghost = Mat_Placeholder					StructQBKey gray_material = Mat_Placeholder					StructQBKey gray_hammer_material = Mat_Placeholder					StructQBKey gray_whammy_material = Mat_Whammy_Dead					StructQBKey name = button_b				}			}		}		]}Script setup_models 0x1073e88b [	:i $tod_manager_create_perm_lights$	:i $LightShow_CreatePermModels$	:i endfunction]Script get_gem_array_name 0x65c81034 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name				difficulty			]		}		StructQBKey all	}$		:i $get_notetrack_part_text$$player$ = %GLOBAL%$player$$song_name$ = %GLOBAL%$song_name$$part$ = %GLOBAL%$part$	:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $get_difficulty_text_nl$$difficulty$ = %GLOBAL%$difficulty$$no_rhythm$ = %i(1)	:i if (%GLOBAL%$song_name$ = $jamsession$)		:i $blank_part$ = %GLOBAL%$part$		:i %GLOBAL%$Vocals$ = %i(0)		:i if $GotParam$${StructQBKey player}$			:i $getplayerinfo$%GLOBAL%$player$$part$			:i if $ChecksumEquals$$a$ = %GLOBAL%$part$$b$ = $Vocals$				:i %GLOBAL%$Vocals$ = %i(1)			:i endif		:i endif		:i if (%GLOBAL%$Vocals$ = %i(1))			:i $FormatText$${				StructQBKey checksumname = gem_array				StructString 0x00000000 = "jamsession_song_vocals"				StructQBKey addtostringlookup = true			}$						:i %GLOBAL%$part$ = %GLOBAL%$blank_part$		:i else 			:i %GLOBAL%$part$ = %GLOBAL%$blank_part$			:i $FormatText$$checksumname$ = $gem_array$%s("%s_song_%p%d")$s$ = %GLOBAL%$song_prefix$$p$ = %GLOBAL%$part$$d$ = %GLOBAL%$difficulty_text_nl$$addtostringlookup$ = $true$		:i endif	:i else 		:i $FormatText$$checksumname$ = $gem_array$%s("%s_song_%p%d")$s$ = %GLOBAL%$song_prefix$$p$ = %GLOBAL%$part$$d$ = %GLOBAL%$difficulty_text_nl$$addtostringlookup$ = $true$	:i endif	:i return $gem_array$ = %GLOBAL%$gem_array$	:i endfunction]Script get_fretbar_array_name 0x5d155d25 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name			]		}		StructQBKey all	}$		:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $FormatText$$checksumname$ = $fretbar_array$%s("%s_fretbars")$s$ = %GLOBAL%$song_prefix$$addtostringlookup$ = $true$	:i return $fretbar_array$ = %GLOBAL%$fretbar_array$	:i endfunction]Script get_timsig_array_name 0x3603eb94 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name			]		}		StructQBKey all	}$		:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $FormatText$$checksumname$ = $timesig_array$%s("%s_timesig")$s$ = %GLOBAL%$song_prefix$$addtostringlookup$ = $true$	:i return $timesig_array$ = %GLOBAL%$timesig_array$	:i endfunction]Script get_starpower_array_name 0x4e5d68cb [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name				difficulty			]		}		StructQBKey all	}$		:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i if (%GLOBAL%$part$ = $Vocals$)		:i $FormatText$$checksumname$ = $star_array$%s("%s_vocals_Star")$s$ = %GLOBAL%$song_prefix$$p$ = %GLOBAL%$part$$addtostringlookup$ = $true$	:i else 		:i $get_notetrack_part_text$$player$ = %GLOBAL%$player$$song_name$ = %GLOBAL%$song_name$$part$ = %GLOBAL%$part$		:i $get_difficulty_text_nl$$difficulty$ = %GLOBAL%$difficulty$$no_rhythm$ = %i(1)		:i $FormatText$$checksumname$ = $star_array$%s("%s_%p%d_Star")$s$ = %GLOBAL%$song_prefix$$p$ = %GLOBAL%$part$$d$ = %GLOBAL%$difficulty_text_nl$$addtostringlookup$ = $true$	:i endif	:i return $star_array$ = %GLOBAL%$star_array$	:i endfunction]Script get_tapping_array_name 0x7cb38912 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name				difficulty			]		}		StructQBKey all	}$		:i $get_notetrack_part_text$$player$ = %GLOBAL%$player$$song_name$ = %GLOBAL%$song_name$$part$ = %GLOBAL%$part$	:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $get_difficulty_text_nl$$difficulty$ = %GLOBAL%$difficulty$$no_rhythm$ = %i(1)	:i $FormatText$$checksumname$ = $tapping_array$%s("%s_%p%d_Tapping")$s$ = %GLOBAL%$song_prefix$$p$ = %GLOBAL%$part$$d$ = %GLOBAL%$difficulty_text_nl$$addtostringlookup$ = $true$	:i return $tapping_array$ = %GLOBAL%$tapping_array$	:i endfunction]Script get_drum_fill_array_name 0x2ce4932c [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name				difficulty			]		}		StructQBKey all	}$		:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $get_difficulty_text_nl$$difficulty$ = %GLOBAL%$difficulty$$no_rhythm$ = %i(1)	:i $FormatText$$checksumname$ = $drumfill_array$%s("%s_%d_DrumFill")$s$ = %GLOBAL%$song_prefix$$d$ = %GLOBAL%$difficulty_text_nl$$addtostringlookup$ = $true$	:i return $drumfill_array$ = %GLOBAL%$drumfill_array$	:i endfunction]Script get_marker_array_name 0x0f43f3d3 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name			]		}		StructQBKey all	}$		:i $get_notetrack_part_text$$player$ = %GLOBAL%$player$$song_name$ = %GLOBAL%$song_name$$part$ = %GLOBAL%$part$$fullname$ = %i(1)	:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $FormatText$$checksumname$ = $marker_array$%s("%s_%p_Markers")$s$ = %GLOBAL%$song_prefix$$p$ = %GLOBAL%$part$$addtostringlookup$ = $true$	:i return $marker_array$ = %GLOBAL%$marker_array$	:i endfunction]Script get_band_moment_array_name 0x92f3056b [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name			]		}		StructQBKey all	}$		:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $FormatText$$checksumname$ = $band_moment_array$%s("%s_BandMoment")$s$ = %GLOBAL%$song_prefix$$addtostringlookup$ = $true$	:i return $band_moment_array$ = %GLOBAL%$band_moment_array$	:i endfunction]Script setup_gemarrays 0x2fee2d4f [	${StructInt player = 1}$	:i $get_gem_array_name$$song_name$ = %GLOBAL%$song_name$$player$ = %GLOBAL%$player$$difficulty$ = %GLOBAL%$difficulty$	:i $get_fretbar_array_name$$song_name$ = %GLOBAL%$song_name$	:i $SetPlayerInfo$%GLOBAL%$player$$current_song_name$ = %GLOBAL%$song_name$	:i $beat_time$ = %i(0)	:i $SongFileManager$$func$ = $get_num_fretbar_notes$$song_name$ = %GLOBAL%$song_name$	:i if (%GLOBAL%$num_fretbar_notes$ > %i(0))		:i $SongFileManager$$func$ = $get_fretbar_note$$song_name$ = %GLOBAL%$song_name$$index$ = %i(1)		:i $beat_time$ = %GLOBAL%$fretbar_time$	:i endif	:i $SetPlayerInfo$%GLOBAL%$player$$current_song_beat_time$ = %GLOBAL%$beat_time$	:i $CastToFloat$${StructQBKey beat_time}$	:i $SetPlayerInfo$%GLOBAL%$player$$playline_song_beat_time$ = %GLOBAL%$beat_time$	:i return $gem_array$ = %GLOBAL%$gem_array$$fretbar_array$ = %GLOBAL%$fretbar_array$$song_prefix$ = %GLOBAL%$song_prefix$$difficulty_text_nl$ = %GLOBAL%$difficulty_text_nl$	:i endfunction]Script flag_extended_sustains 0x0d5cfcd8 [	:i $getplayerinfo$%GLOBAL%$player$$current_song_gem_array$$out$ = $gem_array$	:i $GetArraySize$(~%GLOBAL%$gem_array$)	:i $gem_array_size$ = %GLOBAL%$array_size$	:i $GetArraySize$${StructQBString gem_colors}$	:i $gem_color_array_size$ = %GLOBAL%$array_size$	:i $index$ = %i(0)	:i $last_extended_time$ = %i(0)	:i $extended_start_index$ = %i(0)	:i $curr_pattern_array$ = :a{%i(1)%i(1)%i(1)%i(1)%i(1):a}	:i $GetArraySize$%GLOBAL%$curr_pattern_array$	:i $curr_pattern_array_size$ = %GLOBAL%$array_size$	:i if (%GLOBAL%$gem_array_size$ <= %i(0))		:i return 	:i endif	:i while 	:i $curr_time$ = (~%GLOBAL%$gem_array$:a{%GLOBAL%$index$:a})	:i $curr_length$ = (~%GLOBAL%$gem_array$:a{(%GLOBAL%$index$ + %i(1)):a})	:i $curr_bitfield$ = (~%GLOBAL%$gem_array$:a{(%GLOBAL%$index$ + %i(2)):a})	:i $bit_count$ = %i(0)	:i $extended_sustain_bit$ = (%GLOBAL%$gem_color_array_size$ + %i(1))	:i while 	:i $set_bitfield$$curr_bitfield$ = %GLOBAL%$curr_bitfield$$bit$ = %GLOBAL%$extended_sustain_bit$$value$ = (%GLOBAL%$curr_pattern_array$:a{%GLOBAL%$bit_count$:a})	:i %GLOBAL%$extended_sustain_bit$ = (%GLOBAL%$extended_sustain_bit$ + %i(1))	:i %GLOBAL%$bit_count$ = (%GLOBAL%$bit_count$ + %i(1))	:i loop_to %GLOBAL%$curr_pattern_array_size$	:i $SetArrayElement$$arrayName$ = %GLOBAL%$gem_array$$globalarray$$index$ = (%GLOBAL%$index$ + %i(2))$newValue$ = %GLOBAL%$curr_bitfield$	:i if ((%GLOBAL%$index$ + %i(3)) >= %GLOBAL%$gem_array_size$)		:i continue	:i endif	:i $next_time$ = (~%GLOBAL%$gem_array$:a{(%GLOBAL%$index$ + %i(3)):a})	:i $next_length$ = (~%GLOBAL%$gem_array$:a{(%GLOBAL%$index$ + %i(4)):a})	:i $next_bitfield$ = (~%GLOBAL%$gem_array$:a{(%GLOBAL%$index$ + %i(5)):a})	:i if (%GLOBAL%$next_time$ < (%GLOBAL%$curr_time$ + %GLOBAL%$curr_length$))		:i $update_pattern_array_extended_sustains$$curr_bitfield$ = %GLOBAL%$curr_bitfield$$curr_pattern_array$ = %GLOBAL%$curr_pattern_array$		:i if (%GLOBAL%$last_extended_time$ = %i(0))			:i %GLOBAL%$extended_start_index$ = %GLOBAL%$index$		:i endif		:i %GLOBAL%$last_extended_time$ = (%GLOBAL%$curr_time$ + %GLOBAL%$curr_length$)	:i elseif (%GLOBAL%$curr_time$ < %GLOBAL%$last_extended_time$)		:i $update_pattern_array_extended_sustains$$curr_bitfield$ = %GLOBAL%$curr_bitfield$$curr_pattern_array$ = %GLOBAL%$curr_pattern_array$		:i $extended_end_index$ = %GLOBAL%$index$		:i $extended_index$ = %GLOBAL%$extended_start_index$		:i while 		:i if (%GLOBAL%$extended_index$ > %GLOBAL%$extended_end_index$)			:i continue		:i endif		:i %GLOBAL%$curr_time$ = (~%GLOBAL%$gem_array$:a{%GLOBAL%$extended_index$:a})		:i %GLOBAL%$curr_length$ = (~%GLOBAL%$gem_array$:a{(%GLOBAL%$extended_index$ + %i(1)):a})		:i %GLOBAL%$curr_bitfield$ = (~%GLOBAL%$gem_array$:a{(%GLOBAL%$extended_index$ + %i(2)):a})		:i $bit_count$ = %i(0)		:i $extended_sustain_bit$ = (%GLOBAL%$gem_color_array_size$ + %i(1))		:i $value_bitfield$ = %GLOBAL%$curr_bitfield$		:i while 		:i if NOT ((%GLOBAL%$value_bitfield$ / %i(2)) * %i(2) = %GLOBAL%$value_bitfield$)			:i $set_bitfield$$curr_bitfield$ = %GLOBAL%$curr_bitfield$$bit$ = %GLOBAL%$extended_sustain_bit$$value$ = %i(1)		:i else 			:i $set_bitfield$$curr_bitfield$ = %GLOBAL%$curr_bitfield$$bit$ = %GLOBAL%$extended_sustain_bit$$value$ = (%GLOBAL%$curr_pattern_array$:a{%GLOBAL%$bit_count$:a})		:i endif		:i %GLOBAL%$value_bitfield$ = (%GLOBAL%$value_bitfield$ / %i(2))		:i %GLOBAL%$extended_sustain_bit$ = (%GLOBAL%$extended_sustain_bit$ + %i(1))		:i %GLOBAL%$bit_count$ = (%GLOBAL%$bit_count$ + %i(1))		:i loop_to %GLOBAL%$curr_pattern_array_size$		:i $SetArrayElement$$arrayName$ = %GLOBAL%$gem_array$$globalarray$$index$ = (%GLOBAL%$extended_index$ + %i(2))$newValue$ = %GLOBAL%$curr_bitfield$		:i $debug_get_bitfield_text$$curr_bitfield$ = %GLOBAL%$curr_bitfield$$num_bits$ = (%GLOBAL%$gem_color_array_size$ + %i(6))		:i $printf$$channel$ = $extended$^[bb0293f2]^$a$ = %GLOBAL%$extended_index$$b$ = %GLOBAL%$curr_time$$c$ = %GLOBAL%$curr_bitfield$$d$ = %GLOBAL%$bitfield_text$		:i %GLOBAL%$extended_index$ = (%GLOBAL%$extended_index$ + %i(3))		:i loop_to 		:i $printf$${			StructQBKey channel = extended			StructQBStringQs 0x03ac90f0		}$				:i %GLOBAL%$last_extended_time$ = %i(0)		:i %GLOBAL%$curr_pattern_array$ = :a{%i(1)%i(1)%i(1)%i(1)%i(1):a}	:i else 		:i %GLOBAL%$last_extended_time$ = %i(0)		:i %GLOBAL%$curr_pattern_array$ = :a{%i(1)%i(1)%i(1)%i(1)%i(1):a}	:i endif	:i %GLOBAL%$index$ = (%GLOBAL%$index$ + %i(3))	:i loop_to 	:i $printf$$channel$ = $extended$^[95b6c4ad]^$s$ = %GLOBAL%$gem_array_size$	:i endfunction]Script update_pattern_array_extended_sustains 0x0d59a9ae [	:i $GetArraySize$%GLOBAL%$curr_pattern_array$	:i $value_bitfield$ = %GLOBAL%$curr_bitfield$	:i $index$ = %i(0)	:i while 	:i if NOT ((%GLOBAL%$value_bitfield$ / %i(2)) * %i(2) = %GLOBAL%$value_bitfield$)		:i $SetArrayElement$$arrayName$ = $curr_pattern_array$$index$ = %GLOBAL%$index$$newValue$ = %i(0)	:i endif	:i %GLOBAL%$value_bitfield$ = (%GLOBAL%$value_bitfield$ / %i(2))	:i $index$ = (%GLOBAL%$index$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i return $curr_pattern_array$ = %GLOBAL%$curr_pattern_array$	:i endfunction]Script set_bitfield a49270a4 [	:i if (%GLOBAL%$value$ !== %i(1) AND %GLOBAL%$value$ !== %i(0))		:i return 	:i endif	:i $new_bit$ = %i(1)	:i if (%GLOBAL%$bit$ > %i(0))		:i while 		:i %GLOBAL%$new_bit$ = (%GLOBAL%$new_bit$ * %i(2))		:i loop_to %GLOBAL%$bit$	:i endif	:i $bit_on$ = %i(0)	:i $value_bitfield$ = %GLOBAL%$curr_bitfield$	:i while 	:i %GLOBAL%$bit_on$ = %i(0)	:i if NOT ((%GLOBAL%$value_bitfield$ / %i(2)) * %i(2) = %GLOBAL%$value_bitfield$)		:i %GLOBAL%$bit_on$ = %i(1)	:i endif	:i %GLOBAL%$value_bitfield$ = (%GLOBAL%$value_bitfield$ / %i(2))	:i loop_to (%GLOBAL%$bit$ + %i(1))	:i if (%GLOBAL%$bit_on$ = %i(0) AND %GLOBAL%$value$ = %i(1))		:i %GLOBAL%$curr_bitfield$ = (%GLOBAL%$curr_bitfield$ + %GLOBAL%$new_bit$)	:i endif	:i if (%GLOBAL%$bit_on$ = %i(1) AND %GLOBAL%$value$ = %i(0))		:i %GLOBAL%$curr_bitfield$ = (%GLOBAL%$curr_bitfield$ - %GLOBAL%$new_bit$)	:i endif	:i return $curr_bitfield$ = %GLOBAL%$curr_bitfield$	:i endfunction]Script debug_get_bitfield_text 0x992512c4 [	:i $gem_count$ = %i(0)	:i $bitfield_text$ = %s("pattern:")	:i $value_bitfield$ = %GLOBAL%$curr_bitfield$	:i while 	:i $value$ = %i(0)	:i if NOT ((%GLOBAL%$value_bitfield$ / %i(2)) * %i(2) = %GLOBAL%$value_bitfield$)		:i $value$ = %i(1)	:i endif	:i %GLOBAL%$value_bitfield$ = (%GLOBAL%$value_bitfield$ / %i(2))	:i if (%GLOBAL%$value$)		:i switch %GLOBAL%$gem_count$			:i case %i(0)				:i $FormatText$$textname$ = $bitfield_text$%s("%sg")$s$ = %GLOBAL%$bitfield_text$				:i endcase			case %i(1)				:i $FormatText$$textname$ = $bitfield_text$%s("%sr")$s$ = %GLOBAL%$bitfield_text$				:i endcase			case %i(2)				:i $FormatText$$textname$ = $bitfield_text$%s("%sy")$s$ = %GLOBAL%$bitfield_text$				:i endcase			case %i(3)				:i $FormatText$$textname$ = $bitfield_text$%s("%sb")$s$ = %GLOBAL%$bitfield_text$				:i endcase			case %i(4)				:i $FormatText$$textname$ = $bitfield_text$%s("%so")$s$ = %GLOBAL%$bitfield_text$				:i endcase			default 				:i $FormatText$$textname$ = $bitfield_text$%s("%s1")$s$ = %GLOBAL%$bitfield_text$		:i end_switch	:i else 		:i if (%GLOBAL%$gem_count$ < %i(5))			:i $FormatText$$textname$ = $bitfield_text$%s("%s-")$s$ = %GLOBAL%$bitfield_text$		:i else 			:i $FormatText$$textname$ = $bitfield_text$%s("%s0")$s$ = %GLOBAL%$bitfield_text$		:i endif	:i endif	:i if (%GLOBAL%$gem_count$ = %i(4))		:i $FormatText$$textname$ = $bitfield_text$%s("%s open:")$s$ = %GLOBAL%$bitfield_text$	:i endif	:i if (%GLOBAL%$gem_count$ = %i(5))		:i $FormatText$$textname$ = $bitfield_text$%s("%s hammer:")$s$ = %GLOBAL%$bitfield_text$	:i endif	:i if (%GLOBAL%$gem_count$ = %i(6))		:i $FormatText$$textname$ = $bitfield_text$%s("%s ext_sus:")$s$ = %GLOBAL%$bitfield_text$	:i endif	:i $gem_count$ = (%GLOBAL%$gem_count$ + %i(1))	:i loop_to %GLOBAL%$num_bits$	:i return $bitfield_text$ = %GLOBAL%$bitfield_text$	:i endfunction]Script calc_health_invincible_time 0x59ed7000 [	:i $SongFileManager$$func$ = $get_song_end_time$$song_name$ = %GLOBAL%$song$	:i $health_invincible_time$ = %f(0.0)	:i $gamemode_gettype$	:i if (%GLOBAL%$type$ = $career$ OR %GLOBAL%$type$ = $quickplay$)		:i $getplayerinfo$%GLOBAL%$player$$difficulty$		:i switch %GLOBAL%$difficulty$			:i case $beginner$				:i $health_invincible_time$ = (%GLOBAL%$total_end_time$ * ~$health_invincible_time_percentage_beginner$ / %f(100.0))				:i endcase			case $easy$				:i $health_invincible_time$ = (%GLOBAL%$total_end_time$ * ~$health_invincible_time_percentage_easy$ / %f(100.0))				:i endcase			case $medium$				:i $health_invincible_time$ = (%GLOBAL%$total_end_time$ * ~$health_invincible_time_percentage_medium$ / %f(100.0))		:i end_switch	:i endif	:i $SetPlayerInfo$%GLOBAL%$player$$health_invincible_time$ = %GLOBAL%$health_invincible_time$	:i endfunction]Script gem_scroller 0x42502a54 [	${StructInt player = 1}$	:i $check_song_for_zero_difficulty$$song$ = %GLOBAL%$song_name$	:i $setup_gemarrays$$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$player$ = %GLOBAL%$player$	:i $get_notetrack_part_text$$player$ = %GLOBAL%$player$$song_name$ = %GLOBAL%$song_name$	:i $calc_health_invincible_time$$song$ = %GLOBAL%$song_name$$player$ = %GLOBAL%$player$	:i $yield$	:i if $playerinfoequals$%GLOBAL%$player$$part$ = $drum$		:i $SetPlayerInfo$%GLOBAL%$player$$check_time_early$ = (~$drum_time_early$ * ~$current_speedfactor$)		:i $SetPlayerInfo$%GLOBAL%$player$$check_time_late$ = (~$drum_time_late$ * ~$current_speedfactor$)	:i else 		:i $SetPlayerInfo$%GLOBAL%$player$$check_time_early$ = (~$check_time_early$ * ~$current_speedfactor$)		:i $SetPlayerInfo$%GLOBAL%$player$$check_time_late$ = (~$check_time_late$ * ~$current_speedfactor$)	:i endif	:i $FormatText$$checksumname$ = $input_array$%s("input_arrayp%p")$p$ = %GLOBAL%$player$	:i $InputArrayCreate$$name$ = %GLOBAL%$input_array$	:i $GetFirstPlayer$${		StructQBKey on_screen		StructQBKey out = first	}$		:i if (%GLOBAL%$player$ = %GLOBAL%$first$)		:i if (~$input_mode$ = $record$)			:i if $are_replays_enabled$				:i $GetNumPlayersInGame$				:i $getplayerinfo$${					StructInt 1					StructQBKey controller					StructQBKey out = controller1				}$								:i $getplayerinfo$${					StructInt 2					StructQBKey controller					StructQBKey out = controller2				}$								:i $getplayerinfo$${					StructInt 3					StructQBKey controller					StructQBKey out = controller3				}$								:i $getplayerinfo$${					StructInt 4					StructQBKey controller					StructQBKey out = controller4				}$								:i $getplayerinfo$${					StructInt 1					StructQBKey part					StructQBKey out = part1				}$								:i $getplayerinfo$${					StructInt 2					StructQBKey part					StructQBKey out = part2				}$								:i $getplayerinfo$${					StructInt 3					StructQBKey part					StructQBKey out = part3				}$								:i $getplayerinfo$${					StructInt 4					StructQBKey part					StructQBKey out = part4				}$								:i $ClearDataBuffer$${StructQBKey name = replay}$				:i $DataBufferPutChecksum$$name$ = $replay$$value$ = %GLOBAL%$song_name$				:i $DataBufferPutChecksum$$name$ = $replay$$value$ = (~$current_transition$)				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$num_players$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$controller1$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$controller2$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$controller3$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$controller4$				:i $DataBufferPutChecksum$$name$ = $replay$$value$ = %GLOBAL%$part1$$bytes$ = %i(16)				:i $DataBufferPutChecksum$$name$ = $replay$$value$ = %GLOBAL%$part2$$bytes$ = %i(16)				:i $DataBufferPutChecksum$$name$ = $replay$$value$ = %GLOBAL%$part3$$bytes$ = %i(16)				:i $DataBufferPutChecksum$$name$ = $replay$$value$ = %GLOBAL%$part4$$bytes$ = %i(16)				:i $GetRandomSeeds$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$seed1$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$seed2$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$seed3$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$seed4$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$seed5$				:i $DataBufferPutInt$$name$ = $replay$$value$ = %GLOBAL%$seed6$			:i endif		:i endif	:i endif	:i $yield$	:i %GLOBAL%$gem_offset$ = (~$time_gem_offset$)	:i %GLOBAL%$input_offset$ = (~$time_input_offset$)	:i $get_lag_values$	:i $audio_offset$ = (%GLOBAL%$audio_offset$ * ~$current_speedfactor$)	:i %GLOBAL%$input_offset$ = (%GLOBAL%$input_offset$ - %GLOBAL%$audio_offset$)	:i %GLOBAL%$gem_offset$ = (%GLOBAL%$gem_offset$ - %GLOBAL%$audio_offset$)	:i %GLOBAL%$gem_offset$ = (%GLOBAL%$gem_offset$ - %GLOBAL%$video_offset$)	:i $change$$time_drum_midi_offset_with_lag$ = (~$time_drum_midi_offset$ + %GLOBAL%$audio_offset$ + %GLOBAL%$video_offset$)	:i $change$$time_gem_offset_with_lag$ = (~$time_gem_offset$ - %GLOBAL%$audio_offset$ - %GLOBAL%$video_offset$)	:i if NOT $musicstudio_mainobj$.$musicstudio_isinmusicstudio$		:i if (~$game_mode$ !== $tutorial$ AND ~$game_mode$ !== $practice$ AND ~$calibrate_lag_enabled$ = %i(0))			:i $GetFirstPlayer$${				StructQBKey on_screen				StructQBKey out = first			}$						:i if (%GLOBAL%$player$ = %GLOBAL%$first$)				:i $BandManager_StartAllAnimIterators$$song_name$ = %GLOBAL%$song_name$$time_offset$ = %GLOBAL%$gem_offset$				:i $Drummer_Kill_Spawnscripts$				:i $spawnscriptnow$${StructQBKey drummer_controlscript}$				:i if (~$AutoVocalTest$ = %i(1))					:i $Vocalist_Reset_Globals$					:i $spawnscriptnow$${StructQBKey autovocal_controlscript}$				:i endif				:i $crowd_Kill_Spawnscripts$				:i $spawnscriptnow$${StructQBKey crowd_control}$				:i $SpawnScriptLater$$WatchForStartPlaying_iterator$$params$ = :s{$time_offset$ = %GLOBAL%$gem_offset$:s}				:i $SpawnScriptLater$$tempo_matching_iterator$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$thin_fretbars$				:i $time_offset$ = %GLOBAL%$gem_offset$$skipleadin$ = %i(0)$player$ = %GLOBAL%$player$:s}			:i endif		:i endif	:i endif	:i $getplayerinfo$%GLOBAL%$player$$scroll_time$	:i $getplayerinfo$%GLOBAL%$player$$check_time_early$	:i $getplayerinfo$%GLOBAL%$player$$bot_play$	:i $getplayerinfo$%GLOBAL%$player$$is_local_client$	:i $getplayerinfo$%GLOBAL%$player$$server_id$	:i $easy_scroll_time$ = (~$difficulty_list_props$->$easy$->$scroll_time$)	:i $gamemode_gettype$	:i $fill_input_offset$ = (((%GLOBAL%$easy_scroll_time$ - ~$destroy_time$) * %f(1000.0)) + %GLOBAL%$gem_offset$ + %f(1000.0))	:i $CastToInteger$${StructQBKey fill_input_offset}$	:i $FormatText$$checksumname$ = $input_array$%s("input_arrayp%p")$p$ = %GLOBAL%$player$	:i if ((~$calibrate_lag_enabled$ = %i(0)) OR (~$calibrate_highway_gameplay_state$ = $settingstest$))		:i $SpawnScriptLater$$gem_array_events$$params$ = :s{$iterator_text$ = %s("fill_array")$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$input_array$ = %GLOBAL%$input_array$			:i $time_offset$ = %GLOBAL%$fill_input_offset$$strum_function$ = $fill_input_array$$skipleadin$ = (%GLOBAL%$easy_scroll_time$ * %f(1000.0))$player$ = %GLOBAL%$player$		:i $not_player_specific$ = $true$$add_part_to_event_id$ = $true$$use_expert_plus$ = %i(1):s}	:i endif	:i %GLOBAL%$do_bot$ = %i(0)	:i if ((%GLOBAL%$bot_play$ = %i(1)) OR (%GLOBAL%$is_local_client$ = %i(0)))		:i %GLOBAL%$do_bot$ = %i(1)	:i endif	:i if NOT $RetailBuild$		:i if (%GLOBAL%$type$ !== $freeplay$)			:i %GLOBAL%$do_bot$ = %i(1)		:i endif	:i endif	:i if (%GLOBAL%$do_bot$ = %i(1))		:i $FormatText$$checksumname$ = $botresponse_array$%s("botresponse_arrayp%p")$p$ = %GLOBAL%$player$		:i $InputArrayCreate$$name$ = %GLOBAL%$botresponse_array$		:i %GLOBAL%$stagger_offset$ = %f(34.0)		:i $SpawnScriptLater$$gem_iterator$$params$ = :s{$iterator_text$ = %s("fill_botresponsearray")$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$part$ = %GLOBAL%$part$$input_array$ = %GLOBAL%$botresponse_array$			:i $time_offset$ = ((((%GLOBAL%$easy_scroll_time$ - ~$destroy_time$) * %f(1000.0)) + %GLOBAL%$gem_offset$ + %f(1000.0)) + %GLOBAL%$stagger_offset$)$strum_function$ = $fill_input_array$$skipleadin$ = (%GLOBAL%$scroll_time$ * %f(1000.0))		:i $player$ = %GLOBAL%$player$$use_expert_plus$ = %i(1):s}		:i $SpawnScriptLater$$gem_iterator$$params$ = :s{$iterator_text$ = %s("adjust_botresponsearray")$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$part$ = %GLOBAL%$part$$use_input_array$ = %s("botresponse_array")			:i $time_offset$ = (%GLOBAL%$check_time_early$ * %i(1000))$strum_function$ = $adjust_input_array_for_note_miss$$skipleadin$ = (%GLOBAL%$scroll_time$ * %f(1000.0))		:i $player$ = %GLOBAL%$player$:s}		:i $SpawnScriptLater$$gem_iterator$$params$ = :s{$iterator_text$ = %s("bot")$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$part$ = %GLOBAL%$part$$use_input_array$ = %s("botresponse_array")			:i $time_offset$ = (((%GLOBAL%$check_time_early$ * %f(1000.0)) + %GLOBAL%$input_offset$ - (~$check_time_late$ * %f(1000.0))) + %GLOBAL%$stagger_offset$)$strum_function$ = $check_buttons_bot$$skipleadin$ = (%GLOBAL%$scroll_time$ * %f(1000.0))		:i $player$ = %GLOBAL%$player$:s}		:i $printf$$channel$ = $log$^[da3b9ce1]^$s$ = %GLOBAL%$player$	:i endif	:i $yield$	:i $SetPlayerInfo$%GLOBAL%$player$$gem_offset$ = %GLOBAL%$gem_offset$	:i $SetPlayerInfo$%GLOBAL%$player$$time_offset$ = (((%GLOBAL%$scroll_time$ - ~$destroy_time$) * %f(1000.0)) + %GLOBAL%$gem_offset$)	:i $SpawnScriptLater$$gem_iterator$$params$ = :s{$iterator_text$ = %s("create_gem")$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$part$ = %GLOBAL%$part$$use_input_array$ = %s("input_array")		:i $use_player_info_time_offset$$gem_function$ = $create_gem$$skipleadin$ = (%GLOBAL%$scroll_time$ * %f(1000.0))	:i $player$ = %GLOBAL%$player$:s}	:i $yield$	:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $FormatText$$checksumname$ = $guitar_stream$%s("%s_guitar")$s$ = %GLOBAL%$song_prefix$	:i if $GotParam$${StructQBKey looping}$		:i $getplayerinfo$%GLOBAL%$player$$controller$		:i $RestartPlayerServerInput$:s{			:i $player$ = %GLOBAL%$player$			:i $controller$ = %GLOBAL%$controller$			:i $guitar_stream$ = %GLOBAL%$guitar_stream$			:i $time_offset$ = ((%GLOBAL%$check_time_early$ * %f(1000.0)) + %GLOBAL%$input_offset$)			:i $song_name$ = %GLOBAL%$song_name$		:i :s}		:i $vocals_mute_all_mics$${StructQBKey mute = false}$	:i else 		:i $CreatePlayerServer$$id$ = %GLOBAL%$server_id$$player$ = %GLOBAL%$player$		:i $getplayerinfo$%GLOBAL%$player$$controller$		:i $yield$		:i $AddPlayerServerInput$:s{$id$ = %GLOBAL%$server_id$			:i $player$ = %GLOBAL%$player$			:i $controller$ = %GLOBAL%$controller$			:i $guitar_stream$ = %GLOBAL%$guitar_stream$			:i $time_offset$ = ((%GLOBAL%$check_time_early$ * %f(1000.0)) + %GLOBAL%$input_offset$)			:i $song_name$ = %GLOBAL%$song_name$		:i :s}		:i $yield$		:i $AddPlayerServerHighway$$id$ = %GLOBAL%$server_id$$player$ = %GLOBAL%$player$$fill_input_offset$ = %GLOBAL%$fill_input_offset$		:i $yield$		:i if (~$is_network_game$)			:i $AddNetworkPlayerOutputs$$id$ = %GLOBAL%$server_id$$player$ = %GLOBAL%$player$$onscreen$ = %i(1)		:i endif	:i endif	:i $yield$	:i if NOT $playerinfoequals$%GLOBAL%$player$$part$ = $Vocals$		:i if ((~$calibrate_lag_enabled$ = %i(0)) OR (~$calibrate_highway_gameplay_state$ = $settingstest$))			:i $AddPlayerServerFretbarIterator$:s{$fretbar_id$ = $CreateFretbar$$id$ = %GLOBAL%$server_id$$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$thin_fretbars$				:i $use_player_info_time_offset$$fretbar_function$ = $create2dfretbar$$skipleadin$ = (%GLOBAL%$scroll_time$ * %f(1000.0))			:i $player$ = %GLOBAL%$player$:s}		:i endif	:i endif	:i $SpawnScriptLater$$fretbar_update_tempo$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$part$ = %GLOBAL%$part$	:i $time_offset$ = ((%GLOBAL%$check_time_early$ * %f(1000.0)) + %GLOBAL%$gem_offset$)$player$ = %GLOBAL%$player$$skipleadin$ = (%GLOBAL%$scroll_time$ * %f(1000.0)):s}	:i $SpawnScriptLater$$fretbar_update_hammer_on_tolerance$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$part$ = %GLOBAL%$part$	:i $time_offset$ = (((%GLOBAL%$easy_scroll_time$ - ~$destroy_time$) * %f(1000.0)) + %GLOBAL%$gem_offset$ + %f(1000.0))$player$ = %GLOBAL%$player$$skipleadin$ = (%GLOBAL%$scroll_time$ * %f(1000.0)):s}	:i if ((~$calibrate_lag_enabled$ = %i(1)) AND (~$calibrate_highway_gameplay_state$ !== $settingstest$))		:i return 	:i endif	:i $yield$	:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$	:i $GetFirstPlayer$${		StructQBKey on_screen		StructQBKey out = first	}$		:i if (%GLOBAL%$player$ = %GLOBAL%$first$)		:i $AddPlayerServerFretbarIterator$:s{$fretbar_id$ = $PreFretbarEvent$$id$ = %GLOBAL%$server_id$$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$heap$ = $heap_gameplay$		:i $time_offset$ = ((~$prefretbar_time$ * %f(1000.0)))$fretbar_function$ = $GuitarEvent_PreFretbar$$skipleadin$ = %i(0)$player$ = %GLOBAL%$player$:s}		:i $AddPlayerServerFretbarIterator$:s{$fretbar_id$ = $fretbarevent$$id$ = %GLOBAL%$server_id$$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$heap$ = $heap_gameplay$		:i $time_offset$ = %GLOBAL%$gem_offset$$fretbar_function$ = $GuitarEvent_Fretbar$$skipleadin$ = %i(0)$player$ = %GLOBAL%$player$:s}		:i if (~$g_debug_audible_downbeat$ = %i(1))			:i $AddPlayerServerFretbarIterator$:s{$fretbar_id$ = $FretbarEventEarly$$id$ = %GLOBAL%$server_id$$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$heap$ = $heap_gameplay$			:i $time_offset$ = (%GLOBAL%$gem_offset$ + (~$check_time_early$ * %f(1000.0)))$fretbar_function$ = $GuitarEvent_Fretbar_Early$$skipleadin$ = %i(0)$player$ = %GLOBAL%$player$:s}			:i $AddPlayerServerFretbarIterator$:s{$fretbar_id$ = $FretbarEventLate$$id$ = %GLOBAL%$server_id$$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$$heap$ = $heap_gameplay$			:i $time_offset$ = (%GLOBAL%$gem_offset$ - (~$check_time_late$ * %f(1000.0)))$fretbar_function$ = $GuitarEvent_Fretbar_Late$$skipleadin$ = %i(0)$player$ = %GLOBAL%$player$:s}		:i endif		:i $yield$		:i if (~$calibrate_lag_enabled$ = %i(0))			:i $extendcrc$%GLOBAL%$song_name$%s("_scriptevents")$out$ = $script_events$			:i if $SongGlobalExists$$name$ = %GLOBAL%$script_events$$type$ = $array$				:i $uses_new_performance$ = $true$			:i else 				:i $uses_new_performance$ = $false$			:i endif			:i if NOT $GotParam$${StructQBKey looping}$				:i if (%GLOBAL%$song_name$ = $jamsession$)					:i $SpawnScriptLater$$autocut_cameracuts_iterator$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$time_offset$ = %GLOBAL%$gem_offset$$skipleadin$ = %i(0):s}				:i else 					:i $SpawnScriptLater$$cameracuts_iterator$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$time_offset$ = %GLOBAL%$gem_offset$$skipleadin$ = %i(0):s}				:i endif			:i endif			:i if (%GLOBAL%$type$ !== $practice$)				:i $SpawnScriptLater$$scriptevents_iterator$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$time_offset$ = %GLOBAL%$gem_offset$$skipleadin$ = %i(0):s}			:i endif			:i $yield$			:i $GetArraySize$${StructQBString scripts_array}$			:i $array_count$ = %i(0)			:i while 			:i $event_string$ = (~$scripts_array$:a{%GLOBAL%$array_count$:a}->$name$)			:i if (%GLOBAL%$event_string$ = %s("performance") AND %GLOBAL%$uses_new_performance$ = $true$)			:i else 				:i %GLOBAL%$lead_ms$ = (~$scripts_array$:a{%GLOBAL%$array_count$:a}->$lead_ms$)				:i $SpawnScriptLater$$event_iterator$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$					:i $event_string$ = (~$scripts_array$:a{%GLOBAL%$array_count$:a}->$name$)$time_offset$ = (%GLOBAL%$gem_offset$ + %GLOBAL%$lead_ms$)$skipleadin$ = %i(0)$player$ = %GLOBAL%$player$:s}				:i $SpawnScriptLater$$notemap_startiterator$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$					:i $event_string$ = (~$scripts_array$:a{%GLOBAL%$array_count$:a}->$name$)$time_offset$ = (%GLOBAL%$gem_offset$ + %GLOBAL%$lead_ms$)$skipleadin$ = %i(0)$player$ = %GLOBAL%$player$:s}			:i endif			:i $array_count$ = (%GLOBAL%$array_count$ + %i(1))			:i loop_to %GLOBAL%$array_size$			:i $yield$			:i $SpawnScriptLater$$notemap_startiterator$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$difficulty$ = %GLOBAL%$difficulty$			:i $event_string$ = %s("drums")$time_offset$ = (%GLOBAL%$gem_offset$ + ~$time_drum_midi_offset_with_lag$)$skipleadin$ = %i(0)$player$ = %GLOBAL%$player$:s}			:i if $GotParam$${StructQBKey looping}$				:i return 			:i endif			:i $yield$			:i $spawnscriptnow$$lightshow_iterator$$params$ = :s{$song_name$ = %GLOBAL%$song_name$$time_offset$ = (%GLOBAL%$gem_offset$ + ~$lightshow_offset_ms$)$skipleadin$ = %i(0):s}			:i if NOT (~$debug_forcescore$ = $Off$)				:i $crowdincrease$${StructInt player = 1}$			:i endif		:i endif	:i endif	:i $yield$	:i if (%GLOBAL%$type$ !== $practice$)		:i $SpawnScriptLater$$win_song$$params$ = :s{ isNull :s}	:i endif	:i endfunction]SectionInteger failed_song 0Script win_song db9390c8 [	:i $printscriptinfo$${StructString 0x00000000 = "win_song"}$	:i if $quest_progression_is_chapter_finale$		:i $final_battle_win_song$ isNull 		:i return 	:i endif	:i $change$${StructInt failed_song = 0}$	:i $GetFirstPlayer$${StructQBKey out = first_player}$	:i if (%GLOBAL%$player$ = %GLOBAL%$first_player$)		:i $change$${StructInt num_players_finished = 0}$	:i endif	:i $gamemode_gettype$	:i $career$ = $false$	:i if (%GLOBAL%$type$ = $career$)		:i $career$ = $true$	:i endif	:i $SongFileManager$$func$ = $get_song_end_time$$song_name$ = %GLOBAL%$song_name$$career$ = %GLOBAL%$career$	:i $printf$^[037498f0]^$s$ = %GLOBAL%$total_end_time$	:i $TimeMarkerReached_SetParams$$time_offset$ = %i(0)$time$ = %GLOBAL%$total_end_time$	:i while 	:i if $TimeMarkerReached$		:i continue	:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ = %i(2))		:i $wait_on_player$ = %i(2)	:i else 		:i $wait_on_player$ = %i(1)	:i endif	:i if $quest_progression_is_chapter_rush$		:i $wait$${			StructQBString Rush_set_song_win_delay			StructQBKey seconds		}$			:i else 		:i $printf$${			StructQBStringQs 0x2736fd96			StructQBString s = Song_Win_Delay		}$				:i $wait$${			StructQBString Song_Win_Delay			StructQBKey seconds		}$			:i endif	:i $change$$num_players_finished$ = (~$num_players_finished$ + %i(1))	:i $printf$^[a4b6cd96]^$i$ = (~$num_players_finished$)$f$ = %GLOBAL%$num_players$	:i $GetNumPlayersInGame$${StructQBKey on_screen}$	:i if (~$num_players_finished$ >= %GLOBAL%$num_players_shown$)		:i if (~$is_network_game$)			:i $spawnscriptnow$${StructQBKey online_end_song}$		:i else 			:i %GLOBAL%$event$ = $song_won$			:i $printf$${StructQBStringQs af979d44}$			:i $extendcrcplayer$%GLOBAL%$event$%GLOBAL%$player$$out$ = $type$			:i $broadcastevent$$type$ = %GLOBAL%$type$		:i endif	:i endif	:i endfunction]SectionInteger load_songqpak_lock 0Script load_songqpak e9bc68c9 [	${		StructInt async = 0		StructInt resetZone = 0		Unknown [00012600d24f570c6969696900000000]	}$		:i $printscriptinfo$	:i $printf$${StructString 0x00000000 = "load_songqpak - START"}$	:i $printstruct$ isNull 	:i $printf$%s("$current_song_qpak = %d")$d$ = (~$current_song_qpak$)	:i $printf$%s("$current_song_qpak_performance = %d")$d$ = (~$current_song_qpak_performance$)	:i while 	:i if (~$load_songqpak_lock$ = %i(0))		:i continue	:i endif	:i $printf$%s("waiting for load_songqpak lock %a")$a$ = %GLOBAL%$song_name$	:i $scriptassert$${StructString 0x00000000 = "Already in load_songqpak! This is bad"}$	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i $change$${StructInt load_songqpak_lock = 1}$	:i $get_song_performance$$song$ = %GLOBAL%$song_name$	:i $yield$	:i if NOT (%GLOBAL%$song_name$ = ~$current_song_qpak$ AND 		:i %GLOBAL%$song_performance$ = ~$current_song_qpak_performance$)		:i if (%GLOBAL%$resetZone$ = %i(1))			:i $Transitions_ResetZone$${StructQBString profile = Profile_Ven_Camera_Obj}$			:i if (%GLOBAL%$async$ = %i(1))				:i $wait$${					StructInt 1					StructQBKey gameframe				}$							:i endif		:i endif		:i if (%GLOBAL%$song_name$ = $jamsession$)			:i $unload_songqpak$		:i else 			:i $yield$			:i $jamsession_unload$${StructString song_prefix = "jamsession"}$			:i $yield$			:i if (%GLOBAL%$song_performance$ = %i(0))				:i $song_perf_ext$ = %s("")			:i else 				:i $FormatText$$textname$ = $song_perf_ext$%s("_perf%i")$i$ = (%GLOBAL%$song_performance$ + %i(1))			:i endif			:i $get_song_prefix$$song$ = %GLOBAL%$song_name$			:i $is_song_downloaded$$song_checksum$ = %GLOBAL%$song_name$			:i if (%GLOBAL%$download$ = %i(1))				:i $FormatText$$textname$ = $songqpak$(~$dlc_songpak_spec$)$i$ = %GLOBAL%$song_prefix$$s$ = %GLOBAL%$song_perf_ext$$addtostringlookup$ = $true$			:i else 				:i $Playlist_GetCurrentSongVersion$				:i $FormatText$$textname$ = $songqpak$%s("songs/%i%s_song.pak")$i$ = %GLOBAL%$song_prefix$$s$ = %GLOBAL%$song_perf_ext$$addtostringlookup$ = $true$			:i endif			:i if NOT $load_song_pak$$songqpak$ = %GLOBAL%$songqpak$$async$ = %GLOBAL%$async$$song_name$ = %GLOBAL%$song_name$				:i $change$${StructInt load_songqpak_lock = 0}$				:i $spawnscriptnow$${StructQBKey downloadcontentlost}$				:i return 			:i endif		:i endif		:i $change$$current_song_qpak$ = %GLOBAL%$song_name$		:i $change$$current_song_qpak_performance$ = %GLOBAL%$song_performance$		:i $yield$		:i if $GotParam$${StructQBKey song_prefix}$			:i $FormatText$$checksumname$ = $song_setup$%s("%s_setup")$s$ = %GLOBAL%$song_prefix$			:i if $ScriptExists$%GLOBAL%$song_setup$				:i $spawnscriptnow$%GLOBAL%$song_setup$			:i endif		:i endif	:i endif	:i $printf$${StructString 0x00000000 = "load_songqpak - DONE!"}$	:i $change$${StructInt load_songqpak_lock = 0}$	:i endfunction]Script unload_songqpak 0x6da1a0d9 [	:i if NOT (~$current_song_qpak$ = $None$)		:i if (~$current_song_qpak$ = $jamsession$)			:i $jamsession_unload$${StructString song_prefix = "jamsession"}$		:i else 			:i if (~$current_song_qpak_performance$ = %i(0))				:i $song_perf_ext$ = %s("")			:i else 				:i $FormatText$$textname$ = $song_perf_ext$%s("_perf%i")$i$ = (~$current_song_qpak_performance$ + %i(1))			:i endif			:i $get_song_prefix$$song$ = (~$current_song_qpak$)			:i $is_song_downloaded$$song_checksum$ = (~$current_song_qpak$)			:i if (%GLOBAL%$download$ = %i(1))				:i $FormatText$$textname$ = $songqpak$(~$dlc_songpak_spec$)$i$ = %GLOBAL%$song_prefix$$s$ = %GLOBAL%$song_perf_ext$$addtostringlookup$ = $true$			:i else 				:i $FormatText$$textname$ = $songqpak$%s("songs/%i%s_song.pak")$i$ = %GLOBAL%$song_prefix$$s$ = %GLOBAL%$song_perf_ext$$addtostringlookup$ = $true$			:i endif			:i $printf$$channel$ = $loading$^[055f66fb]^$i$ = %GLOBAL%$songqpak$			:i $unload_song_pak$$songqpak$ = %GLOBAL%$songqpak$		:i endif		:i $change$${StructQBKey current_song_qpak = None}$		:i $change$${StructInt current_song_qpak_performance = 0}$	:i endif	:i endfunction]Script unpause_loading_scripts 0x40d8d03b [	:i $unpausespawnedscript$${StructQBKey Crowd_Loading_Surge}$	:i $unpausespawnedscript$${StructQBKey audio_crowd_play_loading_screen_swell}$	:i $unpausespawnedscript$${StructQBKey audio_crowd_loading_whistle}$	:i endfunction]SectionInteger playing_song 0Script song_allowed_in_random_selection c5090053 [	:i if $StructureContains$$structure$ = ((~$gh_songlist_props$)->%GLOBAL%$song_checksum$)$allowed_in_quickplay$		:i if ((~%GLOBAL%$songlist_props$->%GLOBAL%$song_checksum$)->$allowed_in_quickplay$ = %i(0))			:i return ${StructQBKey false}$		:i endif	:i endif	:i if $StructureContains$$structure$ = ((~$gh_songlist_props$)->%GLOBAL%$song_checksum$)$allowed_in_random$		:i if ((~%GLOBAL%$songlist_props$->%GLOBAL%$song_checksum$)->$allowed_in_random$ = %i(0))			:i return ${StructQBKey false}$		:i endif	:i endif	:i if $StructureContains$$structure$ = ((~$gh_songlist_props$)->%GLOBAL%$song_checksum$)$never_show_in_setlist$		:i return ${StructQBKey false}$	:i endif	:i return ${StructQBKey true}$	:i endfunction]Script get_random_song 0x8de42530 [	${StructQBKey filter_songs_script = 0x00000000}$	:i $get_savegame_from_controller$$controller$ = (~$primary_controller$)	:i if (~$random_songs_on_disc_only$ = %i(1))		:i $GetSonglistSize$${StructQBKey on_disc_only = true}$	:i else 		:i $GetSonglistSize$	:i endif	:i $printf$%s("get_random_song: songlist size %d")$d$ = %GLOBAL%$array_size$	:i if (%GLOBAL%$array_size$ <= %i(0))		:i $scriptassert$${StructString 0x00000000 = "get_random_song: Unexpected songlist size 0"}$	:i endif	:i %GLOBAL%$iterations$ = %i(0)	:i while 	:i $getrandomvalue$$name$ = $index$$integer$$a$ = %i(0)$b$ = (%GLOBAL%$array_size$%i(4294967295))	:i $use_song$ = $true$	:i $GetSonglistChecksum$$index$ = %GLOBAL%$index$	:i $accept_song$ = $true$	:i if $GotParam$${StructQBKey reject_song}$		:i if (%GLOBAL%$reject_song$ = %GLOBAL%$song_checksum$)			:i $accept_song$ = $false$		:i endif	:i endif	:i if (%GLOBAL%$filter_songs_script$ !== $[00000000]$)		:i if NOT %GLOBAL%$filter_songs_script$$song$ = %GLOBAL%$song_checksum$			:i $accept_song$ = $false$		:i endif	:i endif	:i if (%GLOBAL%$accept_song$ = $true$)		:i if $issongavailable$$song$ = %GLOBAL%$song_checksum$$savegame$ = %GLOBAL%$savegame$			:i if $is_song_downloaded$$song_checksum$ = %GLOBAL%$song_checksum$				:i continue			:i endif		:i endif	:i endif	:i %GLOBAL%$iterations$ = (%GLOBAL%$iterations$ + %i(1))	:i if (%GLOBAL%$iterations$ > %i(1000))		:i if (%GLOBAL%$filter_songs_script$ !== $[00000000]$)			:i %GLOBAL%$filter_songs_script$$song$ = $[00000000]$$panic$ = %i(1)		:i endif		:i %GLOBAL%$iterations$ = %i(0)	:i endif	:i loop_to 	:i $printf$%s("get_random_song: picked %s")$s$ = %GLOBAL%$song_checksum$	:i return $song$ = %GLOBAL%$song_checksum$	:i endfunction]Script wait_for_start_gem_scroller_completion 0x8b6e6af2 [	:i $printscriptinfo$${StructString 0x00000000 = "wait_for_start_gem_scroller_completion"}$	:i while 	:i if (~$start_gem_scroller_running$ = %i(0))		:i continue	:i elseif (~$songtime_paused$ = %i(1))		:i $change$${StructInt songtime_paused = 0}$	:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i endfunction]Script start_gem_scroller a044ef13 [	${		StructInt starttime = 0		StructInt practice_intro = 0		StructInt endtime = 99999999		StructInt loading_transition = 0		StructInt restarting = 0		StructInt autolaunched_game = 0	}$		:i $GetTrueStartTime$${StructQBKey out = Load_StartTime}$	:i if (~$g_has_inited_highway_scale_targets$ = %i(0))		:i $ResetYieldInfo$${StructQBKey yield = false}$	:i endif	:i $yield$	:i if (~$g_memory_check_fragmentation$ = %i(1))		:i $GameCheckFragmentation$${StructQBString allowed_list = g_heaps_allowed_fragmentation}$		:i $EnableCompactPoolProfile$		:i $dumpcompactpoolprofile$	:i endif	:i $Playlist_GetCurrentSong$	:i $song$ = %GLOBAL%$current_song$	:i if (~$game_mode$ = $freeplay$)		:i $reset_song_time$${StructInt starttime = -100000}$	:i endif	:i if $quest_progression_is_chapter_rush$		:i $reset_song_time$${StructInt starttime = -100000}$	:i endif	:i if $quest_progression_is_chapter_finale$		:i $reset_song_time$${StructInt starttime = -100000}$	:i endif	:i if (%GLOBAL%$song$ = $jamsession$)		:i $reset_song_time$${StructInt starttime = -100000}$	:i endif	:i $change$${StructInt start_gem_scroller_running = 1}$	:i $OnExitRun$${StructQBKey start_gem_scroller_exit}$	:i if $GotParam$${StructQBKey song_name}$		:i $printscriptinfo$${StructQBStringQs 0x03ac90f0}$		:i $dump$		:i $scriptassert$${StructQBStringQs 0x1f7beb4e}$	:i endif	:i $gamemode_gettype$	:i $determine_if_moments_should_play$	:i $yield$	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i if $GotParam$${StructQBKey pak}$		:i if NOT $StructureContains$${				StructQBString structure = LevelZones				StructQBString current_level			}$						:i $scriptassert$${				StructString 0x00000000 = "No level named %s, check LevelZones in venuelist.q for available levels"				StructQBString s = current_level			}$					:i endif		:i if NOT (%GLOBAL%$pak$ = ((~$LevelZones$->~$current_level$)->$zone$))			:i if (%GLOBAL%$autolaunched_game$ = %i(0))				:i $SetViewportProperties$${					StructQBKey viewport = bg_viewport					StructQBKey active = false				}$								:i $wait_for_deferred_rendering$				:i $crowd_system_deinit$				:i $wait_for_deferred_rendering$				:i $venue_system_init$${StructInt block_scripts = 0}$				:i $wait_for_deferred_rendering$				:i $crowd_system_init$				:i $wait_for_deferred_rendering$				:i $SetViewportProperties$${					StructQBKey viewport = bg_viewport					StructQBKey active = true				}$								:i $set_game_system_status$${					StructQBKey system = crowd					StructQBKey state = on				}$								:i $set_game_system_status$${					StructQBKey system = venue					StructQBKey state = on				}$							:i endif		:i endif	:i endif	:i $yield$	:i $guitar_support_init_audio$:s{		:i $loading_transition$ = %GLOBAL%$loading_transition$		:i $restarting$ = %GLOBAL%$restarting$	:i :s}	:i $change$${StructInt g_star_power_verb_is_on = 0}$	:i %GLOBAL%$note_input$ = ~$disable_note_input$	:i $change$${StructInt disable_note_input = 1}$	:i $change$$last_start_pressed_device$ = (~$primary_controller$)	:i $unpause_loading_scripts$	:i $reset_pause_history$	:i if (%GLOBAL%$type$ = $quickplay$)		:i $spawnscriptnow$$request_friend_stats$$params$ = :s{$song$ = %GLOBAL%$song$:s}	:i endif	:i if ((~$current_transition$) = $encore$ OR (~$current_transition$) = $celebintro$)		:i $GetPakManCurrentName$${StructQBKey map = zones}$		:i if (~$current_transition$ = $encore$)			:i $FormatText$$checksumname$ = $event$%s("%s_encore_Setup")$s$ = %GLOBAL%$pakname$		:i else 			:i $FormatText$$checksumname$ = $event$%s("%s_celebintro_Setup")$s$ = %GLOBAL%$pakname$		:i endif		:i if $ScriptExists$%GLOBAL%$event$			:i %GLOBAL%$event$		:i endif	:i endif	:i $guitar_support_init_players$ isNull 	:i $guitar_support_load_anims$${StructQBKey state = ingame}$	:i if NOT $quest_progression_is_chapter_rush$		:i $unhide_band$	:i endif	:i if ((~$g_dynamic_ad_support_venue_ads$) !== %i(0))		:i $dynamic_ad_get_current_venue_zone_checksum$		:i $spawnscriptnow$$dynamic_ad_start$$params$ = :s{$mode$ = $venue$$zone$ = (%GLOBAL%$zone$):s}	:i endif	:i if (~$end_credits$ = %i(2))		:i $change$${StructInt end_credits = 0}$	:i endif	:i $guitar_support_init_venue$$loading_transition$ = %GLOBAL%$loading_transition$	:i $yield$	:i $guitar_support_load_song$:s{		:i $song$ = %GLOBAL%$song$		:i $song_start_time$ = %GLOBAL%$starttime$	:i :s}	:i $get_song_section_array$$player$ = %GLOBAL%$player$	:i $change$$current_section_array$ = %GLOBAL%$song_section_array$	:i $change$${StructInt current_section_array_entry = 0}$	:i if (%GLOBAL%$loading_transition$ = %i(0))		:i $change$${StructInt playing_song = 1}$	:i endif	:i if NOT $musicstudio_mainobj$.$musicstudio_isinmusicstudio$		:i $guitar_support_init_band$$loading_transition$ = %GLOBAL%$loading_transition$$async$ = %i(1)	:i endif	:i $change$${StructInt g_start_streamload = 1}$	:i $BandManager_InvisibleCharactersCheat$	:i $BandManager_AirGuitarCheat$	:i if $globalexists$${StructQBKey name = Cheat_SoundCheckMode}$		:i $options_cheats_set_soundcheck$$value$ = (~$Cheat_SoundCheckMode$)	:i endif	:i $PushUnsafeForShutdown$${		StructQBKey context = gameplay		StructQBKey type = unchecked	}$		:i $yield$	:i $audio_ui_menu_music_off$	:i if $ScriptExists$${StructQBKey audio_crowd_play_swells_during_stats_screen}$		:i $KillSpawnedScript$${StructQBKey name = audio_crowd_play_swells_during_stats_screen}$	:i endif	:i if $isSoundEventplaying$${StructQBKey Surge_During_Stats_Screen}$		:i $stopsoundevent$${			StructQBKey Surge_During_Stats_Screen			StructFloat fade_time = 1.5			StructQBKey fade_type = linear		}$			:i endif	:i $yield$	:i $change$$current_starttime$ = %GLOBAL%$starttime$	:i $change$$current_endtime$ = %GLOBAL%$endtime$	:i $change$${StructInt showing_raise_axe = 0}$	:i $yield$	:i $call_startup_scripts$ isNull $song_name$ = %GLOBAL%$song$	:i $yield$	:i $Playlist_GetSize$	:i $change$$g_songlist_playlist_size$ = %GLOBAL%$playlist_size$	:i $KillSpawnedScript$${StructQBKey name = switch_to_no_band_camera}$	:i $stop_cameracut$	:i $guitar_support_load_hud$ isNull 	:i $starttimeafterintro$ = %GLOBAL%$starttime$	:i if (~$current_transition$ = $None$)		:i if $GetNodeFlag$${StructQBKey ls_encore_post}$			:i $change$${StructQBKey current_transition = restartencore}$		:i else 			:i $change$${StructQBKey current_transition = fastintro}$		:i endif	:i endif	:i $get_lag_values$	:i %GLOBAL%$transition_lag_offset$ = (%i(0) - %GLOBAL%$video_offset$ - %GLOBAL%$audio_offset$)	:i $yield$	:i $Transition_GetTime$$type$ = (~$current_transition$)	:i $starttime$ = (%GLOBAL%$starttime$ - %GLOBAL%$transition_time$ - %GLOBAL%$transition_lag_offset$)	:i if (~$finalbandintro_transition_playing$ = %i(1))		:i $Transition_GetTime$${StructQBKey type = FinalBandIntro}$		:i $starttime$ = (%GLOBAL%$starttime$ - %GLOBAL%$transition_time$)	:i endif	:i if (%GLOBAL%$loading_transition$ = %i(0))		:i $yield$		:i $setslomo$${StructFloat 0.0010000000474974513}$		:i $reset_song_time$$starttime$ = %GLOBAL%$starttime$	:i endif	:i $yield$	:i if NOT (~$use_character_debug_cam$ = %i(1))	:i endif	:i $yield$	:i $Select_Visualizer_Bank$	:i $select_initial_scene_swap$$restarting$ = %GLOBAL%$restarting$	:i if (~$game_mode$ = $practice$)		:i $practicemode_init$	:i endif	:i $yield$${StructString 0x00000000 = "SongAudioLoad"}$	:i $GetGlobalTags$${StructQBKey user_options}$	:i $yield$	:i $GetArraySize$${		StructQBString currently_holding		StructQBKey param = holding_size	}$		:i $holding_count$ = %i(0)	:i while 	:i $SetArrayElement$$arrayName$ = $currently_holding$$globalarray$$index$ = %GLOBAL%$holding_count$$newValue$ = %i(0)	:i $holding_count$ = (%GLOBAL%$holding_count$ + %i(1))	:i loop_to %GLOBAL%$holding_size$	:i $yield$	:i $launch_fill_array_iterator$$song$ = %GLOBAL%$song$	:i $yield$	:i $create_highways_and_hud$ = $true$	:i if $ScreenElementExists$${StructQBKey id = hud_root}$		:i $create_highways_and_hud$ = $false$	:i endif	:i if (%GLOBAL%$create_highways_and_hud$ = $true$)		:i $create_highway_root_window$		:i $yield$		:i $setup_band_hud$		:i $yield$${StructString 0x00000000 = "setup_band_hud"}$	:i elseif (~$game_mode$ = $freeplay$)		:i $freeplay_destroy_stats_ui$	:i endif	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i if (%GLOBAL%$player$ = %i(4294967295))			:i continue		:i endif		:i $getplayerinfo$%GLOBAL%$player$$difficulty$		:i $yield$		:i $getplayerinfo$%GLOBAL%$player$$is_onscreen$$out$ = $player_on_screen$		:i $GetGlobalTags$${StructQBKey user_options}$		:i $getplayerinfo$%GLOBAL%$player$$part$		:i if (%GLOBAL%$player_on_screen$)			:i if (%GLOBAL%$create_highways_and_hud$ = $true$)				:i if (%GLOBAL%$part$ !== $Vocals$)					:i %GLOBAL%$skip_highway_move$ = $false$					:i %GLOBAL%$highway_alpha_in$ = %i(0)					:i if (%GLOBAL%$type$ = $freeplay$)						:i %GLOBAL%$skip_highway_move$ = $true$					:i endif					:i if $song_has_delayed_intro$$song$ = %GLOBAL%$song$						:i $alpha_in$ = %i(1)					:i elseif $song_alpha_in_highway$$song$ = %GLOBAL%$song$						:i $alpha_in$ = %i(1)					:i endif					:i $gamemode_gettype$					:i if (%GLOBAL%$type$ !== $career$)						:i $alpha_in$ = %i(0)					:i endif					:i $setup_highway$ isNull $skip_highway_move$ = %GLOBAL%$skip_highway_move$$alpha_in$ = %GLOBAL%$alpha_in$				:i else 					:i $SetArrayElement$$globalarray$$arrayName$ = $highway_pos_table$$index$ = (%GLOBAL%$player$%i(4294967295))$newValue$ = (~$highway_guitar1$)				:i endif			:i else 				:i if (%GLOBAL%$part$ !== $Vocals$)					:i $setup_player_instrument_icon$$player$ = %GLOBAL%$player$				:i endif			:i endif		:i endif		:i $yield$${StructString 0x00000000 = "setup_highway"}$		:i $yield$		:i if (%GLOBAL%$player_on_screen$ = %i(1))			:i $gem_scroller$ isNull $song_name$ = %GLOBAL%$song$		:i else 			:i $SetPlayerInfo$%GLOBAL%$player$$current_song_name$ = %GLOBAL%$song$			:i $getplayerinfo$%GLOBAL%$player$$server_id$			:i $CreatePlayerServer$$id$ = %GLOBAL%$server_id$$player$ = %GLOBAL%$player$			:i $AddNetworkPlayerOutputs$$id$ = %GLOBAL%$server_id$$player$ = %GLOBAL%$player$$onscreen$ = %i(0)			:i if NOT $ChecksumEquals$$a$ = %GLOBAL%$type$$b$ = $competitive$				:i $add_player_to_competitive_scoreboard$$player$ = %GLOBAL%$player$			:i endif		:i endif		:i $yield$${StructString 0x00000000 = "ss gem_scroller"}$		:i if $playerinfoequals$%GLOBAL%$player$$is_local_client$ = %i(1)			:i $SpawnScriptLater$$check_for_star_power$$params$ = :s{ isNull :s}		:i endif		:i $yield$		:i if $playerinfoequals$%GLOBAL%$player$$is_local_client$ = %i(1)			:i $calc_songscoreinfo$$player$ = %GLOBAL%$player$		:i endif		:i if (%GLOBAL%$player_on_screen$ = %i(1))			:i if (%GLOBAL%$part$ !== $Vocals$)				:i $DifficultyChanged$$player$ = %GLOBAL%$player$			:i endif		:i endif		:i $yield$		:i if NOT $GotParam$${StructQBKey no_score_update}$			:i $spawnscriptnow$$update_score_fast$$params$ = :s{$player$ = %GLOBAL%$player$$player_on_screen$ = %GLOBAL%$player_on_screen$:s}		:i endif		:i if (%GLOBAL%$type$ = $freeplay$)			:i $get_highway_hud_menu_parent$$player$ = %GLOBAL%$player$			:i if $ScreenElementExists$$id$ = %GLOBAL%$menu_parent$				:i %GLOBAL%$menu_parent$.$obj_killspawnedscript$$name$ = $freeplay_dropout_player_if_inactive$				:i %GLOBAL%$menu_parent$.$obj_spawnscript$$freeplay_dropout_player_if_inactive$$params$ = :s{$player$ = %GLOBAL%$player$:s}				:i %GLOBAL%$menu_parent$.$obj_killspawnedscript$$name$ = $freeplay_controller_pulling_observer$				:i %GLOBAL%$menu_parent$.$obj_spawnscript$$freeplay_controller_pulling_observer$$params$ = :s{$player$ = %GLOBAL%$player$:s}			:i endif		:i endif		:i if (%GLOBAL%$song$ = $jamsession$)			:i $spawnscriptnow$$jam_input_whammy_spawned$$id$ = $jam_input_spawns$$params$ = :s{$player$ = %GLOBAL%$player$:s}		:i endif		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i $yield$	:i $GetNumPlayersInGame$${StructQBKey out = backup_vocals_num_players}$	:i if (~$g_backup_vocals_enabled$ = %i(1) AND %GLOBAL%$backup_vocals_num_players$ <= %i(3))		:i $GetFirstPlayer$${StructQBKey out = backup_vocals_first_player}$		:i $getplayerinfo$%GLOBAL%$backup_vocals_first_player$$server_id$		:i $AddBackupVocalsHighway$$id$ = %GLOBAL%$server_id$	:i endif	:i $create_highway_visualizer$	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i $yield$	:i if (%GLOBAL%$loading_transition$ = %i(0))		:i if (~$game_mode$ !== $tutorial$)			:i if NOT (~$game_mode$ = $practice$)				:i $apply_band_logo_to_venue$${StructQBKey step = apply}$			:i endif		:i endif	:i endif	:i $yield$	:i $audio_effects_set_guitar_verb_and_echo_to_dry$	:i if (%GLOBAL%$song$ = $jamsession$)		:i $spawnscriptnow$${StructQBKey audio_crowd_jam_ghtunes_adjust_crowd_from_track_levels}$		:i $begin_jam_song$	:i else 		:i $spawnscriptnow$${StructQBKey audio_gameplay_check_song_rms}$		:i $spawnscriptnow$${StructQBKey audio_microphone_auto_gain}$	:i endif	:i $GetTrueElapsedTime$$starttime$ = %GLOBAL%$Load_StartTime$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$^[537b55d7]^$d$ = %GLOBAL%$elapsedtime$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $finalprintf$${StructQBStringQs 0x5e3479f4}$	:i $yield$	:i if (%GLOBAL%$loading_transition$ = %i(1))		:i $PopUnsafeForShutdown$${			StructQBKey context = gameplay			StructQBKey type = unchecked		}$				:i $ui_event_get_top$		:i if ((%GLOBAL%$base_name$ = %s("song_breakdown")) OR (%GLOBAL%$base_name$ = %s("song_breakdown_competitive")))			:i if (~$autolaunch_startnow$ = %i(1))				:i $gamemode_gettype$				:i if (%GLOBAL%$type$ = $quickplay$)					:i $ui_song_breakdown_continue_to_next_screen_song_transition$$device_num$ = (~$primary_controller$)				:i else 					:i $song_breakdown_add_handlers_for_song_transition$				:i endif			:i else 				:i $song_breakdown_add_handlers_for_song_transition$			:i endif		:i elseif (%GLOBAL%$base_name$ = %s("quest_transformation_info"))			:i $ui_quest_transformation_add_handlers$		:i elseif (%GLOBAL%$base_name$ = %s("quest_breakdown"))			:i if $quest_progression_is_chapter_rush$				:i $Transition_Wait$			:i elseif $quest_progression_is_chapter_finale$				:i $Transition_Wait$			:i endif			:i $ui_quest_breakdown_add_handlers$		:i endif		:i while 		:i if ((~$songtime_paused$) = %i(0))			:i continue		:i endif		:i $wait$${			StructInt 5			StructQBKey gameframes		}$				:i loop_to 		:i if (~$shutdown_game_for_signin_change_flag$ = %i(1))			:i if (%GLOBAL%$base_name$ = %s("quest_breakdown") OR %GLOBAL%$base_name$ = %s("voting") OR %GLOBAL%$base_name$ = %s("song_breakdown") OR %GLOBAL%$base_name$ = %s("song_breakdown_competitive") OR %GLOBAL%$base_name$ = %s("quest_transformation_info"))				:i $change$${StructQBKey current_transition = None}$				:i $KillSpawnedScript$${StructQBKey name = start_gem_scroller}$			:i endif		:i endif		:i $change$${StructInt playing_song = 1}$		:i $yield$${StructString 0x00000000 = "Transition_Wait"}$		:i $stoprendering$		:i $setslomo$${StructFloat 0.0010000000474974513}$		:i $Transition_GetTime$$type$ = (~$current_transition$)		:i $songtime$ = (%i(0) - %GLOBAL%$transition_time$ - %GLOBAL%$transition_lag_offset$ - %GLOBAL%$transition_lag_offset$)		:i $reset_song_time$$starttime$ = %GLOBAL%$songtime$	:i endif	:i $SongAudioSetupDSP$	:i $yield$	:i if (~$output_gpu_log$ = %i(1))		:i $change$${StructInt gpu_log_start_logging = 1}$	:i endif	:i if (~$is_network_game$)		:i if (%GLOBAL%$loading_transition$ = %i(0))			:i $unpausespawnedscript$${StructQBKey ui_event_block}$			:i $ui_event_wait_for_safe$			:i $generic_net_sync$${StructQBKey callback = start_first_net_song}$		:i endif	:i endif	:i $yield$	:i $gamemode_gettype$	:i if (%GLOBAL%$type$ = $competitive$)		:i if ((~$competitive_rules$ = $faceoff$) OR (~$competitive_rules$ = $team_faceoff$) OR (~$competitive_rules$ = $elimination$) OR (~$competitive_rules$ = $team_elimination$))			:i $SetScoreScaling$		:i endif	:i endif	:i $Transition_Play$$type$ = (~$current_transition$)	:i $change$${StructQBKey current_transition = None}$	:i $yield$${StructString 0x00000000 = "Transition_Play"}$	:i $KeepInGameControllersAlive$	:i $change$${StructInt check_for_unplugged_controllers = 1}$	:i $yield$	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i $yield$${StructString 0x00000000 = "wait 1 gameframe"}$	:i if (%GLOBAL%$loading_transition$ = %i(0))		:i $stoprendering$		:i $yield$${StructString 0x00000000 = "StopRendering"}$		:i $destroy_loading_screen$		:i $yield$	:i endif	:i $GameEvent_SongBegin$	:i if NOT (~$in_sing_a_long$ = $true$)		:i if (~$calibrate_lag_enabled$ = %i(0))			:i $KillSpawnedScript$${StructQBKey name = Init_Achievements}$			:i $SpawnScriptLater$${StructQBKey Init_Achievements}$		:i endif	:i endif	:i $setslomo$${StructQBString current_speedfactor}$	:i $yield$	:i if NOT (~$calibrate_lag_enabled$ = %i(1))		:i $spawnscriptnow$$begin_song_after_intro$$params$ = :s{$starttimeafterintro$ = %GLOBAL%$starttimeafterintro$:s}	:i endif	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i $init_star_power_debug$$player$ = %GLOBAL%$player$		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i $yield$	:i if (~$finalbandintro_transition_playing$ = %i(1))		:i $SpawnScriptLater$${StructQBKey wait_and_play_finalbandintro_transition}$	:i endif	:i $yield$	:i $PopUnsafeForShutdown$${		StructQBKey context = gameplay		StructQBKey type = unchecked	}$		:i $change$$disable_note_input$ = %GLOBAL%$note_input$	:i $quest_progression_demigod_hide_rest_of_band$	:i if (~$game_mode$ = $practice$)		:i $practice_mode_setup_sounds$	:i endif	:i if (~$game_mode$ = $freeplay$)		:i if (%GLOBAL%$create_highways_and_hud$ = $false$)			:i $set_active_highway_props$${				StructInt alpha = 1				StructFloat time = 0.6600000262260437			}$						:i $spawnscriptnow$${				StructQBKey prepass_delay_show				StructStruct params				{					StructHeader					{						StructFloat time = 1.00					}				}			}$					:i endif	:i endif	:i if NOT $GotParam$${StructQBKey signin_change}$		:i $spawnscriptnow$${StructQBKey game_fader}$	:i endif	:i $change$${StructFloat pause_grace_period = -1.00}$	:i endfunction]Script start_gem_scroller_exit 0x94567ba6 [	:i $change$${StructInt start_gem_scroller_running = 0}$	:i endfunction]Script prepass_delay_show e14dcda6 [	:i $wait$%GLOBAL%$time$$seconds$	:i $set_active_highway_prepass_props$${StructInt alpha = 1}$	:i endfunction]Script game_fader 0x56b43322 [	:i $wait$${		StructInt 10		StructQBKey gameframes	}$		:i $fadetoblack$${		StructQBKey Off		StructFloat time = 0.00		StructQBKey no_wait	}$		:i if (~$game_mode$ = $freeplay$)		:i $destroy_loading_screen$	:i endif	:i endfunction]Script launch_fill_array_iterator 0x7c7c43fb [	${StructInt Offset = 0}$	:i %GLOBAL%$gem_offset$ = (~$time_gem_offset$ - %GLOBAL%$Offset$)	:i $get_lag_values$	:i %GLOBAL%$gem_offset$ = (%GLOBAL%$gem_offset$ - %GLOBAL%$audio_offset$)	:i %GLOBAL%$gem_offset$ = (%GLOBAL%$gem_offset$ - %GLOBAL%$video_offset$)	:i $part_idx$ = %i(0)	:i $parts_list$ = :a{$guitar$$Bass$$drum$:a}	:i while 	:i $get_notetrack_part_text$$part$ = (%GLOBAL%$parts_list$:a{%GLOBAL%$part_idx$:a})	:i $easy_scroll_time$ = (~$difficulty_list_props$->$easy$->$scroll_time$)	:i $fill_input_offset$ = (((%GLOBAL%$easy_scroll_time$ - ~$destroy_time$) * %f(1000.0)) + %GLOBAL%$gem_offset$ + %f(1000.0))	:i $SpawnScriptLater$$gem_iterator$$params$ = :s{$iterator_text$ = %s("fill_array")$song_name$ = %GLOBAL%$song$$part$ = %GLOBAL%$part$$part_crc$ = (%GLOBAL%$parts_list$:a{%GLOBAL%$part_idx$:a})	:i $time_offset$ = %GLOBAL%$fill_input_offset$$strum_function$ = $fill_input_array$$skipleadin$ = (%GLOBAL%$easy_scroll_time$ * %f(1000.0))$not_player_specific$ = $true$$add_part_to_event_id$ = $true$$use_expert_plus$ = %i(1):s}	:i $part_idx$ = (%GLOBAL%$part_idx$ + %i(1))	:i loop_to %i(3)	:i endfunction]Script wait_and_play_finalbandintro_transition 0x44e96aa1 [	:i $FinalBandIntro_TransitionSetup$	:i $Transition_Wait$	:i $Transition_Play$${StructQBKey type = FinalBandIntro}$	:i endfunction]Script begin_song_after_intro 0x96f70850 [	:i while 	:i $getsongtimems$	:i if (%GLOBAL%$time$ >= %GLOBAL%$starttimeafterintro$)		:i continue	:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i $GMan_SendCallbackToAllGoals$${StructString suffix = "song_started"}$	:i $SongAudioPlay$	:i if NOT $cd$		:i $GPUSpikeCapture$	:i endif	:i endfunction]Script kill_gem_scroller ddb5ca03 [	${		StructInt no_render = 0		StructQBKey type = normal		StructInt stop_song = 1		StructInt destroy_band = 1	}$		:i $stop_rewind_sound_FX$	:i if (%GLOBAL%$type$ = $normal$)		:i $PushUnsafeForShutdown$${			StructQBKey context = gameplay			StructQBKey type = unchecked		}$				:i if (~$is_network_game$ = %i(1))			:i $kill_intro_celeb_ui$		:i endif		:i $printf$${StructQBStringQs 0x60e6d670}$		:i if NOT $GotParam$${StructQBKey restarting}$			:i $stoprendering$		:i endif		:i $disable_highway_prepass$		:i $printf$${StructQBStringQs 0x1395270d}$		:i $invalidate_globaltags$		:i $printf$${StructQBStringQs 0x9c9eabc0}$	:i endif	:i if ((~$g_dynamic_ad_support_venue_ads$) !== %i(0))		:i $spawnscriptnow$${StructQBKey dynamic_ad_stop}$	:i endif	:i $lightshow_clear_mood_override_reasons$	:i $change$${StructInt g_crowd_in_jam_mode_song_state = 0}$	:i $ChangeGlobalInteger$${		StructQBKey global_name = g_crowd_allow_Transition		StructInt new_value = 1	}$		:i $change$$last_start_pressed_device$ = (~$primary_controller$)	:i if NOT (%GLOBAL%$type$ = $restart$)		:i $LaunchGemEvent$${StructQBKey event = kill_objects}$		:i $DestroyPlayerServer$${StructQBKey id = all}$		:i if (%GLOBAL%$stop_song$ = %i(1))			:i $SongAudioDeInit$${StructInt no_script_wait = 1}$		:i endif		:i $Kill_StarPower_Camera$${StructInt changecamera = 0}$		:i $SetPlayerInfo$${			StructInt 1			StructFloat star_power_amount = 0.00		}$				:i $SetPlayerInfo$${			StructInt 2			StructFloat star_power_amount = 0.00		}$				:i $SetPlayerInfo$${			StructInt 3			StructFloat star_power_amount = 0.00		}$				:i $SetPlayerInfo$${			StructInt 4			StructFloat star_power_amount = 0.00		}$				:i $Kill_StarPower_StageFX$${			StructInt player = 1			StructInt ifempty = 0		}$				:i $Kill_StarPower_StageFX$${			StructInt player = 2			StructInt ifempty = 0		}$				:i $Kill_StarPower_StageFX$${			StructInt player = 3			StructInt ifempty = 0		}$				:i $Kill_StarPower_StageFX$${			StructInt player = 4			StructInt ifempty = 0		}$				:i $change$${StructInt showing_raise_axe = 0}$		:i if (~$game_mode$ = $practice$)			:i $practicemode_deinit$		:i endif		:i $notemap_deinit$		:i $destroy2dparticlesystem$${StructQBKey id = all}$		:i $KillSpawnedScript$${StructQBKey name = Do_StarPower_TeslaFX}$		:i $KillSpawnedScript$${StructQBKey name = Create_StarPower_TeslaFX}$	:i endif	:i if NOT (%GLOBAL%$type$ = $outro$)		:i if $ScreenElementExists$${StructQBKey id = starpower_container_leftp1}$			:i $LegacyDoScreenElementMorph$${				StructQBKey id = starpower_container_leftp1				StructInt alpha = 0			}$					:i endif		:i if $ScreenElementExists$${StructQBKey id = starpower_container_leftp2}$			:i $LegacyDoScreenElementMorph$${				StructQBKey id = starpower_container_leftp2				StructInt alpha = 0			}$					:i endif		:i if $ScreenElementExists$${StructQBKey id = starpower_container_rightp1}$			:i $LegacyDoScreenElementMorph$${				StructQBKey id = starpower_container_rightp1				StructInt alpha = 0			}$					:i endif		:i if $ScreenElementExists$${StructQBKey id = starpower_container_rightp2}$			:i $LegacyDoScreenElementMorph$${				StructQBKey id = starpower_container_rightp2				StructInt alpha = 0			}$					:i endif		:i $kill_debug_elements$		:i $GameEvent_VenueExit$		:i $GuitarEvent_VenueExit$		:i $destroy_credits_menu$		:i $deinit_star_power_debug$		:i $KillSpawnedScript$${StructQBKey name = wait_and_play_you_rock_movie}$		:i $KillSpawnedScript$${StructQBKey name = star_power_activate_and_drain}$		:i $KillSpawnedScript$${StructQBKey name = highway_pulse_multiplier_loss}$		:i $stop_custom_song$		:i $KillSpawnedScript$${StructQBKey name = guitar_jam_drum_playback}$		:i $KillSpawnedScript$${StructQBKey name = jam_input_whammy_spawned}$		:i $jam_stop_all_samples$		:i $jam_deinit_reverb$	:i endif	:i $got_param_restarting$ = $false$	:i if $GotParam$${StructQBKey restarting}$		:i $got_param_restarting$ = $true$	:i endif	:i $GetMaxLocalPlayers$	:i $player$ = %i(1)	:i while 	:i if NOT (%GLOBAL%$type$ = $outro$)		:i $SetPlayerInfo$%GLOBAL%$player$$star_power_used$ = %i(0)		:i $SetPlayerInfo$%GLOBAL%$player$$whammy_on$ = %i(0)	:i endif	:i if NOT (%GLOBAL%$type$ = $outro$)		:i if (~$game_mode$ !== $freeplay$ OR (%GLOBAL%$type$ = $normal$ AND %GLOBAL%$got_param_restarting$ = $false$))			:i $destroy_highway$ isNull 		:i endif	:i endif	:i if NOT (%GLOBAL%$type$ = $restart$)		:i if (~$game_mode$ !== $freeplay$)			:i $vocals_destroy_highway$$player$ = %GLOBAL%$player$			:i if NOT ($ScriptExists$$GuitarEvent_SongWon_Spawned$)				:i $GuitarEvent_KillSong$ isNull $loading_transition$ = %i(1)			:i endif		:i endif	:i endif	:i $getplayerinfo$%GLOBAL%$player$$bot_play$	:i if (%i(1) = %GLOBAL%$bot_play$)		:i $revertBotController$$player$ = %GLOBAL%$player$	:i endif	:i $player$ = (%GLOBAL%$player$ + %i(1))	:i loop_to %GLOBAL%$max_players$	:i if (~$g_backup_vocals_enabled$ = %i(1))		:i $backup_vocals_destroy_highway$	:i endif	:i if NOT (%GLOBAL%$type$ = $restart$)		:i $kill_startup_script$ isNull 		:i $audio_gameplay_kill_check_rms$		:i $spawnscriptnow$${StructQBKey audio_kill_microphone_auto_gain}$		:i $spawnscriptnow$${StructQBKey audio_change_celeb_globals_to_zero}$		:i $Drummer_Kill_Spawnscripts$		:i $Vocalist_Reset_Globals$		:i $autolook_kill_Spawnscripts$		:i $crowd_Kill_Spawnscripts$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_MissedNote}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_UnnecessaryNote}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_HitNotes}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_HitNote}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_StarPowerOn}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_StarPowerOff}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_StarHitNote}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_StarSequenceBonus}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_StarMissNote}$		:i $KillSpawnedScript$${StructQBKey name = Create_Revival_Highway_glow}$		:i $KillSpawnedScript$${StructQBKey name = Create_Revival_Vocal_Highway_glow}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_WhammyOn}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_WhammyOff}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_StarWhammyOn}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_StarWhammyOff}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_Note_Window_Open}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_Note_Window_Close}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_crowd_poor_medium}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_crowd_medium_good}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_crowd_medium_poor}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_crowd_good_medium}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_CreateFirstGem}$		:i $KillSpawnedScript$${StructQBKey name = star_power_activate_and_drain}$		:i $KillSpawnedScript$${StructQBKey name = highway_pulse_black}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_HitNote_Spawned}$		:i $KillSpawnedScript$${StructQBKey name = hit_note_fx}$		:i $KillSpawnedScript$${StructQBKey name = Do_StarPower_StageFX}$		:i $KillSpawnedScript$${StructQBKey name = do_starpower_camera}$		:i $KillSpawnedScript$${StructQBKey name = first_gem_fx}$		:i $KillSpawnedScript$${StructQBKey name = gem_iterator}$		:i $KillSpawnedScript$${StructQBKey name = gem_array_stepper}$		:i $KillSpawnedScript$${StructQBKey name = gem_array_events}$		:i $KillSpawnedScript$${StructQBKey name = gem_step}$		:i $KillSpawnedScript$${StructQBKey name = gem_step_end}$		:i $KillSpawnedScript$${StructQBKey name = WatchForStartPlaying_iterator}$		:i $KillSpawnedScript$${StructQBKey name = tempo_matching_iterator}$		:i $KillSpawnedScript$${StructQBKey name = MomentCamera_PlayAnim_Spawned}$		:i $KillSpawnedScript$${StructQBKey name = handle_embedded_clip_commands}$		:i $ClearMeasureCallbacks$		:i $ClearBeatCallbacks$		:i $KillSpawnedScript$${StructQBKey name = gem_scroller}$		:i $KillSpawnedScript$${StructQBKey name = button_checker}$		:i $KillSpawnedScript$${StructQBKey name = check_buttons}$		:i $KillSpawnedScript$${StructQBKey name = fretbar_update_tempo}$		:i $KillSpawnedScript$${StructQBKey name = fretbar_update_hammer_on_tolerance}$		:i $KillSpawnedScript$${StructQBKey name = move_whammy}$		:i $KillSpawnedScript$${StructQBKey name = move_highway_2d}$		:i $KillSpawnedScript$${StructQBKey name = update_score_fast}$		:i $KillSpawnedScript$${StructQBKey name = check_for_star_power}$		:i $KillSpawnedScript$${StructQBKey name = wait_for_inactive}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_PreFretbar}$		:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_Fretbar}$		:i $KillSpawnedScript$${StructQBKey name = hud_activated_star_power}$		:i $KillSpawnedScript$${StructQBKey name = net_whammy_pitch_shift}$		:i $KillSpawnedScript$${StructQBKey name = net_control_whammy_pitch_loop}$		:i $KillSpawnedScript$${StructQBKey name = star_power_whammy}$		:i $KillSpawnedScript$${StructQBKey name = show_star_power_ready}$		:i $KillSpawnedScript$${StructQBKey name = event_iterator}$		:i $KillSpawnedScript$${StructQBKey name = scriptevents_iterator}$		:i $KillSpawnedScript$${StructQBKey name = win_song}$		:i $KillSpawnedScript$${StructQBKey name = hand_note_iterator}$		:i $KillSpawnedScript$${StructQBKey name = show_coop_raise_axe_for_starpower}$		:i $KillSpawnedScript$${StructQBKey name = net_whammy_pitch_shift}$		:i $KillSpawnedScript$${StructQBKey name = Crowd_AllPlayAnim}$		:i $KillSpawnedScript$${StructQBKey name = hud_activated_star_power_spawned}$		:i $KillSpawnedScript$${StructQBKey name = play_intro}$		:i $KillSpawnedScript$${StructQBKey name = begin_song_after_intro}$		:i $KillSpawnedScript$${StructQBKey id = song_event_scripts}$		:i $Destroy_AllWhammyFX$		:i $destroy_all_lars_praticles$		:i $KillSpawnedScript$${StructQBKey name = morph_scroll_speed}$		:i $KillSpawnedScript$${StructQBKey name = intro_power_rocker}$		:i if (~$game_mode$ !== $freeplay$ OR (%GLOBAL%$type$ = $normal$ AND %GLOBAL%$got_param_restarting$ = $false$))			:i $destroy_band_hud$		:i endif		:i $destroy_intro$	:i endif	:i if NOT (%GLOBAL%$type$ = $outro$)		:i $KillSpawnedScript$${StructQBKey name = move_highway_prepass}$		:i $KillSpawnedScript$${StructQBKey name = waitAndKillHighway}$		:i $KillSpawnedScript$${StructQBKey name = testlevel_debug}$		:i $destroy_net_popup$		:i $LightShow_Shutdown$		:i $TurnOffEncoreGodray$		:i $DestroyParticlesByGroupID$${StructQBKey groupid = zoneparticles}$		:i $Transition_KillAll$		:i $KillSpawnedScript$${StructQBKey name = wait_and_play_finalbandintro_transition}$		:i $fadetoblack$${			StructQBKey Off			StructQBKey id = finalbattle_fade		}$				:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_SongFailed_Spawned}$		:i if NOT $GotParam$${StructQBKey for_credits_venue}$			:i $KillSpawnedScript$${StructQBKey name = GuitarEvent_SongWon_Spawned}$			:i $KillSpawnedScript$${StructQBKey name = audio_crowd_play_cheer_before_explosion}$			:i $KillSpawnedScript$${StructQBKey name = audio_gameplay_you_rock_crowd_waiting}$			:i $KillSpawnedScript$${StructQBKey name = waitAndKillHighway}$			:i $KillSpawnedScript$${StructQBKey name = wait_and_play_you_rock_movie}$			:i $KillSpawnedScript$${StructQBKey name = create_exploding_text}$		:i endif		:i $deinit_jam_audio$${StructQBKey keep_drumkit}$	:i endif	:i if (%GLOBAL%$type$ = $outro$)		:i if $GotParam$${StructQBKey kill_cameracuts_iterator}$			:i $KillSpawnedScript$${StructQBKey name = cameracuts_iterator}$			:i $KillSpawnedScript$${StructQBKey name = autocut_cameracuts_iterator}$		:i endif		:i $SongAudioStop$ isNull 	:i endif	:i if (%GLOBAL%$type$ = $normal$)		:i $KillSpawnedScript$${StructQBKey id = zone_scripts}$		:i $GetPakManCurrentName$${StructQBKey map = zones}$		:i $FormatText$$checksumname$ = $zone_killsong$%s("%s_KillSong")$s$ = %GLOBAL%$pakname$		:i if $ScriptExists$%GLOBAL%$zone_killsong$			:i %GLOBAL%$zone_killsong$		:i endif		:i $LS_ResetVenueLights$		:i if NOT $GotParam$${StructQBKey freeplay_visualizer_hack}$			:i $destroy_movie_viewport$		:i endif		:i $destroy_bg_viewport$		:i if (~$game_mode$ !== $tutorial$)			:i if (%GLOBAL%$destroy_band$ = %i(0))				:i $Drummer_Kill_Spawnscripts$				:i $Vocalist_Reset_Globals$				:i $autolook_kill_Spawnscripts$				:i $crowd_Kill_Spawnscripts$				:i $BandManager_StopAllAnimIterators$				:i $band_unload_anim_paks$				:i $prepare_band_for_main_menu$			:i else 				:i $persistent_band_stop_and_unload_anims$			:i endif		:i endif		:i $destroy_all_camera_lock_targets$		:i $destroy_cameracuts$		:i $reset_parts_with_mic$		:i $restore_idle_faces$		:i $reset_stances_for_frontend$		:i $destroy_debug_measure_text$		:i $kill_character_scripts$		:i $reset_facial_animations$		:i $change$${StructInt check_for_unplugged_controllers = 0}$		:i $kill_practice_scripts$		:i $destroy_menu$${StructQBKey menu_id = you_rock_container}$		:i $KillMovie$${StructInt textureslot = 1}$	:i endif	:i if (%GLOBAL%$type$ = $normal$)		:i $printf$${StructQBStringQs 0x0c77f0ad}$		:i $wait$${			StructInt 2			StructQBKey gameframes		}$				:i $printf$${StructQBStringQs fa6acfe6}$		:i if (%GLOBAL%$stop_song$ = %i(1))			:i $SongAudioStop$		:i endif		:i if NOT (%GLOBAL%$no_render$ = %i(1))			:i if (~$shutdown_game_for_signin_change_flag$ = %i(0))				:i $startrendering$			:i endif		:i endif		:i $printf$${StructQBStringQs ad55869c}$		:i $PopUnsafeForShutdown$${			StructQBKey context = gameplay			StructQBKey type = unchecked		}$				:i $change$${StructInt playing_song = 0}$		:i $broadcastevent$${StructQBKey type = kill_gem_scroller_done}$	:i endif	:i $Destroy_Band_Failing_Vignette$	:i $KillSpawnedScript$${StructQBKey name = do_diff_change_spawned}$	:i $KillSpawnedScript$${StructQBKey name = wait_and_change_difficulty}$	:i $KillSpawnedScript$${StructQBKey name = BM_Wait_For_Death}$	:i $kill_highway_visualizer$	:i $kill_pause_curtain$${StructFloat time = 0.00}$	:i $kill_all_achievement_scripts$	:i if (~$game_mode$ = $freeplay$)		:i $set_all_highway_prepass_props$${StructInt alpha = 0}$		:i $set_all_highway_props$${			StructInt alpha = 0			StructFloat time = 0.6600000262260437		}$			:i endif	:i endfunction]Script restart_gem_scroller 0x86786c00 [	${		StructInt no_render = 0		StructInt loading_transition = 0		StructInt restarting = 1	}$		:i while 	:i if (~$g_gem_scrollers_are_go$ = %i(1))		:i continue	:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i $yield$	:i $PushUnsafeForShutdown$${		StructQBKey context = gameplay		StructQBKey type = unchecked	}$		:i $change$${StructInt net_pause = 0}$	:i $disable_pause$	:i if $GotParam$${StructQBKey replay}$		:i if $are_replays_enabled$			:i $change$${StructQBKey input_mode = play}$			:i $ReadDataBuffer$$name$ = $replay$$filename$ = %GLOBAL%$replay$			:i $DataBufferGetChecksum$${StructQBKey name = replay}$			:i %GLOBAL%$song_name$ = %GLOBAL%$checksum$			:i $DataBufferGetChecksum$${StructQBKey name = replay}$			:i $change$$current_transition$ = %GLOBAL%$checksum$			:i $DataBufferGetInt$${StructQBKey name = replay}$			:i if (%GLOBAL%$int$ > %i(0))				:i $DataBufferGetInt$${StructQBKey name = replay}$				:i $SetPlayerInfo$%i(1)$controller$ = %GLOBAL%$int$				:i $DataBufferGetInt$${StructQBKey name = replay}$				:i $SetPlayerInfo$%i(2)$controller$ = %GLOBAL%$int$				:i $DataBufferGetInt$${StructQBKey name = replay}$				:i $SetPlayerInfo$%i(3)$controller$ = %GLOBAL%$int$				:i $DataBufferGetInt$${StructQBKey name = replay}$				:i $SetPlayerInfo$%i(4)$controller$ = %GLOBAL%$int$			:i else 				:i $DataBufferGetInt$${StructQBKey name = replay}$				:i $DataBufferGetInt$${StructQBKey name = replay}$				:i $DataBufferGetInt$${StructQBKey name = replay}$				:i $DataBufferGetInt$${StructQBKey name = replay}$				:i $SetPlayerInfo$${					StructInt 1					StructInt controller = -1				}$								:i $SetPlayerInfo$${					StructInt 2					StructInt controller = -1				}$								:i $SetPlayerInfo$${					StructInt 3					StructInt controller = -1				}$								:i $SetPlayerInfo$${					StructInt 4					StructInt controller = -1				}$							:i endif			:i $DataBufferGetChecksum$${				StructQBKey name = replay				StructInt bytes = 16			}$						:i $SetPlayerInfo$%i(1)$part$ = %GLOBAL%$checksum$			:i $DataBufferGetChecksum$${				StructQBKey name = replay				StructInt bytes = 16			}$						:i $SetPlayerInfo$%i(2)$part$ = %GLOBAL%$checksum$			:i $DataBufferGetChecksum$${				StructQBKey name = replay				StructInt bytes = 16			}$						:i $SetPlayerInfo$%i(3)$part$ = %GLOBAL%$checksum$			:i $DataBufferGetChecksum$${				StructQBKey name = replay				StructInt bytes = 16			}$						:i $SetPlayerInfo$%i(4)$part$ = %GLOBAL%$checksum$			:i $DataBufferGetInt$${StructQBKey name = replay}$			:i %GLOBAL%$seed1$ = %GLOBAL%$int$			:i $DataBufferGetInt$${StructQBKey name = replay}$			:i %GLOBAL%$seed2$ = %GLOBAL%$int$			:i $DataBufferGetInt$${StructQBKey name = replay}$			:i %GLOBAL%$seed3$ = %GLOBAL%$int$			:i $DataBufferGetInt$${StructQBKey name = replay}$			:i %GLOBAL%$seed4$ = %GLOBAL%$int$			:i $DataBufferGetInt$${StructQBKey name = replay}$			:i %GLOBAL%$seed5$ = %GLOBAL%$int$			:i $DataBufferGetInt$${StructQBKey name = replay}$			:i %GLOBAL%$seed6$ = %GLOBAL%$int$			:i $SetRandomSeeds$$seed1$ = %GLOBAL%$seed1$$seed2$ = %GLOBAL%$seed2$$seed3$ = %GLOBAL%$seed3$$seed4$ = %GLOBAL%$seed4$$seed5$ = %GLOBAL%$seed5$$seed6$ = %GLOBAL%$seed6$			:i $change$${StructInt replay_suspend = 1}$		:i endif	:i else 		:i $change$${StructQBKey input_mode = record}$	:i endif	:i $yield$	:i if (%GLOBAL%$loading_transition$ = %i(0))		:i $pausegame$	:i endif	:i %GLOBAL%$allow_unfocus$ = %i(1)	:i $ui_event_get_top$	:i if ((%GLOBAL%$base_name$ = %s("song_breakdown")) AND (~$last_song_played$ = $jamsession$))		:i $printf$${			StructQBKey channel = bkutcher			StructQBStringQs bc19ca49		}$				:i %GLOBAL%$allow_unfocus$ = %i(0)	:i endif	:i if (%GLOBAL%$allow_unfocus$ = %i(1))		:i $LaunchEvent$${			StructQBKey type = unfocus			StructQBKey target = root_window		}$			:i endif	:i $yield$	:i if (%GLOBAL%$loading_transition$ = %i(0))		:i $kill_gem_scroller$$no_render$ = %GLOBAL%$no_render$$restarting$		:i $PushUnsafeForShutdown$${			StructQBKey context = gameplay			StructQBKey type = unchecked		}$			:i endif	:i $yield$${StructString 0x00000000 = "kill_gem_scroller"}$	:i $start_gem_scroller$ isNull 	:i $yield$	:i $change$${StructInt check_for_unplugged_controllers = 1}$	:i $UnBindGuitarControllerStatus$	:i $yield$	:i $LaunchEvent$${		StructQBKey type = focus		StructQBKey target = root_window	}$		:i $yield$	:i $KillSpawnedScript$${StructQBKey name = YieldMonitor}$	:i if (%GLOBAL%$loading_transition$ = %i(0))		:i if $GameIsPaused$			:i $gh_start_pressed$${StructInt no_sfx = 1}$		:i endif	:i endif	:i endfunction]Script reset_song_time a9f8b48f [	${StructInt starttime = 0}$	:i $change$$current_deltatime$ = (%f(1.0) / %f(60.0))	:i $change$$current_time$ = (%GLOBAL%$starttime$ / %f(1000.0))	:i if (~$input_mode$ = $play$)		:i $change$${StructInt replay_suspend = 0}$	:i endif	:i $ResetSongTimer$$starttime$ = (%GLOBAL%$starttime$ / %f(1000.0))	:i endfunction]Script fill_input_array 0x5eb30b54 [	:i $scriptassert$${StructQBStringQs 0x6838c90b}$	:i endfunction]Script create_gem 0x03ea037c [	:i $Create2DGem$ isNull 	:i endfunction]Script gem_iterator 0x2a399813 [	${		StructQBKey song_name = test		StructQBKey difficulty = easy		StructQBStringQs array_type = 0x13e59f9f		StructQBKey not_player_specific = false		StructQBKey add_part_to_event_id = false		StructString use_input_array = ""	}$		:i if (%GLOBAL%$not_player_specific$ = $false$)		:i $spawnscriptnow$$gem_array_events$$params$ = :s{ isNull :s}	:i endif	:i if (%GLOBAL%$not_player_specific$ = $false$)		:i if $playerinfoequals$%GLOBAL%$player$$part$ = $Vocals$			:i $gamemode_gettype$			:i if (%GLOBAL%$type$ !== $freeplay$)				:i return 			:i endif			:i if (%GLOBAL%$use_input_array$ = %s(""))				:i return 			:i endif		:i endif	:i endif	:i if NOT (%GLOBAL%$use_input_array$ = %s(""))		:i $get_difficulty_text_nl$$difficulty$ = %GLOBAL%$difficulty$$no_rhythm$ = %i(1)		:i $spawnscriptnow$$gem_array_stepper$$params$ = :s{ isNull :s}	:i else 		:i $spawnscriptnow$$gem_array_stepper$$params$ = :s{ isNull $difficulty$ = $easy$$difficulty_text_nl$ = %s("easy"):s}		:i $spawnscriptnow$$gem_array_stepper$$params$ = :s{ isNull $difficulty$ = $medium$$difficulty_text_nl$ = %s("medium"):s}		:i $spawnscriptnow$$gem_array_stepper$$params$ = :s{ isNull $difficulty$ = $hard$$difficulty_text_nl$ = %s("hard"):s}		:i $spawnscriptnow$$gem_array_stepper$$params$ = :s{ isNull $difficulty$ = $expert$$difficulty_text_nl$ = %s("expert"):s}		:i $spawnscriptnow$$gem_array_stepper$$params$ = :s{ isNull $difficulty$ = $expert$$difficulty_text_nl$ = %s("expert")$expert_plus$:s}	:i endif	:i endfunction]Script gem_array_events ce88e750 [	${		StructQBKey not_player_specific = false		StructQBKey add_part_to_event_id = false		Unknown [0001240067e6859a6969696900000038]		StructInt use_expert_plus = 0		StructString use_input_array = ""		StructQBKey input_array = 0x00000000		Unknown [0001270075040615696969690000007c]		StructQBKey gem_function = 0x00000000		StructQBKey strum_function = 0x00000000		StructFloat time = 0.00		Unknown [000126004494901069696969000000bc00012600d24f570c69696969000000cc00012500006485e76969696900000000]	}$		:i $getPlayerChecksum$$player$ = %GLOBAL%$player$$checksum$ = $difficulty$	:i %GLOBAL%$difficulty$ = %GLOBAL%$checksum_value$	:i $get_difficulty_text_nl$$difficulty$ = %GLOBAL%$difficulty$$no_rhythm$ = %i(1)	:i if (%GLOBAL%$use_expert_plus$ = %i(1))		:i $getPlayerInteger$$player$ = %GLOBAL%$player$$checksum$ = $double_kick_drum$		:i %GLOBAL%$double_kick_drum$ = %GLOBAL%$integer_value$		:i if (%GLOBAL%$double_kick_drum$ = %i(1))			:i %GLOBAL%$difficulty_text_nl$ = %s("expert_plus")		:i endif	:i endif	:i $get_notetrack_part_text$$player$ = %GLOBAL%$player$	:i $cleareventhandlergroup$${StructQBKey group = iterator_group}$	:i if (%GLOBAL%$not_player_specific$ = $false$)		:i $fastextendcrcplayer$$checksum$ = $gem_step_event$$player$ = %GLOBAL%$player$		:i $id$ = %GLOBAL%$out$	:i elseif (%GLOBAL%$add_part_to_event_id$ = $true$)		:i $extendcrcwithstring$$checksum$ = $gem_step_event$$string$ = %GLOBAL%$part$		:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i else 		:i $id$ = $gem_step_event$	:i endif	:i $extendcrcwithstring$$checksum$ = %GLOBAL%$id$$string$ = %GLOBAL%$iterator_text$	:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i $extendcrcwithstring$$checksum$ = %GLOBAL%$id$$string$ = %GLOBAL%$difficulty_text_nl$	:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i if (%GLOBAL%$use_input_array$ = %s(""))		:i $seteventhandler$$Response$ = $call_script$$event$ = %GLOBAL%$id$$scr$ = $gem_step$$params$ = :s{			:i $use_input_array$ = %GLOBAL%$use_input_array$			:i $input_array$ = %GLOBAL%$input_array$			:i $gem_function$ = %GLOBAL%$gem_function$			:i $strum_function$ = %GLOBAL%$strum_function$			:i $player$ = %GLOBAL%$player$			:i $difficulty$ = %GLOBAL%$difficulty$			:i $song_name$ = %GLOBAL%$song_name$			:i $skipleadin$ = %GLOBAL%$skipleadin$		:i :s}$group$ = $iterator_group$	:i else 		:i $seteventhandler$$Response$ = $call_script$$event$ = %GLOBAL%$id$$scr$ = $gem_step$$params$ = :s{			:i $use_input_array$ = %GLOBAL%$use_input_array$			:i $gem_function$ = %GLOBAL%$gem_function$			:i $strum_function$ = %GLOBAL%$strum_function$			:i $player$ = %GLOBAL%$player$			:i $difficulty$ = %GLOBAL%$difficulty$			:i $song_name$ = %GLOBAL%$song_name$			:i $skipleadin$ = %GLOBAL%$skipleadin$		:i :s}$group$ = $iterator_group$	:i endif	:i if (%GLOBAL%$not_player_specific$ = $false$)		:i $fastextendcrcplayer$$checksum$ = $gem_step_begin$$player$ = %GLOBAL%$player$		:i $id$ = %GLOBAL%$out$	:i elseif (%GLOBAL%$add_part_to_event_id$ = $true$)		:i $extendcrcwithstring$$checksum$ = $gem_step_begin$$string$ = %GLOBAL%$part$		:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i else 		:i $id$ = $gem_step_begin$	:i endif	:i $extendcrcwithstring$$checksum$ = %GLOBAL%$id$$string$ = %GLOBAL%$iterator_text$	:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i $extendcrcwithstring$$checksum$ = %GLOBAL%$id$$string$ = %GLOBAL%$difficulty_text_nl$	:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i $seteventhandler$$Response$ = $call_script$$event$ = %GLOBAL%$id$$scr$ = $gem_step_begin$$params$ = :s{:s}$group$ = $iterator_group$	:i if (%GLOBAL%$not_player_specific$ = $false$)		:i $fastextendcrcplayer$$checksum$ = $gem_step_end$$player$ = %GLOBAL%$player$		:i $id$ = %GLOBAL%$out$	:i elseif (%GLOBAL%$add_part_to_event_id$ = $true$)		:i $extendcrcwithstring$$checksum$ = $gem_step_end$$string$ = %GLOBAL%$part$		:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i else 		:i $id$ = $gem_step_end$	:i endif	:i $extendcrcwithstring$$checksum$ = %GLOBAL%$id$$string$ = %GLOBAL%$iterator_text$	:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i $extendcrcwithstring$$checksum$ = %GLOBAL%$id$$string$ = %GLOBAL%$difficulty_text_nl$	:i %GLOBAL%$id$ = %GLOBAL%$Extended_Checksum$	:i $seteventhandler$$Response$ = $call_script$$event$ = %GLOBAL%$id$$scr$ = $gem_step_end$$params$ = :s{:s}$group$ = $iterator_group$	:i if (%GLOBAL%$use_input_array$ = %s(""))		:i $fastextendcrcplayer$$checksum$ = $restart_gem_array_events$$player$ = %GLOBAL%$player$		:i %GLOBAL%$id$ = %GLOBAL%$out$		:i $seteventhandler$$Response$ = $switch_script$$event$ = %GLOBAL%$id$$scr$ = $gem_array_events$$params$ = :s{			:i $not_player_specific$ = %GLOBAL%$not_player_specific$			:i $add_part_to_event_id$ = %GLOBAL%$add_part_to_event_id$			:i $player$ = %GLOBAL%$player$			:i $use_expert_plus$ = %GLOBAL%$use_expert_plus$			:i $use_input_array$ = %GLOBAL%$use_input_array$			:i $iterator_text$ = %GLOBAL%$iterator_text$			:i $gem_function$ = %GLOBAL%$gem_function$			:i $strum_function$ = %GLOBAL%$strum_function$			:i $time$ = %GLOBAL%$time$			:i $difficulty$ = %GLOBAL%$difficulty$			:i $song_name$ = %GLOBAL%$song_name$			:i $skipleadin$ = %GLOBAL%$skipleadin$			:i $input_array$ = %GLOBAL%$input_array$		:i :s}$group$ = $iterator_group$	:i endif	:i $Block$	:i $Extended_Checksum$ = $null$	:i $iterator_text$ = %s("null")	:i $difficulty_text_nl$ = %s("null")	:i $part$ = %s("")	:i endfunction]Script gem_step 0x7f21e422 [	${		Unknown [00012700a4bf357e6969696900000018]		StructQBKey input_array = 0x00000000		StructInt array_entry = 0		Unknown [00012600cc12115e6969696900000048]		StructFloat time = 0.00		Unknown [00012600d87c352d6969696900000068]		StructQBKey gem_function = 0x00000000		StructQBKey strum_function = 0x00000000		Unknown [0001240067e6859a6969696900000098000126004494901069696969000000a800012600d24f570c69696969000000b800012500006485e76969696900000000]	}$		:i $GemStep$	:i endfunction]Script gem_step_begin ffffffff [	:i endfunction]Script gem_step_end a519ba47 [	:i $change$${StructInt quickplay_rewind_end_of_song = 1}$	:i endfunction]Script gem_array_stepper a3df8dae [	:i $gem_array_stepper_CFunc_Setup$	:i while 	:i if $gem_array_stepper_CFunc$		:i continue	:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i $gem_array_stepper_CFunc_Cleanup$	:i endfunction]Script default_startup ffffffff [	:i endfunction]Script call_startup_scripts e169c364 [	:i $change$${StructQBKey current_startup_script = default_startup}$	:i $GetGlobalTags$${StructQBKey user_options}$	:i $get_song_struct$$song$ = %GLOBAL%$song_name$	:i $setlagoffsets$$song_struct$ = %GLOBAL%$song_struct$	:i if $StructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $startup_script$		:i $change$$current_startup_script$ = (%GLOBAL%$song_struct$->$startup_script$)	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $exit_script$		:i $change$$current_exit_script$ = (%GLOBAL%$song_struct$->$exit_script$)	:i else 	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $hammer_on_measure_scale$		:i $change$$hammer_on_measure_scale$ = (%GLOBAL%$song_struct$->$hammer_on_measure_scale$)	:i else 		:i $change$${StructQBString hammer_on_measure_scale = default_hammer_on_measure_scale}$	:i endif	:i $spawnscriptnow$(~$current_startup_script$)$params$ = :s{ isNull :s}	:i endfunction]Script addlagoffsets bc4e54b1 [	:i $audio_lag_ms$ = %i(0)	:i $gem_lag_ms$ = %i(0)	:i $input_lag_ms$ = %i(0)	:i $drum_midi_lag_ms$ = %i(0)	:i $prefretbar_time$ = %i(0)	:i $GetPlatform$	:i if $StructureContains$$structure$ = %GLOBAL%$settings$$name$ = %GLOBAL%$platform$		:i $AddParams$(%GLOBAL%$settings$->%GLOBAL%$platform$)	:i endif	:i $change$$time_audio_offset$ = (~$time_audio_offset$ + %GLOBAL%$audio_lag_ms$)	:i $change$$time_gem_offset$ = (~$time_gem_offset$ + %GLOBAL%$gem_lag_ms$)	:i $change$$time_input_offset$ = (~$time_input_offset$ + %GLOBAL%$input_lag_ms$)	:i $change$$time_drum_midi_offset$ = (~$time_drum_midi_offset$ + %GLOBAL%$drum_midi_lag_ms$)	:i $change$$prefretbar_time$ = (~$prefretbar_time$ + %GLOBAL%$prefretbar_time$)	:i endfunction]Script setlagoffsets 0x65af4258 [	:i $change$${StructFloat time_audio_offset = 0.00}$	:i $change$${StructFloat time_gem_offset = 0.00}$	:i $change$${StructFloat time_input_offset = 0.00}$	:i $change$${StructFloat time_drum_midi_offset = 0.00}$	:i $change$${StructFloat prefretbar_time = 0.00}$	:i $addlagoffsets$$settings$ = (~$default_lag_settings$)	:i $practice_settings$ = $None$	:i if (~$game_mode$ = $practice$ AND ~$current_speedfactor$ !== %f(1.0))		:i if NOT $playerinfoequals$${				StructInt 1				StructQBKey part = drum			}$						:i if (~$current_speedfactor$ >= %f(0.8000000))				:i $practice_settings$ = $practice_slow_lag_settings$			:i elseif (~$current_speedfactor$ >= %f(0.6000000))				:i $practice_settings$ = $practice_slower_lag_settings$			:i else 				:i $practice_settings$ = $practice_slowest_lag_settings$			:i endif		:i else 			:i if (~$current_speedfactor$ >= %f(0.8000000))				:i $practice_settings$ = $practice_drum_slow_lag_settings$			:i elseif (~$current_speedfactor$ >= %f(0.6000000))				:i $practice_settings$ = $practice_drum_slower_lag_settings$			:i else 				:i $practice_settings$ = $practice_drum_slowest_lag_settings$			:i endif		:i endif	:i endif	:i if NOT (%GLOBAL%$practice_settings$ = $None$)		:i $addlagoffsets$$settings$ = (~%GLOBAL%$practice_settings$)	:i endif	:i if $IsDolbyDigitalEnabled$		:i $addlagoffsets$$settings$ = (~$default_lag_settings_dolbydigital$)		:i $extendcrc$%GLOBAL%$practice_settings$%s("_dolbydigital")$out$ = $practice_settings_dolbydigital$		:i if $globalexists$$name$ = %GLOBAL%$practice_settings_dolbydigital$			:i $addlagoffsets$$settings$ = (~%GLOBAL%$practice_settings_dolbydigital$)		:i endif	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $gem_offset$		:i $change$$time_gem_offset$ = (~$time_gem_offset$ + (%GLOBAL%$song_struct$->$gem_offset$))	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $input_offset$		:i $change$$time_input_offset$ = (~$time_input_offset$ + (%GLOBAL%$song_struct$->$input_offset$))	:i endif	:i endfunction]Script kill_startup_script 0x535dae5a [	:i if NOT (~$current_startup_script$ = $nothing$)		:i $KillSpawnedScript$$name$ = (~$current_startup_script$)	:i endif	:i if NOT (~$current_exit_script$ = $nothing$)		:i $spawnscriptnow$(~$current_exit_script$)$params$ = :s{ isNull :s}	:i endif	:i endfunction]Script setup_dynamic_ad_recording_for_zone 0x4d1056a1 [	${StructQBKey zone = 0x00000000}$	:i $printf$${StructQBStringQs a273b378}$	:i $printstruct$ isNull 	:i $DynamicAdManagerCommand$$func$ = $enterzone$$zone$ = %GLOBAL%$zone$	:i endfunction]SectionInteger load_venue_reapply_band_logo 0Script Load_Venue 0x0bc2b8c4 [	${StructInt block_scripts = 0}$	:i $printscriptinfo$^[a219deb2]^$v$ = (~$current_level$)	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i if $GotParam$${StructQBKey pak}$		:i if NOT $StructureContains$${				StructQBString structure = LevelZones				StructQBString current_level			}$						:i $scriptassert$${				StructString 0x00000000 = "No level named %s, check LevelZones in venuelist.q for available levels"				StructQBString s = current_level			}$					:i endif		:i if (%GLOBAL%$pak$ = ((~$LevelZones$->~$current_level$)->$zone$))			:i if (%GLOBAL%$block_scripts$ = %i(1))				:i $ResetYieldInfo$${StructQBKey yield = false}$			:i endif			:i $Transitions_ResetZone$			:i return 		:i else 			:i $printf$${				StructQBKey channel = marc				StructQBStringQs 0x993ca23d			}$						:i $change$${StructQBKey encore_transitioned_played = false}$			:i $LightShow_SetMapping$${StructQBKey Clear}$			:i $destroy_crowd_models$			:i $destroy_movie_viewport$			:i $EngineCleanupLevel$			:i $SetPakManCurrentBlock$$map$ = $zones$$pak$ = $None$$block_scripts$ = %GLOBAL%$block_scripts$		:i endif	:i else 	:i endif	:i $ResetPulseEvents$	:i $FormatText$$textname$ = $filename$%s("%s.pak")$s$ = ((~$LevelZones$->~$current_level$)->$name$)	:i $ContentFolderManager$$func$ = $get_content_folder_index_from_file$$file$ = %GLOBAL%$filename$	:i if (%GLOBAL%$device$ = $content$)		:i if (%GLOBAL%$status$ = $damaged$)			:i $downloadcontentlost$			:i return 		:i endif		:i if NOT $Downloads_OpenContentFolder$$content_index$ = %GLOBAL%$content_index$			:i $downloadcontentlost$			:i return 		:i endif	:i endif	:i if NOT $SetPakManCurrentBlock$$map$ = $zones$$pak$ = ((~$LevelZones$->~$current_level$)->$zone$)$block_scripts$ = %GLOBAL%$block_scripts$		:i $downloadcontentlost$		:i return 	:i endif	:i if (%GLOBAL%$device$ = $content$)		:i $Downloads_CloseContentFolder$$content_index$ = %GLOBAL%$content_index$	:i endif	:i $audio_effects_set_effects_by_venue_type$	:i if (~$end_credits$ = %i(0))		:i $audio_crowd_setup_based_on_zone$	:i endif	:i if $NodeFlagExists$${StructQBKey nodeflag_viewerlights}$		:i if (~$current_level$ = $load_z_viewer$ OR 			:i ~$current_level$ = $viewer$)			:i $ChangeNodeFlag$${				StructQBKey nodeflag_viewerlights				StructInt 0			}$						:i $ChangeNodeFlag$${				StructQBKey nodeflag_viewerlights				StructInt 1			}$						:i (~$default_loading_screen$->$destroy$)		:i else 			:i $ChangeNodeFlag$${				StructQBKey nodeflag_viewerlights				StructInt 0			}$					:i endif	:i endif	:i if (~$load_venue_reapply_band_logo$ = %i(1))		:i $apply_band_logo_to_venue$${StructQBKey step = apply}$		:i $change$${StructInt load_venue_reapply_band_logo = 0}$	:i endif	:i endfunction]Script Refresh_Venue 0x55ccd09e [	${StructInt block_scripts = 0}$	:i $printscriptinfo$^[69ae133c]^$v$ = (~$current_level$)	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i if $GotParam$${StructQBKey pak}$		:i if NOT $StructureContains$${				StructQBString structure = LevelZones				StructQBString current_level			}$						:i $scriptassert$${				StructString 0x00000000 = "No level named %s, check LevelZones in venuelist.q for available levels"				StructQBString s = current_level			}$					:i endif		:i if (%GLOBAL%$pak$ = ((~$LevelZones$->~$current_level$)->$zone$))			:i $ResetYieldInfo$${StructQBKey yield = false}$			:i $Transitions_ResetZone$			:i return 		:i endif	:i endif	:i endfunction]Script start_song 0x70d2d187 [	${		StructInt device_num = 0		StructInt practice_intro = 0		StructInt endtime = 999999999		StructInt do_not_pause_characters = 0	}$		:i $PushUnsafeForShutdown$${		StructQBKey context = gameplay		StructQBKey type = unchecked	}$		:i if (%GLOBAL%$do_not_pause_characters$ = %i(0))		:i $persistent_band_pause_all_characters$	:i endif	:i if (~$is_network_game$ = %i(0))		:i $xenon_singleplayer_session_init$	:i endif	:i $set_rich_presence_game_mode$	:i if (~$autotest_on$ = %i(1))		:i $change$$current_transition$ = (~$autotest_transition$)	:i elseif NOT (~$debug_current_transition$ = $None$)		:i $change$$current_transition$ = (~$debug_current_transition$)	:i else 		:i $Transition_SelectTransition$$practice_intro$ = %GLOBAL%$practice_intro$	:i endif	:i $gamemode_gettype$	:i if ((~$is_network_game$ = %i(0)) OR (%GLOBAL%$type$ = $career$))		:i if NOT $GotParam$${StructQBKey starttime}$			:i if $GotParam$${StructQBKey uselaststarttime}$				:i $starttime$ = (~$current_starttime$)			:i else 				:i $starttime$ = %i(0)			:i endif		:i endif		:i if $GotParam$${StructQBKey song_name}$			:i if (%GLOBAL%$song_name$ = $jamsession$)				:i if $musicstudio_mainobj$.$musicstudio_isinmusicstudio$					:i $Playlist_SetCurrentSong$$song$ = %GLOBAL%$song_name$				:i endif			:i else 				:i $Playlist_SetCurrentSong$$song$ = %GLOBAL%$song_name$			:i endif		:i endif		:i if NOT ($GotParam$$do_not_restart_gem_scroller$)			:i $do_not_restart_gem_scroller$ = %i(0)		:i endif		:i if (%GLOBAL%$do_not_restart_gem_scroller$ = %i(0))			:i $restart_gem_scroller$:s{				:i $starttime$ = %GLOBAL%$starttime$				:i $practice_intro$ = %GLOBAL%$practice_intro$				:i $endtime$ = %GLOBAL%$endtime$				:i $restarting$ = %i(0)			:i :s}		:i endif	:i endif	:i $change$${StructInt check_for_unplugged_controllers = 1}$	:i endfunction]Script YieldMonitor be93bc25 [	:i while 	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i $YieldPing$	:i loop_to 	:i endfunction]Script restart_song bbfd519a [	${		StructInt practice_intro = 0		StructInt loading_transition = 0	}$		:i $change$${StructInt g_gem_scrollers_are_go = 0}$	:i if (~$shutdown_game_for_signin_change_flag$ = %i(1))		:i return 	:i endif	:i $PushUnsafeForShutdown$${		StructQBKey context = gameplay		StructQBKey type = unchecked	}$		:i $disable_pause$	:i $persistent_band_pause_all_characters$	:i $change$${StructInt finalbandintro_transition_playing = 0}$	:i $Playlist_GetCurrentSong$	:i if (%GLOBAL%$loading_transition$ = %i(1))		:i $ResetYieldInfo$${StructQBKey yield = true}$		:i $KillSpawnedScript$${StructQBKey name = YieldMonitor}$		:i $spawnscriptnow$${StructQBKey YieldMonitor}$		:i $yield$		:i $BandManager_StopAllAnimIterators$		:i $Drummer_Kill_Spawnscripts$		:i $Vocalist_Reset_Globals$		:i $autolook_kill_Spawnscripts$		:i $crowd_Kill_Spawnscripts$		:i $kill_gem_scroller$${StructQBKey type = restart}$		:i $yield$${StructString 0x00000000 = "kill_gem_scroller"}$		:i $setup_bg_viewport$		:i $yield$${StructString 0x00000000 = "setup_bg_viewport"}$		:i $KillSpawnedScript$${StructQBKey name = switch_to_no_band_camera}$		:i $stop_cameracut$		:i if (%GLOBAL%$current_song$ !== $jamsession$)			:i $create_cameracuts$${StructInt in_game = 1}$		:i endif		:i $Transition_SelectTransition$$practice_intro$ = %GLOBAL%$practice_intro$		:i if (~$current_transition$ = $intro$)			:i $change$${StructQBKey current_transition = loadingintro}$		:i endif		:i $yield$		:i $songtime$ = %i(0)		:i $Transition_GetTime$${StructQBKey type = loading}$		:i $songtime$ = (%GLOBAL%$songtime$ - %GLOBAL%$transition_time$)		:i $Transition_GetTime$$type$ = (~$current_transition$)		:i $songtime$ = (%GLOBAL%$songtime$ - %GLOBAL%$transition_time$)		:i $reset_song_time$$starttime$ = %GLOBAL%$songtime$		:i $yield$		:i $gamemode_gettype$		:i if (((~$is_network_game$) = %i(1)) AND (%GLOBAL%$type$ = $competitive$ OR %GLOBAL%$type$ = $quickplay$))			:i $Transition_Play$${StructQBKey type = onlineloading}$		:i else 			:i if $quest_progression_is_chapter_rush$				:i $use_rush_outro$				:i $Transition_Play$${					StructQBKey type = RushOutro					StructInt use_song_time = 0				}$							:i elseif $quest_progression_is_chapter_finale$				:i $use_finalbattle_outro$				:i $Transition_Play$${					StructQBKey type = finalbattleoutro					StructInt use_song_time = 0				}$							:i else 				:i $Transition_Play$${StructQBKey type = loading}$			:i endif		:i endif		:i $start_song_loading$		:i $yield$		:i $UnPauseGame$		:i $yield$		:i $yield$		:i $yield$		:i $yield$		:i $persistent_band_stop_and_unload_anims$		:i $yield$		:i $load_songqpak$$song_name$ = %GLOBAL%$current_song$$async$ = %i(1)$resetZone$ = %i(1)		:i $yield$${StructString 0x00000000 = "load_songqpak"}$		:i $change$${StructInt finished_gig_band_rebuild = 0}$		:i $persistent_band_prepare_for_song$${StructInt async = 1}$	:i else 		:i $printf$${StructQBStringQs 0x224b28e2}$		:i $ResetYieldInfo$${StructQBKey yield = false}$	:i endif	:i $change$${StructInt g_gem_scrollers_are_go = 1}$	:i $yield$	:i $stopsoundevent$${StructQBKey Audio_Crowd_Fail}$	:i $yield$	:i if (%GLOBAL%$loading_transition$ = %i(0) AND %GLOBAL%$practice_intro$ = %i(0))		:i if NOT (~$debug_current_transition$ = $None$)			:i $change$$current_transition$ = (~$debug_current_transition$)		:i elseif (~$current_transition$ = $forceintro$)			:i $change$${StructQBKey current_transition = fastintro}$			:i $Transition_SelectTransition$$practice_intro$ = %GLOBAL%$practice_intro$		:i elseif (~$current_transition$ = $forcelongintro$)			:i $change$${StructQBKey current_transition = intro}$		:i elseif (~$debug_encore$)			:i $change$${StructQBKey current_transition = encore}$		:i else 			:i $change$${StructQBKey current_transition = fastintro}$			:i $Transition_SelectTransition$$practice_intro$ = %GLOBAL%$practice_intro$$restarting$ = %i(1)		:i endif		:i if (~$debug_encore$ = %i(0) AND ~$debug_career_transformations$ = %i(0))			:i if $GetNodeFlag$${StructQBKey ls_encore_post}$				:i $change$${StructQBKey current_transition = restartencore}$			:i endif		:i endif		:i $change$${StructInt debug_encore = 0}$	:i endif	:i $yield$${StructString 0x00000000 = "Select Transition Logic"}$	:i $UnPauseGame$	:i $yield$	:i $starttime$ = (~$current_starttime$)	:i if (%GLOBAL%$practice_intro$ = %i(1))		:i $starttime$ = (~$practice_start_time$)		:i $endtime$ = (~$practice_end_time$)	:i endif	:i if (%GLOBAL%$loading_transition$ = %i(0))		:i $no_render$ = %i(1)	:i else 		:i $no_render$ = %i(0)	:i endif	:i if NOT $musicstudio_mainobj$.$musicstudio_isinmusicstudio$		:i if (%GLOBAL%$current_song$ = $jamsession$)			:i $printf$${StructQBStringQs b5b862fb}$			:i if (%GLOBAL%$loading_transition$ = %i(0))				:i $hide_glitch$${StructInt num_frames = 5}$				:i $kill_gem_scroller$${StructQBKey type = normal}$				:i $jam_quickplay_get_and_start_song$${StructInt show_mainmenu_bg = 0}$			:i endif			:i return 		:i endif	:i else 		:i $create_loading_screen$	:i endif	:i if ((%GLOBAL%$loading_transition$ = %i(0)) OR (~$game_mode$ = $freeplay$))		:i $restart_gem_scroller$:s{			:i $starttime$ = %GLOBAL%$starttime$			:i $practice_intro$ = %GLOBAL%$practice_intro$			:i $endtime$ = %GLOBAL%$endtime$			:i $loading_transition$ = %GLOBAL%$loading_transition$			:i $no_render$ = %GLOBAL%$no_render$		:i :s}	:i endif	:i endfunction]Script start_song_loading d65a9b8b [	:i if $is_current_song_a_jam_session$		:i $destroy_cameracuts$		:i if NOT $get_jam_filename$${StructQBKey type = current}$			:i if $ui_event_exists_in_stack$${StructString name = "songlist"}$				:i $ui_event_wait$${					StructQBKey event = menu_back					StructStruct Data					{						StructHeader						{							StructQBKey state = UIState_songlist						}					}				}$								:i return 			:i endif		:i endif		:i $play_song_start_song_from_quickplay$:s{			:i $is_jam$ = %i(1)			:i $loading_transition$ = %i(1)			:i $filename$ = %GLOBAL%$filename$			:i $jam_display_name$ = %GLOBAL%$jam_display_name$			:i $example_song$ = %GLOBAL%$example_song$		:i :s}	:i else 		:i $ui_event_wait$${			StructQBKey event = menu_change			StructQBKey state = UIstate_finish_song_loading			StructStruct Data			{				StructHeader				{					StructInt is_jam = 0					StructInt loading_transition = 1				}			}		}$			:i endif	:i endfunction]Script debug_flash_star 0x51339c19 [	:i while 	:i $LaunchGemEvent$${StructQBKey event = debug_star}$	:i $wait$${		StructInt 8		StructQBKey gameframes	}$		:i $LaunchGemEvent$${StructQBKey event = debug_gem}$	:i $wait$${		StructInt 8		StructQBKey gameframes	}$		:i loop_to 	:i endfunction]Script cache_song_end_time 0x031ae7a4 [	:i $Playlist_GetCurrentSong$	:i $SongFileManager$$func$ = $get_song_end_time$$song_name$ = %GLOBAL%$current_song$	:i $CacheSongEndTime$$time$ = %GLOBAL%$total_end_time$	:i endfunction]Script KeepInGameControllersAlive 0x6652a2e9 [	:i $GetFirstPlayer$${StructQBKey local}$	:i $gamemode_gettype$	:i while 	:i if (%GLOBAL%$player$ < %i(0))		:i continue	:i endif	:i if (%GLOBAL%$type$ = $freeplay$)		:i if NOT $playerinfoequals$%GLOBAL%$player$$freeplay_state$ = $dropped$			:i $in_game$ = %i(1)		:i endif	:i else 		:i if $playerinfoequals$%GLOBAL%$player$$in_game$ = %i(1)			:i $in_game$ = %i(1)		:i endif	:i endif	:i if $GotParam$${StructQBKey in_game}$		:i $getplayerinfo$%GLOBAL%$player$$controller$		:i if (%GLOBAL%$controller$ < %i(4))			:i if NOT $GotParam$${StructQBKey controllers}$				:i $controllers$ = :a{:a}			:i endif			:i $AddArrayElement$$array$ = %GLOBAL%$controllers$$element$ = %GLOBAL%$controller$			:i $controllers$ = %GLOBAL%$array$		:i endif	:i endif	:i $GetNextPlayer$$player$ = %GLOBAL%$player$$local$	:i $RemoveParameter$${StructQBKey in_game}$	:i loop_to 	:i if $GotParam$${StructQBKey controllers}$		:i $KeepControllersAlive$$controllers$ = %GLOBAL%$controllers$	:i endif	:i endfunction]Script wait_for_deferred_rendering 0x62cd024f [	:i $wait$${		StructInt 8		StructQBKey gameframes	}$		:i endfunction]