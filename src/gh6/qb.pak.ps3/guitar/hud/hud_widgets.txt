Unknown [1c00000000000000000024a40000000000000000]Script HUD_attach_star_meter fd2091ad [	:i $id$ = %GLOBAL%$star_meter_id$	:i $gamemode_gettype$	:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$star_meter_id$		:i $printf$${			StructQBKey channel = zdebug			StructQBStringQs 0x60507be7		}$				:i return 	:i endif	:i %GLOBAL%$id$.$settags$:s{$star_count$ = %i(0):s}	:i %GLOBAL%$id$.$obj_spawnscript$$star_meter_star_count_manager$$params$ = :s{:s}	:i $HUD_setup_progress_meter$$meter_id$ = %GLOBAL%$id$	:i $always_show_ns_meter$ = %i(0)	:i if $isSinglePlayerGame$		:i $GetFirstPlayer$		:i $FormatText$$checksumname$ = $object$%s("player%p_hud")$p$ = %GLOBAL%$player$		:i $value_score$ = $Score$		:i $value_streak$ = $note_streak$		:i $value_star$ = $projected_song_stars$		:i $value_miss$ = $has_missed_note$		:i if $playerinfoequals$%GLOBAL%$player$$part$ = $Vocals$			:i %GLOBAL%$divide_by_10$ = $true$			:i $always_show_ns_meter$ = %i(1)		:i else 			:i %GLOBAL%$divide_by_10$ = $false$		:i endif	:i else 		:i $GetFirstPlayer$		:i $getplayerinfo$%GLOBAL%$player$$band$		:i $FormatText$$checksumname$ = $value_score$%s("band%b_score")$b$ = %GLOBAL%$band$		:i $FormatText$$checksumname$ = $value_streak$%s("band%b_streak")$b$ = %GLOBAL%$band$		:i $value_star$ = $band_projected_song_stars$		:i $value_miss$ = $band_has_missed_note$		:i $show_band_mult$ = %i(1)	:i endif	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$object$			:i $value$ = %GLOBAL%$value_score$		:i :s}		:i $output$ = :s{			:i $type$ = $seinttostring$			:i $desc_id$ = %GLOBAL%$id$			:i $property$ = $score_text$			:i $usecommas$ = $true$		:i :s}	:i :s}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$object$			:i $value$ = %GLOBAL%$value_streak$		:i :s}		:i $output$ = :s{			:i $type$ = $seinttostring$			:i $desc_id$ = %GLOBAL%$id$			:i $property$ = $streak_number_text$			:i $divide_by_10$ = %GLOBAL%$divide_by_10$		:i :s}	:i :s}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$object$			:i $value$ = %GLOBAL%$value_star$		:i :s}		:i $output$ = :s{			:i $type$ = $sestarmeter$			:i $desc_id$ = %GLOBAL%$id$			:i $full_scale$ = %f(1.0)			:i $full_x_dim$ = %GLOBAL%$x_dim$		:i :s}	:i :s}	:i if ((~$is_ampzilla_battle$) = %i(1))		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $object$ = %GLOBAL%$object$				:i $value$ = %GLOBAL%$value_star$			:i :s}			:i $output$ = :s{				:i $type$ = $ScreenElementRunScript$				:i $desc_id$ = %GLOBAL%$id$				:i $run_script$ = $hud_final_battle_star_up$				:i $full_scale$ = %f(1.0)			:i :s}		:i :s}	:i endif	:i if (%GLOBAL%$type$ !== $career$)		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $object$ = %GLOBAL%$object$				:i $value$ = %GLOBAL%$value_miss$			:i :s}			:i $outputs$ = 			:i :a{				:i :s{					:i $type$ = $screenelementrgbaswitch$					:i $desc_id$ = %GLOBAL%$id$					:i $property$ = $star_filler_rgba$					:i $color1$ = :a{%i(238),%i(204),%i(120),%i(255):a}					:i $color2$ = :a{%i(210),%i(210),%i(210),%i(255):a}				:i :s}				:i :s{					:i $type$ = $screenelementconditional$					:i $desc_id$ = %GLOBAL%$id$					:i $property$ = $band_hud_gold_star_glow_alpha$				:i :s}			:i :a}		:i :s}	:i else 		:i %GLOBAL%$id$.$se_setprops$$band_hud_gold_star_glow_alpha$ = %i(0)	:i endif	:i if $GotParam$${StructQBKey show_band_mult}$		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band1_multiplier$			:i :s}			:i $output$ = :s{				:i $type$ = $sebandmultiplier$				:i $desc_id$ = %GLOBAL%$id$				:i $textures$ = :a{					:i $band_HUD_multiplier_one$					:i $band_HUD_multiplier_two$					:i $band_HUD_multiplier_three$					:i $band_HUD_multiplier_four$					:i $band_HUD_multiplier_five$					:i $band_HUD_multiplier_six$					:i $band_HUD_multiplier_seven$					:i $band_HUD_multiplier_eight$					:i $band_HUD_multiplier_nine$					:i $band_HUD_multiplier_ten$					:i $band_HUD_multiplier_eleven$				:i :a}			:i :s}		:i :s}	:i endif	:i $HUD_setup_band_mult_animation$$star_meter_id$ = %GLOBAL%$id$	:i if (%GLOBAL%$always_show_ns_meter$ = %i(1))		:i $starmeter_show_hide_notestreak$${StructInt show = 1}$	:i else 		:i $starmeter_show_hide_notestreak$${StructInt show = 0}$	:i endif	:i endfunction]Script HUD_attach_widget_score_meter 0x8f38c3be [	:i if NOT $hud_root$.$desc_resolvealias$${			StructQBKey name = alias_hud_meter_score			StructQBKey param = id		}$				:i return 	:i endif	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $value$ = $band1_score$		:i :s}		:i $output$ = :s{			:i $type$ = $seinttostring$			:i $desc_id$ = %GLOBAL%$id$			:i $property$ = $score_top_text$		:i :s}	:i :s}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $value$ = $band1_score$		:i :s}		:i $output$ = :s{			:i $type$ = $seinttostring$			:i $desc_id$ = %GLOBAL%$id$			:i $property$ = $score_bottom_text$		:i :s}	:i :s}	:i endfunction]Script HUD_attach_widget_band_rock_meter 0x1c5a953e [	:i if NOT $hud_root$.$desc_resolvealias$${			StructQBKey name = alias_hud_meter_band_rock			StructQBKey param = id		}$				:i return 	:i endif	:i $health_value_range$ = :a{%f(0.0)%f(2.0):a}	:i $needle_range$ = :a{%vec2(0.0,0.0)%vec2(200.0,0.0):a}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $value$ = $band_health$		:i :s}		:i $outputs$ = :a{			:i :s{				:i $type$ = $descpropertypair$				:i $desc_id$ = %GLOBAL%$id$				:i $property$ = $meter_band_rock_needle_pos$				:i $value_range$ = :a{%f(0.0)%f(2.0):a}				:i $range$ = %GLOBAL%$needle_range$			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$id$				:i $property$ = $meter_band_rock_red_alpha$				:i $value_range$ = :a{%f(0.0)%f(0.6665999):a}			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$id$				:i $property$ = $meter_band_rock_amber_alpha$				:i $value_range$ = :a{%f(0.6665999)%f(1.3332999):a}			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$id$				:i $property$ = $meter_band_rock_green_alpha$				:i $value_range$ = :a{%f(1.3332999)%f(2.0):a}			:i :s}		:i :a}	:i :s}	:i endfunction]Script HUD_attach_widget_band_multiplier 0x49378581 [	${StructInt band = 1}$	:i if NOT $hud_root$.$desc_resolvealias$${			StructQBKey name = alias_HUD_meter_band_mult			StructQBKey param = id		}$				:i return 	:i endif	:i $FormatText$$checksumname$ = $value$%s("band%p_multiplier")$p$ = %GLOBAL%$band$	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $value$ = %GLOBAL%$value$		:i :s}		:i $output$ = :s{			:i $type$ = $seinttostring$			:i $desc_id$ = %GLOBAL%$id$			:i $property$ = $mult_text_text$		:i :s}	:i :s}	:i endfunction]Script HUD_attach_widget_sidebar_notestreak_meter 0x54e6d053 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player				desc_id			]		}		StructQBKey all	}$		:i $getplayerinfo$%GLOBAL%$player$$hud_id$	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $multiplier$		:i :s}		:i $outputs$ = :a{			:i :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $HUD_meter_combo_multiplier_text$				:i $player$ = %GLOBAL%$player$			:i :s}			:i :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $HUD_meter_combo_multiplier_text2$				:i $player$ = %GLOBAL%$player$			:i :s}			:i :s{				:i $type$ = $screenelementconditionalint$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $combo_multiplier_container_alpha$				:i $value_range$ = :a{%i(2)%i(100):a}			:i :s}		:i :a}	:i :s}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $note_streak$		:i :s}		:i $output$ = :s{			:i $type$ = $secombolights$			:i $desc_id$ = %GLOBAL%$desc_id$			:i $player$ = %GLOBAL%$player$			:i $bulb_props$ = :a{				:i $LED_01_rgba$				:i $LED_02_rgba$				:i $LED_03_rgba$				:i $LED_04_rgba$				:i $LED_05_rgba$				:i $LED_06_rgba$				:i $LED_07_rgba$				:i $LED_08_rgba$				:i $LED_09_rgba$				:i $LED_10_rgba$			:i :a}			:i $bg_prop$ = $HUD_meter_combo_multiplier_BG_rgba$			:i $text_prop$ = $HUD_meter_combo_multiplier_rgba$			:i $led_colors$ = :a{				:i :a{%i(255)%i(180)%i(180)%i(255):a}				:i :a{%i(243)%i(169)%i(64)%i(255):a}				:i :a{%i(128)%i(236)%i(68)%i(255):a}				:i :a{%i(175)%i(101)%i(238)%i(255):a}				:i :a{%i(190)%i(10)%i(10)%i(255):a}				:i :a{%i(190)%i(10)%i(10)%i(255):a}				:i :a{%i(185)%i(230)%i(160)%i(255):a}				:i :a{%i(255)%i(180)%i(110)%i(255):a}			:i :a}			:i $bg_colors$ = :a{				:i :a{%i(50)%i(50)%i(50)%i(255):a}				:i :a{%i(153)%i(105)%i(30)%i(255):a}				:i :a{%i(85)%i(128)%i(58)%i(255):a}				:i :a{%i(100)%i(70)%i(140)%i(255):a}				:i :a{%i(85)%i(10)%i(10)%i(255):a}				:i :a{%i(100)%i(10)%i(10)%i(255):a}				:i :a{%i(65)%i(120)%i(130)%i(255):a}				:i :a{%i(100)%i(100)%i(100)%i(255):a}			:i :a}		:i :s}	:i :s}	:i %GLOBAL%$note_streak_widget_id$ = %GLOBAL%$observer_id$	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $starpower_active$		:i :s}		:i $output$ = :s{			:i $id$ = %GLOBAL%$note_streak_widget_id$		:i :s}	:i :s}	:i endfunction]Script HUD_attach_widget_sidebar_rockmeter c4d255fe [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player				desc_id			]		}		StructQBKey all	}$		:i $getplayerinfo$%GLOBAL%$player$$hud_id$	:i $pos_range$ = :a{%vec2(12.0,-6.0)%vec2(14.333000183105469,-88.31999969482422)%vec2(16.666000366210938,-152.31399536132812)%vec2(19.0,-202.0):a}	:i $pos_value_range$ = :a{%f(0.0)%f(0.6665999)%f(1.3332999)%f(2.0):a}	:i $pos_type$ = $individualhealthneedlepos$	:i $needle_pos_range$ = :a{%vec2(12.0,-2.0)%vec2(19.0,-203.0):a}	:i $needle_scale_range$ = :a{%vec2(1.100000023841858,1.2000000476837158)%vec2(0.800000011920929,0.8999999761581421):a}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $health$		:i :s}		:i $outputs$ = :a{			:i :s{				:i $desc_id$ = %GLOBAL%$desc_id$				:i $type$ = $rgbaswap$				:i $value_range$ = :a{%f(0.0)%f(0.6666669)%f(1.3332999):a}				:i $property$ = $needle_color_rgba$				:i $colors$ = :a{					:i :a{%i(255)%i(0)%i(0)%i(128):a}					:i :a{%i(255)%i(255)%i(0)%i(128):a}					:i :a{%i(0)%i(255)%i(0)%i(128):a}				:i :a}			:i :s}			:i :s{				:i $desc_id$ = %GLOBAL%$desc_id$				:i $type$ = $rgbaswap$				:i $value_range$ = :a{%f(0.0)%f(0.6666669)%f(1.3332999):a}				:i $property$ = $needle_White_rgba$				:i $colors$ = :a{					:i :a{%i(255)%i(255)%i(255)%i(255):a}					:i :a{%i(255)%i(255)%i(255)%i(255):a}					:i :a{%i(255)%i(255)%i(255)%i(255):a}				:i :a}			:i :s}			:i :s{				:i $desc_id$ = %GLOBAL%$desc_id$				:i $type$ = $rgbaswap$				:i $value_range$ = :a{%f(0.0)%f(0.6666669)%f(1.3332999):a}				:i $property$ = $needle_Black_rgba$				:i $colors$ = :a{					:i :a{%i(255)%i(0)%i(0)%i(255):a}					:i :a{%i(255)%i(255)%i(0)%i(255):a}					:i :a{%i(0)%i(255)%i(0)%i(255):a}				:i :a}			:i :s}			:i :s{				:i $type$ = $individualhealthneedlepos$				:i $value_range$ = %GLOBAL%$pos_value_range$				:i $range$ = %GLOBAL%$pos_range$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $needle_container_pos$			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(2.0):a}				:i $range$ = %GLOBAL%$needle_scale_range$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $needle_container_scale$			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Flare_alpha$				:i $value_range$ = :a{%f(1.9900000)%f(2.0):a}			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $led_red_alpha$				:i $value_range$ = :a{%f(0.0)%f(0.6600000):a}			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $led_yellow_alpha$				:i $value_range$ = :a{%f(0.6600000)%f(1.3299999):a}			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $led_green_alpha$				:i $value_range$ = :a{%f(1.3299999)%f(2.0):a}			:i :s}		:i :a}	:i :s}	:i endfunction]Script HUD_attach_widget_sidebar_starpowermeter c371b371 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player				desc_id			]		}		StructQBKey all	}$		:i $needle_pos_range$ = :a{%vec2(12.0,-2.0)%vec2(19.0,-205.0):a}	:i $needle_scale_range$ = :a{%vec2(1.100000023841858,0.75)%vec2(0.699999988079071,1.0):a}	:i $needle_rot_range$ = :a{%f(-5.0)%f(0.0):a}	:i $Tesla_needle_pos_range$ = :a{%vec2(12.0,-2.0)%vec2(15.5,-107.0):a}	:i $getplayerinfo$%GLOBAL%$player$$hud_id$	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $starpower_amount$		:i :s}		:i $outputs$ = :a{			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = %GLOBAL%$needle_pos_range$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $needle_container_pos$			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = %GLOBAL%$needle_scale_range$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $needle_container_scale$			:i :s}			:i :s{				:i $type$ = $descpropertyfloat$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = %GLOBAL%$needle_rot_range$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $needle_container_rot_angle$			:i :s}			:i :s{				:i $type$ = $SEStarPowerMeterFX$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $needle_white_alpha$				:i $value_range$ = :a{%f(50.0)%f(100.0):a}			:i :s}			:i :s{				:i $type$ = $SEStarPowerMeterFX$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $needle_color_alpha$				:i $value_range$ = :a{%f(50.0)%f(100.0):a}			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(49.0):a}				:i $range$ = :a{%vec2(1.0,0.0)%vec2(1.0,1.0):a}				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Fill_Pre_SP_scale$			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(50.0)%f(100.0):a}				:i $range$ = :a{%vec2(1.0,0.0)%vec2(1.0,1.0):a}				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Fill_Post_SP_scale$			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = :a{%vec2(1.0,0.0)%vec2(1.0,1.0):a}				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Fill_Post_SPFX_scale$			:i :s}			:i :s{				:i $type$ = $SEStarPowerMeterFX$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Fill_Post_SPFX_alpha$				:i $value_range$ = :a{%f(50.0)%f(100.0):a}			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Fill_Fudge_Hider_alpha$				:i $value_range$ = :a{%f(1.0)%f(100.0):a}			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(49.0):a}				:i $range$ = %GLOBAL%$Tesla_needle_pos_range$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Tesla_needle_pos$			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = %GLOBAL%$needle_scale_range$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Tesla_needle_scale$			:i :s}			:i :s{				:i $type$ = $descpropertyfloat$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = %GLOBAL%$needle_rot_range$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Tesla_needle_rot_angle$			:i :s}			:i :s{				:i $type$ = $SEStarPowerMeterFX$				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $Tesla_needle_alpha$				:i $value_range$ = :a{%f(1.0)%f(100.0):a}			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = :a{%vec2(0.0,1.0)%vec2(1.0,1.5):a}				:i $desc_id$ = %GLOBAL%$desc_id$				:i $property$ = $RP_Tesla_FX_scale$			:i :s}		:i :a}	:i :s}	:i endfunction]Script HUD_attach_widget_sidebar_sp_meter 0x4b8a96be [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				desc_id				player			]		}		StructQBKey all	}$		:i $sp_value_range$ = :a{%f(0.0)%f(100.0):a}	:i $scale_range$ = :a{%vec2(0.0,1.0)%vec2(1.0,1.0):a}	:i $getplayerinfo$%GLOBAL%$player$$hud_id$	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $starpower_amount$		:i :s}		:i $output$ = :s{			:i $type$ = $descpropertypair$			:i $value_range$ = %GLOBAL%$sp_value_range$			:i $range$ = %GLOBAL%$scale_range$			:i $desc_id$ = %GLOBAL%$desc_id$			:i $property$ = $fill_scale$		:i :s}	:i :s}	:i endfunction]Script HUD_attach_widget_vocal_competitive_meter e2cdc555 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player				meter			]		}		StructQBKey all	}$		:i if NOT %GLOBAL%$meter$.$desc_resolvealias$$name$ = $alias_HUD_SideBar_RankMeter$$param$ = $rank_meter$		:i $scriptassert$%s("player %p rank meter not found")$p$ = %GLOBAL%$player$	:i endif	:i %GLOBAL%$rank_meter$.$obj_spawnscript$$update_combo_meter_sp_glow$$params$ = :s{$obj_id$ = %GLOBAL%$rank_meter$:s}	:i $GMan_CompetitiveMeterFunc$:s{		:i $goal$ = $competitive$		:i $tool$ = $comp_meter$		:i $func$ = $set_element_props$		:i $params$ = :s{$player$ = %GLOBAL%$player$$attached_to_highway$ = %i(1)$element_id$ = %GLOBAL%$rank_meter$:s}	:i :s}	:i return 	:i endfunction]Script HUD_attach_widget_vocal_sp_combo_meter 0x721d700d [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				player				meter			]		}		StructQBKey all	}$		:i if NOT %GLOBAL%$meter$.$desc_resolvealias$$name$ = $alias_vocals_health_meter$$param$ = $health_meter$		:i $scriptassert$%s("player %p vocal health meter not found")$p$ = %GLOBAL%$player$	:i endif	:i $getplayerinfo$%GLOBAL%$player$$hud_id$	:i $needle_range$ = :a{%vec2(-55.0,5.118000030517578)%vec2(28.0,5.118000030517578):a}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $health$		:i :s}		:i $outputs$ = :a{			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(2.0):a}				:i $range$ = %GLOBAL%$needle_range$				:i $desc_id$ = %GLOBAL%$health_meter$				:i $property$ = $vocal_health_meter_needle_pos$			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$health_meter$				:i $property$ = $vocal_health_meter_red_alpha$				:i $value_range$ = :a{%f(0.0)%f(0.6665999):a}			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$health_meter$				:i $property$ = $vocal_health_meter_amber_alpha$				:i $value_range$ = :a{%f(0.6665999)%f(1.3332999):a}			:i :s}			:i :s{				:i $type$ = $screenelementconditionalfloat$				:i $desc_id$ = %GLOBAL%$health_meter$				:i $property$ = $vocal_health_meter_green_alpha$				:i $value_range$ = :a{%f(1.3332999)%f(2.0):a}			:i :s}		:i :a}	:i :s}	:i if NOT %GLOBAL%$meter$.$desc_resolvealias$$name$ = $alias_vocals_multiplier$$param$ = $mult_meter$		:i $scriptassert$%s("player %p vocal multiplier not found")$p$ = %GLOBAL%$player$	:i endif	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $multiplier$		:i :s}		:i $outputs$ = :a{			:i :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$mult_meter$				:i $property$ = $multiplier_number_text$				:i $player$ = %GLOBAL%$player$			:i :s}			:i :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$mult_meter$				:i $property$ = $multiplier_number_text2$				:i $player$ = %GLOBAL%$player$			:i :s}			:i :s{				:i $type$ = $secombolights$				:i $desc_id$ = %GLOBAL%$mult_meter$				:i $player$ = %GLOBAL%$player$				:i $no_bulbs$ = $true$				:i $bg_prop$ = $vocal_multiplier_bg_rgba$				:i $text_prop$ = $multiplier_number_rgba$				:i $text_prop_2$ = $multiplier_time_rgba$				:i $led_colors$ = :a{					:i :a{%i(255)%i(180)%i(180)%i(255):a}					:i :a{%i(243)%i(169)%i(64)%i(255):a}					:i :a{%i(128)%i(236)%i(68)%i(255):a}					:i :a{%i(175)%i(101)%i(238)%i(255):a}					:i :a{%i(190)%i(10)%i(10)%i(255):a}					:i :a{%i(190)%i(10)%i(10)%i(255):a}					:i :a{%i(185)%i(230)%i(160)%i(255):a}					:i :a{%i(255)%i(180)%i(110)%i(255):a}				:i :a}				:i $bg_colors$ = :a{					:i :a{%i(50)%i(50)%i(50)%i(255):a}					:i :a{%i(153)%i(105)%i(30)%i(255):a}					:i :a{%i(85)%i(128)%i(58)%i(255):a}					:i :a{%i(100)%i(70)%i(140)%i(255):a}					:i :a{%i(85)%i(10)%i(10)%i(255):a}					:i :a{%i(100)%i(10)%i(10)%i(255):a}					:i :a{%i(65)%i(120)%i(130)%i(255):a}					:i :a{%i(100)%i(100)%i(100)%i(255):a}				:i :a}			:i :s}		:i :a}	:i :s}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $starpower_active$		:i :s}		:i $output$ = :s{			:i $type$ = $secombolights$			:i $desc_id$ = %GLOBAL%$mult_meter$			:i $player$ = %GLOBAL%$player$			:i $no_bulbs$ = $true$			:i $bg_prop$ = $vocal_multiplier_bg_rgba$			:i $text_prop$ = $multiplier_number_rgba$			:i $text_prop_2$ = $multiplier_time_rgba$			:i $led_colors$ = :a{				:i :a{%i(255)%i(180)%i(180)%i(255):a}				:i :a{%i(243)%i(169)%i(64)%i(255):a}				:i :a{%i(128)%i(236)%i(68)%i(255):a}				:i :a{%i(175)%i(101)%i(238)%i(255):a}				:i :a{%i(190)%i(10)%i(10)%i(255):a}				:i :a{%i(190)%i(10)%i(10)%i(255):a}				:i :a{%i(185)%i(230)%i(160)%i(255):a}				:i :a{%i(255)%i(180)%i(110)%i(255):a}			:i :a}			:i $bg_colors$ = :a{				:i :a{%i(50)%i(50)%i(50)%i(255):a}				:i :a{%i(153)%i(105)%i(30)%i(255):a}				:i :a{%i(85)%i(128)%i(58)%i(255):a}				:i :a{%i(100)%i(70)%i(140)%i(255):a}				:i :a{%i(85)%i(10)%i(10)%i(255):a}				:i :a{%i(100)%i(10)%i(10)%i(255):a}				:i :a{%i(65)%i(120)%i(130)%i(255):a}				:i :a{%i(100)%i(100)%i(100)%i(255):a}			:i :a}		:i :s}	:i :s}	:i if NOT %GLOBAL%$meter$.$desc_resolvealias$$name$ = $alias_vocals_star_power_meter$$param$ = $sp_meter$		:i $scriptassert$%s("player %p sp multiplier not found")$p$ = %GLOBAL%$player$	:i endif	:i $needle_pos_range$ = :a{%vec2(-59.0,0.0)%vec2(58.0,0.0):a}	:i $sp_range$ = :a{%vec2(-114.0,0.0)%vec2(0.0,0.0):a}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $starpower_amount$		:i :s}		:i $outputs$ = :a{			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = %GLOBAL%$sp_range$				:i $desc_id$ = %GLOBAL%$sp_meter$				:i $property$ = $vocal_starpower_fill_pos$			:i :s}			:i :s{				:i $type$ = $SEStarPowerMeterFX$				:i $desc_id$ = %GLOBAL%$sp_meter$				:i $property$ = $Fill_Post_SPFX_alpha$				:i $value_range$ = :a{%f(50.0)%f(100.0):a}			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = :a{%vec2(1.0,0.0)%vec2(1.0,1.0):a}				:i $desc_id$ = %GLOBAL%$sp_meter$				:i $property$ = $Fill_Post_SPFX_scale$			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(1.0)%f(100.0):a}				:i $range$ = :a{%vec2(0.0,1.0)%vec2(1.0,1.0):a}				:i $desc_id$ = %GLOBAL%$sp_meter$				:i $property$ = $RP_Telsa_fx_Cont_scale$			:i :s}			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(100.0):a}				:i $range$ = %GLOBAL%$needle_pos_range$				:i $desc_id$ = %GLOBAL%$sp_meter$				:i $property$ = $VSPM_Needle_Container_pos$			:i :s}		:i :a}	:i :s}	:i if NOT %GLOBAL%$meter$.$desc_resolvealias$$name$ = $alias_vocals_phrase_progress_meter$$param$ = $pp_meter$		:i $scriptassert$%s("player %p pp meter not found")$p$ = %GLOBAL%$player$	:i endif	:i $pp_range$ = :a{%vec2(-104.0,0.0)%vec2(0.0,0.0):a}	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $phrase_progress$		:i :s}		:i $outputs$ = :a{			:i :s{				:i $type$ = $descpropertypair$				:i $value_range$ = :a{%f(0.0)%f(1.0):a}				:i $range$ = %GLOBAL%$pp_range$				:i $desc_id$ = %GLOBAL%$pp_meter$				:i $property$ = $vocal_phrase_progress_fill_pos$			:i :s}			:i :s{				:i $type$ = $rgbaswap$				:i $desc_id$ = %GLOBAL%$pp_meter$				:i $property$ = $vocal_phrase_progress_fill_rgba$				:i $value_range$ = :a{%f(0.0)%f(0.6000000)%f(0.8000000):a}				:i $colors$ = :a{					:i :a{%i(200)%i(200)%i(200)%i(255):a}					:i :a{%i(245)%i(255)%i(0)%i(255):a}					:i :a{%i(0)%i(255)%i(0)%i(255):a}				:i :a}			:i :s}		:i :a}	:i :s}	:i endfunction]Script HUD_set_band_meter_instrument_icons 0x231f9b20 [	:i $index$ = %i(1)	:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ > %i(0))		:i $GetFirstPlayer$		:i while 		:i $getplayerinfo$%GLOBAL%$player$$part$		:i switch %GLOBAL%$part$			:i case $guitar$				:i $icon$ = $band_HUD_guitar$				:i $glow_icon$ = $band_HUD_guitar_glow$				:i endcase			case $Bass$				:i $icon$ = $band_HUD_bass$				:i $glow_icon$ = $band_HUD_bass_glow$				:i endcase			case $drum$				:i $icon$ = $band_HUD_drums$				:i $glow_icon$ = $band_HUD_drums_glow$				:i endcase			case $Vocals$				:i $icon$ = $band_HUD_microphone$				:i $glow_icon$ = $band_HUD_mic_glow$		:i end_switch		:i if (%GLOBAL%$index$ <= %GLOBAL%$num_players$)			:i $alpha$ = %f(1.0)		:i else 			:i $alpha$ = %f(0.0)		:i endif		:i $glow_rgba$ = :a{%i(255)%i(255)%i(255)%i(0):a}		:i switch %GLOBAL%$index$			:i case %i(1)				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_p1_texture$ = %GLOBAL%$icon$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_p1_alpha$ = %GLOBAL%$alpha$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p1_texture$ = %GLOBAL%$glow_icon$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p1_alpha$ = %i(0)				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p1_rgba$ = %GLOBAL%$glow_rgba$				:i endcase			case %i(2)				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_p2_texture$ = %GLOBAL%$icon$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_p2_alpha$ = %GLOBAL%$alpha$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p2_texture$ = %GLOBAL%$glow_icon$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p2_alpha$ = %i(0)				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p2_rgba$ = %GLOBAL%$glow_rgba$				:i endcase			case %i(3)				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_p3_texture$ = %GLOBAL%$icon$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_p3_alpha$ = %GLOBAL%$alpha$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p3_texture$ = %GLOBAL%$glow_icon$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p3_alpha$ = %i(0)				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p3_rgba$ = %GLOBAL%$glow_rgba$				:i endcase			case %i(4)				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_p4_texture$ = %GLOBAL%$icon$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_p4_alpha$ = %GLOBAL%$alpha$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p4_texture$ = %GLOBAL%$glow_icon$				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p4_alpha$ = %i(0)				:i $SetScreenElementProps$$id$ = %GLOBAL%$desc_element$$band_HUD_instrument_glow_p4_rgba$ = %GLOBAL%$glow_rgba$		:i end_switch		:i $index$ = (%GLOBAL%$index$ + %i(1))		:i $GetNextPlayer$$player$ = %GLOBAL%$player$		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script hud_set_band_meter_instrument_streak_color c9f9e31a [	:i if $GotParam$${StructQBKey player}$		:i if $ScreenElementExists$${StructQBKey id = hud_root}$			:i if $hud_root$.$desc_resolvealias$${					StructQBKey name = alias_band_meter					StructQBKey param = band_meter				}$								:i $ResolveScreenElementID$$id$ = %GLOBAL%$band_meter$$param$ = $desc_element$			:i endif			:i if $GotParam$${StructQBKey on}$				:i $highway_streak_glow$$player$ = %GLOBAL%$player$$enabled$ = %i(1)			:i else 				:i $highway_streak_glow$$player$ = %GLOBAL%$player$$enabled$ = %i(0)			:i endif		:i endif	:i endif	:i endfunction]Script HUD_band_streak_notify 0x4bfa435e [	:i $GetFirstPlayer$	:i $getplayerinfo$%GLOBAL%$player$$bot_play$	:i if (%GLOBAL%$bot_play$ = %i(1))		:i return 	:i endif	:i if NOT $GotParam$${StructQBKey new_player_in_streak}$		:i if NOT $GotParam$${StructQBKey streak}$			:i return 		:i endif		:i if (%GLOBAL%$streak$ < %i(1))			:i return 		:i endif		:i $FormatText$$textname$ = $notification$^[66bd2b10]^$d$ = %GLOBAL%$streak$	:i else 		:i $FormatText$$textname$ = $notification$^[83b2be80]^$d$ = %GLOBAL%$new_player_in_streak$		:i $priority$ = %i(4294967295)	:i endif	:i $hud_create_message$:s{$text$ = %GLOBAL%$notification$$band$$priority$ = %GLOBAL%$priority$$style_script$ = $hud_message_band_streak_style$$style_script_params$ = :s{$players$ = %GLOBAL%$players$:s}:s}	:i endfunction]Script HUD_band_streak_end 0x4eaaff97 [	:i $GetFirstPlayer$	:i $getplayerinfo$%GLOBAL%$player$$bot_play$	:i if (%GLOBAL%$bot_play$ = %i(1))		:i return 	:i endif	:i $FormatText$$textname$ = $notification$^[f3d445f5]^$d$ = %GLOBAL%$Score$	:i $hud_create_message$:s{$text$ = %GLOBAL%$notification$$band$$priority$ = %GLOBAL%$priority$$style_script$ = $hud_message_band_streak_style$$style_script_params$ = :s{$players$ = :a{:a}:s}:s}	:i endfunction]Script HUD_attach_scores_stack_widget b91935ad [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				parent_id			]		}		StructQBKey all	}$		:i %GLOBAL%$parent_id$.$desc_resolvealias$$name$ = $alias_scores_stack$$param$ = $scores_stack_menu$	:i $GetBandsStatus$	:i if $GotParam$${StructQBKey bands}$		:i $GetArraySize$%GLOBAL%$bands$		:i $bands_size$ = %GLOBAL%$array_size$		:i if (%GLOBAL%$bands_size$ > %i(0))			:i $printstruct$ isNull 			:i $index$ = %i(0)			:i while 			:i if (%GLOBAL%$bands$:a{%GLOBAL%$index$:a}->$in_game$ = %i(1))				:i $FormatText$$checksumname$ = $value$%s("band%d_score")$d$ = (%GLOBAL%$index$ + %i(1))				:i $FormatText$$checksumname$ = $property$%s("band%d_score_text")$d$ = (%GLOBAL%$index$ + %i(1))				:i $FormatText$$checksumname$ = $color$%s("band%d_score_rgba")$d$ = (%GLOBAL%$index$ + %i(1))				:i $FormatText$$checksumname$ = $color_value$%s("band_color%d")$d$ = (%GLOBAL%$index$ + %i(1))				:i $AttachHudWidget$:s{					:i $Input$ = :s{						:i $value$ = %GLOBAL%$value$					:i :s}					:i $output$ = :s{						:i $type$ = $seinttostring$						:i $desc_id$ = %GLOBAL%$parent_id$						:i $property$ = %GLOBAL%$property$					:i :s}				:i :s}				:i $AddParam$$structure_name$ = $prop_struct$$name$ = %GLOBAL%$color$$value$ = (~%GLOBAL%$color_value$)				:i %GLOBAL%$parent_id$.$se_setprops$%GLOBAL%$prop_struct$			:i elseif $GotParam$${StructQBKey children}$				:i $GetArraySize$%GLOBAL%$children$				:i if (%GLOBAL%$array_size$ > %GLOBAL%$index$)					:i $DestroyScreenElement$$id$ = (%GLOBAL%$children$:a{%GLOBAL%$index$:a})				:i endif			:i elseif $GotParam$${StructQBKey scores_stack_menu}$				:i $GetScreenElementChildren$$id$ = %GLOBAL%$scores_stack_menu$				:i $GetArraySize$%GLOBAL%$children$				:i if (%GLOBAL%$array_size$ > %GLOBAL%$index$)					:i $DestroyScreenElement$$id$ = (%GLOBAL%$children$:a{%GLOBAL%$index$:a})				:i endif			:i endif			:i %GLOBAL%$index$ = (%GLOBAL%$index$ + %i(1))			:i loop_to %GLOBAL%$bands_size$		:i endif	:i endif	:i endfunction]Script HUD_attach_widget_band_versus_meter 0x038d7514 [	:i $GetFirstPlayer$	:i if $playerinfoequals$%GLOBAL%$player$$band$ = %i(1)		:i %GLOBAL%$parent_id$.$se_getprops$		:i %GLOBAL%$parent_id$.$se_setprops$:s{			:i $right_side_rgba$ = %GLOBAL%$left_side_rgba$			:i $left_side_rgba$ = %GLOBAL%$right_side_rgba$			:i $meter_off_horizontal_flip$ = $true$		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $faceoff_ratio$			:i :s}			:i $outputs$ = :a{				:i :s{					:i $type$ = $descpropertyfloat$					:i $desc_id$ = %GLOBAL%$parent_id$					:i $property$ = $hud_band_battle_meter_needle_rot_angle$					:i $value_range$ = :a{%f(1.0)%f(-1.0):a}					:i $range$ = :a{%f(-51.5)%f(51.5):a}					:i $single$				:i :s}				:i :s{					:i $type$ = $descpropertyfloat$					:i $desc_id$ = %GLOBAL%$parent_id$					:i $property$ = $hud_band_battle_meter_amber_on_alpha$					:i $value_range$ = :a{%f(0.0)%f(0.1000000):a}					:i $range$ = :a{%f(0.0)%f(1.0):a}					:i $single$				:i :s}				:i :s{					:i $type$ = $descpropertyfloat$					:i $desc_id$ = %GLOBAL%$parent_id$					:i $property$ = $hud_band_battle_meter_violet_on_alpha$					:i $value_range$ = :a{%f(-0.100000)%f(0.0):a}					:i $range$ = :a{%f(1.0)%f(0.0):a}					:i $single$				:i :s}			:i :a}		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band1_meter_value$			:i :s}			:i $output$ = :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$parent_id$				:i $property$ = $score_1_text$			:i :s}		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band2_meter_value$			:i :s}			:i $output$ = :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$parent_id$				:i $property$ = $score_2_text$			:i :s}		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band1_multiplier$			:i :s}			:i $output$ = :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$parent_id$				:i $property$ = $multiplier_1_number_text$			:i :s}		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band2_multiplier$			:i :s}			:i $output$ = :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$parent_id$				:i $property$ = $multiplier_2_number_text$			:i :s}		:i :s}	:i else 		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $faceoff_ratio$			:i :s}			:i $outputs$ = :a{				:i :s{					:i $type$ = $descpropertyfloat$					:i $desc_id$ = %GLOBAL%$parent_id$					:i $property$ = $hud_band_battle_meter_needle_rot_angle$					:i $value_range$ = :a{%f(-1.0)%f(1.0):a}					:i $range$ = :a{%f(-51.5)%f(51.5):a}					:i $single$				:i :s}				:i :s{					:i $type$ = $descpropertyfloat$					:i $desc_id$ = %GLOBAL%$parent_id$					:i $property$ = $hud_band_battle_meter_amber_on_alpha$					:i $value_range$ = :a{%f(-0.100000)%f(0.0):a}					:i $range$ = :a{%f(1.0)%f(0.0):a}					:i $single$				:i :s}				:i :s{					:i $type$ = $descpropertyfloat$					:i $desc_id$ = %GLOBAL%$parent_id$					:i $property$ = $hud_band_battle_meter_violet_on_alpha$					:i $value_range$ = :a{%f(0.0)%f(0.1000000):a}					:i $range$ = :a{%f(0.0)%f(1.0):a}					:i $single$				:i :s}			:i :a}		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band1_meter_value$			:i :s}			:i $output$ = :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$parent_id$				:i $property$ = $score_2_text$			:i :s}		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band2_meter_value$			:i :s}			:i $output$ = :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$parent_id$				:i $property$ = $score_1_text$			:i :s}		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band1_multiplier$			:i :s}			:i $output$ = :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$parent_id$				:i $property$ = $multiplier_2_number_text$			:i :s}		:i :s}		:i $AttachHudWidget$:s{			:i $Input$ = :s{				:i $value$ = $band2_multiplier$			:i :s}			:i $output$ = :s{				:i $type$ = $seinttostring$				:i $desc_id$ = %GLOBAL%$parent_id$				:i $property$ = $multiplier_1_number_text$			:i :s}		:i :s}	:i endif	:i endfunction]Script HUD_attach_widget_player_multiplier 0x8c398f32 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				parent_id				player			]		}		StructQBKey all	}$		:i $getplayerinfo$%GLOBAL%$player$$hud_id$	:i $ResolveScreenElementID$$id$ = %GLOBAL%$parent_id$$param$ = $id$	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $note_streak$		:i :s}		:i $output$ = :s{			:i $type$ = $senotestreaklights$			:i $desc_id$ = %GLOBAL%$id$			:i $player$ = %GLOBAL%$player$			:i $bulb_textures$ = :a{				:i :a{					:i $HUD_score_light_0$					:i $HUD_score_light_1$					:i $HUD_score_light_2$				:i :a}				:i :a{					:i $HUD_score_light_0_green$					:i $HUD_score_light_1_green$					:i $HUD_score_light_2_green$				:i :a}				:i :a{					:i $HUD_score_light_0_purple$					:i $HUD_score_light_1_purple$					:i $HUD_score_light_2_purple$				:i :a}				:i :a{					:i $HUD_score_light_0_blue$					:i $HUD_score_light_1_blue$					:i $HUD_score_light_2_blue$				:i :a}			:i :a}			:i $bulb_props$ = :a{$light0_texture$$light1_texture$$light2_texture$$light3_texture$$light4_texture$:a}		:i :s}	:i :s}	:i %GLOBAL%$note_streak_widget_id$ = %GLOBAL%$observer_id$	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $starpower_active$		:i :s}		:i $output$ = :s{$id$ = %GLOBAL%$note_streak_widget_id$:s}	:i :s}	:i $textures$ = :a{		:i $band_hud_score_1a$		:i $band_hud_score_2a$		:i $band_hud_score_3a$		:i $band_hud_score_4a$	:i :a}	:i if $playerinfoequals$%GLOBAL%$player$$part$ = $Vocals$		:i $sp_textures$ = :a{			:i $vocal_HUD_score_2a$			:i $vocal_HUD_score_4a$			:i $vocal_HUD_score_6a$			:i $vocal_HUD_score_8b$		:i :a}	:i else 		:i $sp_textures$ = :a{			:i $band_hud_score_2b$			:i $band_hud_score_4b$			:i $band_hud_score_6b$			:i $band_hud_score_8b$		:i :a}	:i endif	:i %GLOBAL%$default_mul_tex$ = $band_hud_score_1a$	:i $getplayerinfo$%GLOBAL%$player$$part$	:i switch %GLOBAL%$part$		:i case $Bass$			:i %GLOBAL%$default_mul_tex$ = $higway_icon_bass$			:i endcase		case $drum$			:i %GLOBAL%$default_mul_tex$ = $higway_icon_drum$			:i endcase		case $guitar$			:i %GLOBAL%$default_mul_tex$ = $higway_icon_guitar$			:i endcase		case $Vocals$			:i %GLOBAL%$default_mul_tex$ = $higway_icon_mic$	:i end_switch	:i $SetArrayElement$$arrayName$ = $textures$$index$ = %i(0)$newValue$ = %GLOBAL%$default_mul_tex$	:i $AttachHudWidget$:s{		:i $Input$ = :s{			:i $object$ = %GLOBAL%$hud_id$			:i $value$ = $multiplier$		:i :s}		:i $output$ = :s{			:i $type$ = $semultipliernixie$			:i $desc_id$ = %GLOBAL%$id$			:i $property$ = $nixie_texture$			:i $player$ = %GLOBAL%$player$			:i $textures$ = %GLOBAL%$textures$			:i $sp_textures$ = %GLOBAL%$sp_textures$		:i :s}	:i :s}	:i endfunction]Script HUD_setup_streak_meter_animation 0x5a596b1e [	:i $band_meter$ = %GLOBAL%$star_meter_id$	:i if NOT $GotParam$${StructQBKey streak_id}$		:i return 	:i endif	:i if $ScreenElementExists$$id$ = %GLOBAL%$streak_id$		:i $GetScreenElementProps$$id$ = %GLOBAL%$streak_id$		:i $printf$${			StructQBKey channel = zdebug			StructQBStringQs bcc10b78		}$				:i $printstruct$$channel$ = $zdebug$ isNull 		:i $hide_pos$ = (%GLOBAL%$Pos$ - %vec2(0.0,65.0))		:i $streak_pos$ = %GLOBAL%$Pos$		:i $GetFirstPlayer$		:i $getplayerinfo$%GLOBAL%$player$$band$		:i if $GameMode_IsBandScoring$			:i if (%GLOBAL%$band$ = %i(1))				:i $streak_started_event$ = $band1_streak_started$				:i $streak_ended_event$ = $band1_streak_ended$			:i elseif (%GLOBAL%$band$ = %i(2))				:i $streak_started_event$ = $band2_streak_started$				:i $streak_ended_event$ = $band2_streak_ended$			:i endif		:i else 			:i switch %GLOBAL%$player$				:i case %i(1)					:i $streak_started_event$ = $player1_streak_started$					:i $streak_ended_event$ = $player1_streak_ended$					:i endcase				case %i(2)					:i $streak_started_event$ = $player2_streak_started$					:i $streak_ended_event$ = $player2_streak_ended$					:i endcase				case %i(3)					:i $streak_started_event$ = $player3_streak_started$					:i $streak_ended_event$ = $player3_streak_ended$					:i endcase				case %i(4)					:i $streak_started_event$ = $player4_streak_started$					:i $streak_ended_event$ = $player4_streak_ended$			:i end_switch		:i endif		:i $RequireParams$${			StructArray 0x00000000			{				ArrayQBKey				[					streak_started_event					streak_ended_event				]			}			StructQBKey all		}$				:i $event_handlers$ = :a{			:i :s{%GLOBAL%$streak_started_event$$SetScreenElementProps$$params$ = :s{$id$ = %GLOBAL%$streak_id$$time$ = %f(0.1000000)$Pos$ = %GLOBAL%$streak_pos$:s}:s}			:i :s{%GLOBAL%$streak_ended_event$$SetScreenElementProps$$params$ = :s{$id$ = %GLOBAL%$streak_id$$time$ = %f(0.3000000)$Pos$ = %GLOBAL%$hide_pos$:s}:s}		:i :a}		:i $SetScreenElementProps$:s{			:i $id$ = %GLOBAL%$streak_id$			:i $event_handlers$ = %GLOBAL%$event_handlers$			:i $replace_handlers$			:i $Pos$ = %GLOBAL%$hide_pos$		:i :s}	:i endif	:i endfunction]Script HUD_setup_band_mult_animation b5812927 [	:i $band_meter$ = %GLOBAL%$star_meter_id$	:i if NOT %GLOBAL%$band_meter$.$desc_resolvealias$$name$ = $alias_band_multiplier$$param$ = $mult_id$		:i return 	:i endif	:i if $ScreenElementExists$$id$ = %GLOBAL%$mult_id$		:i $GetScreenElementProps$$id$ = %GLOBAL%$mult_id$		:i $hide_pos$ = (%GLOBAL%$Pos$ + %vec2(118.0,32.0))		:i $hide_scale$ = %f(0.5)		:i $event_handlers$ = :a{			:i :s{$show_band_mult$$SetScreenElementProps$$params$ = :s{$id$ = %GLOBAL%$mult_id$$time$ = %f(0.3000000)$Pos$ = %GLOBAL%$Pos$$Scale$ = %GLOBAL%$Scale$:s}:s}			:i :s{$hide_band_mult$$SetScreenElementProps$$params$ = :s{$id$ = %GLOBAL%$mult_id$$time$ = %f(0.3000000)$Pos$ = %GLOBAL%$hide_pos$$Scale$ = %GLOBAL%$hide_scale$:s}:s}		:i :a}		:i $SetScreenElementProps$:s{			:i $id$ = %GLOBAL%$mult_id$			:i $event_handlers$ = %GLOBAL%$event_handlers$			:i $replace_handlers$			:i $Pos$ = %GLOBAL%$hide_pos$			:i $Scale$ = %GLOBAL%$hide_scale$		:i :s}	:i endif	:i endfunction]Script hud_start_blink_rock_meter 0x4e41f185 [	:i $SpawnScriptLater$${StructQBKey HUD_start_blink_rock_meter_spawn}$	:i endfunction]Script HUD_start_blink_rock_meter_spawn 0x7993aa7b [	:i if $ScreenElementExists$${StructQBKey id = hud_root}$		:i if $hud_root$.$desc_resolvealias$${				StructQBKey name = alias_band_meter				StructQBKey param = band_meter			}$						:i if $ScreenElementExists$$id$ = %GLOBAL%$band_meter$				:i if %GLOBAL%$band_meter$.$desc_resolvealias$$name$ = $alias_HUD_meter_red_bg$$param$ = $id$					:i while 					:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$id$						:i continue					:i endif					:i $SetScreenElementProps$:s{						:i $id$ = %GLOBAL%$id$						:i $rgba$ = :a{%i(50)%i(50)%i(50)%i(255):a}						:i $time$ = %f(0.1000000)					:i :s}					:i $wait$${						StructFloat 0.10000000149011612						StructQBKey seconds					}$										:i if NOT $ScreenElementExists$$id$ = %GLOBAL%$id$						:i continue					:i endif					:i $SetScreenElementProps$:s{						:i $id$ = %GLOBAL%$id$						:i $rgba$ = :a{%i(255)%i(255)%i(255)%i(255):a}						:i $time$ = %f(0.1000000)					:i :s}					:i $wait$${						StructFloat 0.10000000149011612						StructQBKey seconds					}$										:i loop_to 				:i endif			:i endif		:i endif	:i endif	:i endfunction]Script hud_stop_blink_rock_meter 0x9fe736bb [	:i $KillSpawnedScript$${StructQBKey name = HUD_start_blink_rock_meter_spawn}$	:i if $ScreenElementExists$${StructQBKey id = hud_root}$		:i if $hud_root$.$desc_resolvealias$${				StructQBKey name = alias_band_meter				StructQBKey param = band_meter			}$						:i if $ScreenElementExists$$id$ = %GLOBAL%$band_meter$				:i if %GLOBAL%$band_meter$.$desc_resolvealias$$name$ = $alias_HUD_meter_red_bg$$param$ = $id$					:i if $ScreenElementExists$$id$ = %GLOBAL%$id$						:i $SetScreenElementProps$:s{							:i $id$ = %GLOBAL%$id$							:i $rgba$ = :a{%i(255)%i(255)%i(255)%i(255):a}							:i $time$ = %f(0.1000000)						:i :s}					:i endif				:i endif			:i endif		:i endif	:i endif	:i endfunction]