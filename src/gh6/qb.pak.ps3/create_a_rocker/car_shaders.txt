Unknown [1c000000000000000000081c0000000000000000]SectionQBKeyString cas_shader_default cas_shader_skinSectionStruct cas_shader_skin{	StructHeader	{		StructStruct variable_mappings		{			StructHeader			{				StructStruct diffuse				{					StructHeader					{						StructQBKey shader_var = m_psPass0MaterialColor						StructQBKey type = vector					}				}				StructStruct transition				{					StructHeader					{						StructQBKey shader_var = m_psTansitionColor						StructQBKey type = vector					}				}				StructStruct transition_width				{					StructHeader					{						StructQBKey shader_var = m_psTansitionWidth						StructQBKey type = float					}				}				StructStruct transition_position				{					StructHeader					{						StructQBKey shader_var = m_psTansitionPosition						StructQBKey type = float					}				}				StructStruct dark				{					StructHeader					{						StructQBKey shader_var = m_psDarkColor						StructQBKey type = vector					}				}				StructStruct edge				{					StructHeader					{						StructQBKey shader_var = m_psEdgeColor						StructQBKey type = vector					}				}				StructStruct edge_power				{					StructHeader					{						StructQBKey shader_var = m_psEdgePower						StructQBKey type = float					}				}				StructStruct edge_amount				{					StructHeader					{						StructQBKey shader_var = m_psEdgeAmount						StructQBKey type = float					}				}				StructStruct spec_power				{					StructHeader					{						StructQBKey shader_var = m_psSpecularPower						StructQBKey type = vector					}				}				StructStruct spec_color				{					StructHeader					{						StructQBKey shader_var = m_psPass0SpecularColor						StructQBKey type = vector					}				}				StructStruct envmap_intensity				{					StructHeader					{						StructQBKey shader_var = m_envMapIntensity						StructQBKey type = float					}				}				StructStruct normal_map				{					StructHeader					{						StructQBKey shader_var = m_normalMapBumpinessPass0						StructQBKey type = float					}				}			}		}	}}SectionStruct cas_shader_skin_masked1{	StructHeader	{		StructStruct variable_mappings		{			StructHeader			{				StructStruct diffuse				{					StructHeader					{						StructQBKey shader_var = m_psPass0MaterialColor						StructQBKey type = vector					}				}				StructStruct transition				{					StructHeader					{						StructQBKey shader_var = m_psTansitionColor						StructQBKey type = vector					}				}				StructStruct dark				{					StructHeader					{						StructQBKey shader_var = m_psDarkColor						StructQBKey type = vector					}				}				StructStruct edge				{					StructHeader					{						StructQBKey shader_var = m_psEdgeColor						StructQBKey type = vector					}				}			}		}	}}SectionStruct cas_shader_skin_masked2{	StructHeader	{		StructStruct variable_mappings		{			StructHeader			{				StructStruct diffuse				{					StructHeader					{						StructQBKey shader_var = m_psPass0MaterialColorMasked						StructQBKey type = vector					}				}				StructStruct transition				{					StructHeader					{						StructQBKey shader_var = m_psTansitionColorMasked						StructQBKey type = vector					}				}				StructStruct dark				{					StructHeader					{						StructQBKey shader_var = m_psDarkColorMasked						StructQBKey type = vector					}				}				StructStruct edge				{					StructHeader					{						StructQBKey shader_var = m_psEdgeColorMasked						StructQBKey type = vector					}				}			}		}	}}SectionStruct cas_shader_hair{	StructHeader	{		StructStruct variable_mappings		{			StructHeader			{				StructStruct diffuse				{					StructHeader					{						StructQBKey shader_var = m_psDiffuseColor						StructQBKey type = vector					}				}				StructStruct edge				{					StructHeader					{						StructQBKey shader_var = m_psEdgeColor						StructQBKey type = vector					}				}				StructStruct edge_specular_start				{					StructHeader					{						StructQBKey shader_var = m_psEdgeSpecularStart						StructQBKey type = float					}				}				StructStruct edge_specular_end				{					StructHeader					{						StructQBKey shader_var = m_psEdgeSpecularEnd						StructQBKey type = float					}				}				StructStruct edge_specular_power				{					StructHeader					{						StructQBKey shader_var = m_psEdgeSpecularPower						StructQBKey type = float					}				}				StructStruct edge_mix				{					StructHeader					{						StructQBKey shader_var = m_psEdgeMix						StructQBKey type = float					}				}				StructStruct primary				{					StructHeader					{						StructQBKey shader_var = m_psRColor						StructQBKey type = vector					}				}				StructStruct primary_spec_power				{					StructHeader					{						StructQBKey shader_var = m_psRSpecWidth						StructQBKey type = float					}				}				StructStruct secondary				{					StructHeader					{						StructQBKey shader_var = m_psTRTColor						StructQBKey type = vector					}				}				StructStruct secondary_spec_power				{					StructHeader					{						StructQBKey shader_var = m_psTRTSpecWidth						StructQBKey type = float					}				}				StructStruct normal_map				{					StructHeader					{						StructQBKey shader_var = m_psMapInfluence						StructQBKey type = float					}				}				StructStruct light_wrapping				{					StructHeader					{						StructQBKey shader_var = m_psLightWrapping						StructQBKey type = float					}				}				StructStruct ambient_cutoff				{					StructHeader					{						StructQBKey shader_var = m_psAmbientCutoff						StructQBKey type = float					}				}			}		}	}}