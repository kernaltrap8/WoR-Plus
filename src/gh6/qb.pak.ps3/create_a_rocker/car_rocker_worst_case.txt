Unknown [1c0000000000000000001c740000000000000000]SectionStruct worst_user_cap_entry{	StructHeader	{		StructQBKey texture = tex\models\Characters\Skater_Male\Decals\CAG_PrimitiveShape_009		StructQBKey color = red_orange_1		StructInt a = 70		StructInt x_trans = -22		StructInt y_trans = 17		StructInt x_skew = -18		StructInt y_skew = -39		StructInt x_scale = 21		StructInt y_scale = 50		StructInt rot = 3783		StructInt flags = 3	}}SectionQBKeyStringQs worst_car_loc_string_name cc00d2c0SectionStruct worst_user_cap_entry_base{	StructHeader	{		StructQBKey base_tex = tex\models\CAR_Instruments\Bass\cab_body_b1a_d_mls		StructArray layers		{			Floats [0.00000, 0.00000]		}	}}SectionStruct worst_cap_preset_entry{	StructHeader	{		StructQBKey base_tex = tex\models\CAR_Instruments\Bass\cab_body_b1a_d_mls		StructArray pre_layer		{			ArrayStruct			[				StructHeader				{					StructQBKey texture = tex\models\Characters\Layers\CAB\CAB_Body_ARKS_Pale					StructInt flags = 4					StructQBKey color = Black_1guitar				}						]		}	}}SectionStruct worst_bones_entry{	StructHeader	{		StructFloat HeadSize = -0.9329999685287476		StructFloat FaceFullness = 0.4000000059604645		StructFloat JawScale = 0.5		StructFloat ChinSize = 0.6610000133514404		StructFloat CheekboneShape = 0.8219999670982361		StructFloat NoseSize = 0.00		StructFloat NosePosition = 0.00		StructFloat NoseBridge = 0.5		StructFloat NoseTip = 0.6000000238418579		StructFloat MouthAngle = 0.20000000298023224		StructFloat MouthDepth = 0.4000000059604645		StructFloat MouthPosition = 0.6000000238418579		StructFloat LowerLipThickness = 0.04699999839067459		StructFloat MouthScale = 0.20000000298023224		StructFloat LipShape = 0.20000000298023224		StructFloat EyeAngle = 0.699999988079071		StructFloat EyeScale = 0.30000001192092896		StructFloat EyeDistance = 0.5		StructFloat EyeShape = 0.5		StructFloat EyePosition = 0.20000000298023224		StructFloat BrowPosition = 0.4000000059604645		StructFloat EyebrowAngle = 0.00		StructFloat EyebrowShape = 0.8999999761581421		StructFloat BrowDepth = 0.20000000298023224		StructFloat EyebrowDistance = 0.20000000298023224		StructFloat EyeDepth = 0.6000000238418579		StructFloat UpperLipThickness = 0.5	}}SectionArray worst_additional_bone_entry{	ArrayStruct	[		StructHeader		{			StructQBKey bone = Bone_Neck			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.250000, 0.250000, 0.250000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Chest			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.100000, 0.400000, 0.400000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Stomach_Upper			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.100000, 0.250000, 0.250000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Stomach_Lower			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.100000, 0.250000, 0.150000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Collar_R			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.200000, 0.200000, 0.200000]					}					StructQBKey no_propagate				}			}			StructStruct translation			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.00000, -0.0700000]					}				}			}		}		StructHeader		{			StructQBKey bone = Bone_Collar_L			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.200000, 0.200000, 0.200000]					}					StructQBKey no_propagate				}			}			StructStruct translation			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.00000, 0.0700000]					}				}			}		}		StructHeader		{			StructQBKey bone = Bone_Twist_Bicep_Top_R			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.650000, 0.500000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Twist_Bicep_Mid_R			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.650000, 0.500000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Bicep_R			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.650000, 0.500000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Twist_Bicep_Top_L			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.650000, 0.500000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Twist_Bicep_Mid_L			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.650000, 0.500000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Bicep_L			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.650000, 0.500000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Forearm_L			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.500000, 0.350000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Forearm_R			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.500000, 0.350000]					}					StructQBKey no_propagate				}			}		}		StructHeader		{			StructQBKey bone = Bone_Palm_L			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.300000, 0.300000]					}				}			}		}		StructHeader		{			StructQBKey bone = Bone_Palm_R			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.00000, 0.300000, 0.300000]					}				}			}		}		StructHeader		{			StructQBKey bone = Bone_Ankle_R			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.130000, 0.00000, 0.300000]					}				}			}		}		StructHeader		{			StructQBKey bone = Bone_Ankle_L			StructStruct scaling			{				StructHeader				{					StructFloatX3 value					{						Floats [0.130000, 0.00000, 0.300000]					}				}			}		}		]}SectionStruct worst_chosen_materials_entry{	StructHeader	{		StructQBKey material1 = green_1		StructQBKey material2 = grey_2	}}SectionArray worst_car_defs{	ArrayStruct	[		StructHeader		{			StructQBKey part = cas_body			StructInt custom_cap_sections = 4			StructInt cap_preset_layers = 2			StructQBKey bones = true			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = cas_male_physique			StructQBKey additional_bones = true		}		StructHeader		{			StructQBKey part = CAS_Eyes		}		StructHeader		{			StructQBKey part = CAS_Male_Hair			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Hat_Hair			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Facial_Hair			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Hat			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Torso			StructInt custom_cap_sections = 1			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Legs			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Shoes			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Acc_Left			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Acc_Right			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Acc_Face			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Acc_Ears			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Age		}		StructHeader		{			StructQBKey part = CAS_Male_Teeth		}		]}SectionArray worst_preset_defs{	ArrayStruct	[		StructHeader		{			StructQBKey part = CAS_Male_Hair			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Hat_Hair			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Facial_Hair			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Hat			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Torso			StructInt custom_cap_sections = 1			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Legs			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Shoes			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Acc_Left			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Acc_Right			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Acc_Face			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Acc_Ears			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Male_Age		}		StructHeader		{			StructQBKey part = CAS_Male_Teeth		}		]}SectionArray worst_guitar_defs{	ArrayStruct	[		StructHeader		{			StructQBKey part = CAS_Guitar_Body			StructInt custom_cap_sections = 1			StructInt cap_preset_layers = 2			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Guitar_Neck			StructInt cap_preset_layers = 2			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Guitar_Head			StructInt custom_cap_sections = 1			StructInt cap_preset_layers = 2			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Guitar_Pickguards			StructInt cap_preset_layers = 1			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Guitar_Bridges			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Guitar_Knobs			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Guitar_Pickups			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Guitar_Strings		}		]}SectionArray worst_bass_defs{	ArrayStruct	[		StructHeader		{			StructQBKey part = CAS_Bass_Body			StructInt custom_cap_sections = 1			StructInt cap_preset_layers = 2			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Bass_Neck			StructInt cap_preset_layers = 2			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Bass_Head			StructInt custom_cap_sections = 1			StructInt cap_preset_layers = 2			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Bass_Pickguards			StructInt cap_preset_layers = 1			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Bass_Bridges			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Bass_Knobs			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Bass_Pickups			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Bass_Strings		}		]}SectionArray worst_drum_defs{	ArrayStruct	[		StructHeader		{			StructQBKey part = CAS_Drums			StructInt custom_cap_sections = 1			StructInt cap_preset_layers = 2			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Drums_Sticks			StructInt chosen_materials = 2		}		]}SectionArray worst_vocals_defs{	ArrayStruct	[		StructHeader		{			StructQBKey part = CAS_Mic			StructInt chosen_materials = 2		}		StructHeader		{			StructQBKey part = CAS_Mic_Stand			StructInt chosen_materials = 2		}		]}SectionArray worst_logo_defs{	ArrayStruct	[		StructHeader		{			StructQBKey part = CAS_Band_Logo			StructInt custom_cap_sections = 1		}		]}SectionStruct worst_entry_global{	StructHeader {}}Script generate_worst_cas_struct ff63d7b0 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				defs			]		}		StructQBKey all	}$		:i $change$${		StructStruct worst_entry_global		{			StructHeader {}		}	}$		:i $ForEachIn$%GLOBAL%$defs$$do$ = $generate_worst_cas_struct_foreach$	:i $cas_struct$ = (~$worst_entry_global$)	:i $change$${		StructStruct worst_entry_global		{			StructHeader {}		}	}$		:i return $cas_struct$ = %GLOBAL%$cas_struct$	:i endfunction]Script generate_worst_cas_struct_foreach d6495878 [	:i $struct$ = (~$worst_entry_global$)	:i $new_entry$ = :s{		:i $desc_id$ = $AxelHighway$	:i :s}	:i if $GotParam$${StructQBKey chosen_materials}$		:i $newstruct$ = :s{:s}		:i $i$ = %i(0)		:i while 		:i $FormatText$$checksumname$ = $field$%s("material%d")$d$ = (%GLOBAL%$i$ + %i(1))		:i $UpdateStructElement$$struct$ = %GLOBAL%$newstruct$$element$ = %GLOBAL%$field$$value$ = $green_1$		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$chosen_materials$		:i $new_entry$ = :s{			:i %GLOBAL%$new_entry$			:i $chosen_materials$ = %GLOBAL%$newstruct$		:i :s}	:i endif	:i if $GotParam$${StructQBKey bones}$		:i $new_entry$ = :s{			:i %GLOBAL%$new_entry$			:i $bones$ = (~$worst_bones_entry$)		:i :s}	:i endif	:i if $GotParam$${StructQBKey additional_bones}$		:i $new_entry$ = :s{			:i %GLOBAL%$new_entry$			:i $bones$ = (~$worst_additional_bone_entry$)		:i :s}	:i endif	:i $array$ = :a{:a}	:i if $GotParam$${StructQBKey cap_preset_layers}$		:i $i$ = %i(0)		:i while 		:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = (~$worst_cap_preset_entry$)		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$cap_preset_layers$	:i endif	:i if $GotParam$${StructQBKey custom_cap_sections}$		:i $i$ = %i(0)		:i while 		:i $cas_generate_worst_user_cap$$layers$ = (~$max_cap_layers$)		:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = %GLOBAL%$user_cap$		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$custom_cap_sections$	:i endif	:i $GetArraySize$%GLOBAL%$array$	:i if (%GLOBAL%$array_size$ > %i(0))		:i $new_entry$ = :s{			:i %GLOBAL%$new_entry$			:i $cap$ = %GLOBAL%$array$		:i :s}	:i endif	:i $new_entry$ = :s{		:i %GLOBAL%$new_entry$		:i $name$ = (~$worst_car_loc_string_name$)	:i :s}	:i $AppendStruct$$struct$ = $struct$$field$ = %GLOBAL%$part$$params$ = %GLOBAL%$new_entry$	:i $change$$worst_entry_global$ = %GLOBAL%$struct$	:i endfunction]Script cas_generate_worst_user_cap 0x7fbc521c [	:i $array$ = :a{:a}	:i $i$ = %i(0)	:i while 	:i $AddArrayElement$$array$ = %GLOBAL%$array$$element$ = (~$worst_user_cap_entry$)	:i $i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$layers$	:i return $user_cap$ = :s{(~$worst_user_cap_entry_base$)$layers$ = %GLOBAL%$array$:s}	:i endfunction]Script generate_worst_cas_struct_car d40f5b7b [	:i $worst$ = :s{:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_car_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_guitar_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_bass_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_drum_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_vocals_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i return $cas_struct$ = %GLOBAL%$worst$	:i endfunction]Script generate_worst_cas_struct_preset f891513a [	:i $worst$ = :s{:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_preset_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_guitar_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_bass_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_drum_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i $generate_worst_cas_struct$${StructQBString defs = worst_vocals_defs}$	:i $worst$ = :s{%GLOBAL%$worst$%GLOBAL%$cas_struct$:s}	:i return $cas_struct$ = %GLOBAL%$worst$	:i endfunction]Script generate_worst_cas 0x2e8be2df [	:i $printf$${StructString 0x00000000 = ""}$	:i $printf$${StructString 0x00000000 = "Name,Num,Components,Structs,Arrays,Vectors,WriteToBuffer,WriteToBufferSingle,WTBLZSS,WTBLZSSSingle"}$	:i $generate_worst_cas_struct_car$	:i $print_worst_cas$$cas_struct$ = %GLOBAL%$cas_struct$$num$ = ~$max_num_create_a_rockers$$name$ = %s("car")	:i $generate_worst_cas_struct_preset$	:i $GetArraySize$${StructQBString Preset_Musician_Profiles_Modifiable}$	:i $print_worst_cas$$cas_struct$ = %GLOBAL%$cas_struct$$num$ = %GLOBAL%$array_size$$name$ = %s("presetcar")	:i $generate_worst_cas_struct$${StructQBString defs = worst_guitar_defs}$	:i $print_worst_cas$$cas_struct$ = %GLOBAL%$cas_struct$$num$ = ~$max_num_instrument_saves$$name$ = %s("guitar")	:i $generate_worst_cas_struct$${StructQBString defs = worst_bass_defs}$	:i $print_worst_cas$$cas_struct$ = %GLOBAL%$cas_struct$$num$ = ~$max_num_instrument_saves$$name$ = %s("bass")	:i $generate_worst_cas_struct$${StructQBString defs = worst_drum_defs}$	:i $print_worst_cas$$cas_struct$ = %GLOBAL%$cas_struct$$num$ = ~$max_num_instrument_saves$$name$ = %s("drum")	:i $generate_worst_cas_struct$${StructQBString defs = worst_vocals_defs}$	:i $print_worst_cas$$cas_struct$ = %GLOBAL%$cas_struct$$num$ = ~$max_num_instrument_saves$$name$ = %s("vocals")	:i $generate_worst_cas_struct$${StructQBString defs = worst_logo_defs}$	:i $print_worst_cas$$cas_struct$ = %GLOBAL%$cas_struct$$num$ = ~$max_num_logo_saves$$name$ = %s("logos")	:i $printf$${StructString 0x00000000 = ""}$	:i $generate_worst_cas_struct_car$	:i $print_worst_cas$$cas_struct$ = %GLOBAL%$cas_struct$$num$ = %i(1)$name$ = %s("single car")	:i $printf$${StructString 0x00000000 = ""}$	:i endfunction]Script print_worst_cas 0x43063d0b [	${StructInt num = 1}$	:i $GetWriteToBufferSize$$struct$ = %GLOBAL%$cas_struct$$lzss$	:i $buffer_size_lzss$ = %GLOBAL%$buffer_size$	:i $GetWriteToBufferSize$$struct$ = %GLOBAL%$cas_struct$	:i $GetComponentUsage$$struct$ = %GLOBAL%$cas_struct$	:i $components_used$ = (%GLOBAL%$components_used$ * %GLOBAL%$num$)	:i $structs_used$ = (%GLOBAL%$structs_used$ * %GLOBAL%$num$)	:i $arrays_used$ = (%GLOBAL%$arrays_used$ * %GLOBAL%$num$)	:i $vectors_used$ = (%GLOBAL%$vectors_used$ * %GLOBAL%$num$)	:i $buffer_size_single$ = %GLOBAL%$buffer_size$	:i $buffer_size$ = (%GLOBAL%$buffer_size$ * %GLOBAL%$num$)	:i $buffer_size_lzss_single$ = %GLOBAL%$buffer_size_lzss$	:i $buffer_size_lzss$ = (%GLOBAL%$buffer_size_lzss$ * %GLOBAL%$num$)	:i $printf$%s("%s,%x,%a,%b,%c,%d,%e,%f,%g,%h")$s$ = %GLOBAL%$name$$x$ = %GLOBAL%$num$$a$ = %GLOBAL%$components_used$$b$ = %GLOBAL%$structs_used$$c$ = %GLOBAL%$arrays_used$$d$ = %GLOBAL%$vectors_used$$e$ = %GLOBAL%$buffer_size$$f$ = %GLOBAL%$buffer_size_single$$g$ = %GLOBAL%$buffer_size_lzss$$h$ = %GLOBAL%$buffer_size_lzss_single$	:i endfunction]