Unknown [1c0000000000000000003b7c0000000000000000]SectionArray enabled_songs_bitfield{	ArrayInteger	[		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295	]}SectionString songlist_pak_filename "gh6_musicstore"SectionInteger debug_music_store_show_all 0SectionStruct musicstore_albumlist_props{	StructHeader {}}SectionStruct musicstore_packlist_props{	StructHeader {}}SectionStruct musicstore_songlist_props{	StructHeader {}}SectionStruct musicstore_importlist_props{	StructHeader {}}SectionStruct musicstore_patchlist_props{	StructHeader {}}SectionStruct musicstore_all_props{	StructHeader	{		StructQBString musicstore_albumlist_props		StructQBString musicstore_packlist_props		StructQBString musicstore_songlist_props		StructQBString musicstore_importlist_props		StructQBString musicstore_patchlist_props	}}Script get_marketplace_pack_struct 0x95bd7361 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				pack_name			]		}		StructQBKey all	}$		:i $album_pack_props$ = :s{		:i (~$musicstore_albumlist_props$)		:i (~$musicstore_packlist_props$)	:i :s}	:i if $StructureContains$$structure$ = %GLOBAL%$album_pack_props$%GLOBAL%$pack_name$		:i $songprops$ = (%GLOBAL%$album_pack_props$->%GLOBAL%$pack_name$)		:i $should_include$ = %i(0)		:i if $music_store_get_product_code$$props$ = %GLOBAL%$songprops$			:i if $MarketplaceFunc$$func$ = $get_content_info$$id$ = %GLOBAL%$code$				:i $should_include$ = %i(1)			:i elseif ((~$debug_music_store_show_all$) = %i(1))				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("debug_music_store_show_all")				:i $should_include$ = %i(1)			:i else 				:i $printf$%s("No Pack content info for %s")$s$ = (%GLOBAL%$songprops$->$Title$)			:i endif		:i else 			:i if ((~$debug_music_store_show_all$) = %i(1))				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("debug_music_store_show_all")				:i $should_include$ = %i(1)			:i else 				:i $printf$%s("Content not on marketplace for pack %s")$s$ = (%GLOBAL%$songprops$->$Title$)			:i endif		:i endif		:i if (%GLOBAL%$should_include$ = %i(1))			:i $music_store_generate_date$$year$ = (%GLOBAL%$songprops$->$arrived_year$)$day$ = (%GLOBAL%$songprops$->$arrived_day$)$month$ = (%GLOBAL%$songprops$->$arrived_month$)			:i if ((%GLOBAL%$songprops$->$type$) = $pack$)				:i $music_store_get_pack_contents_strings$$pack_contents$ = (%GLOBAL%$songprops$->$pack_list$)			:i endif			:i $music_store_pack_check_patched$$pack_contents$ = (%GLOBAL%$songprops$->$pack_list$)			:i $music_store_pack_check_rating$$pack_contents$ = (%GLOBAL%$songprops$->$pack_list$)			:i if (%GLOBAL%$songprops$->$type$ = $pack$)				:i %GLOBAL%$type_string$ = ^[5abf8778]^			:i else 				:i %GLOBAL%$type_string$ = ^[6c9aa626]^			:i endif			:i $TruncatePackSring$$ui_string$ = (%GLOBAL%$songprops$->$Title$)$max_characters$ = (~$g_music_store_truncate_track_pack_title_length$)			:i $pack_entry$ = :s{				:i $song_checksum$ = %GLOBAL%$pack_name$				:i $song_title$ = %GLOBAL%$trunctated_string$				:i $song_sort_title$ = (%GLOBAL%$songprops$->$Title$)				:i $song_artist$ = (%GLOBAL%$songprops$->$artist$)				:i $type$ = (%GLOBAL%$songprops$->$type$)				:i $type_string$ = %GLOBAL%$type_string$				:i $price$ = %GLOBAL%$cost$				:i $purchased$ = %GLOBAL%$purchased$				:i $patched$ = %GLOBAL%$patched$				:i $code$ = %GLOBAL%$code$				:i $song_preview_asset_name$ = (%GLOBAL%$songprops$->$asset_name$)				:i $pack_list$ = (%GLOBAL%$songprops$->$pack_list$)				:i $song_year$ = (%GLOBAL%$songprops$->$release_year$)				:i $arrived_date$ = %GLOBAL%$date$				:i $title_strings$ = %GLOBAL%$title_strings$				:i $artist_strings$ = %GLOBAL%$artist_strings$				:i $song_rating$ = %GLOBAL%$rating$			:i :s}			:i if $music_store_is_new_arrival$$name$ = %GLOBAL%$pack_name$				:i $pack_entry$ = :s{%GLOBAL%$pack_entry$$new_arrival$ = %i(1):s}			:i endif			:i if $ScriptExists$${StructQBKey HACK_get_marketplace_pack_struct_edit}$				:i $HACK_get_marketplace_pack_struct_edit$ isNull 			:i endif			:i if NOT $music_store_should_hide_item$$struct$ = %GLOBAL%$songprops$				:i return $true$$pack_entry$ = %GLOBAL%$pack_entry$			:i endif		:i else 			:i $printf$%s("Content not on marketplace for pack %s")$s$ = %GLOBAL%$pack_name$		:i endif	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script music_store_pack_check_patched 0x74081da7 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				pack_contents			]		}		StructQBKey all	}$		:i $GetArraySize$%GLOBAL%$pack_contents$	:i if (%GLOBAL%$array_size$ > %i(0))		:i %GLOBAL%$i$ = %i(0)		:i while 		:i if $get_marketplace_song_struct$$song_name$ = (%GLOBAL%$pack_contents$:a{%GLOBAL%$i$:a})			:i if (%GLOBAL%$song_entry$->$patched$ = %i(0))				:i return ${StructInt patched = 0}$			:i endif		:i endif		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$	:i endif	:i return ${StructInt patched = 1}$	:i endfunction]Script music_store_pack_check_rating bc929f88 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				pack_contents			]		}		StructQBKey all	}$		:i $GetArraySize$%GLOBAL%$pack_contents$	:i if (%GLOBAL%$array_size$ > %i(0))		:i %GLOBAL%$i$ = %i(0)		:i while 		:i if $get_marketplace_song_struct$$song_name$ = (%GLOBAL%$pack_contents$:a{%GLOBAL%$i$:a})			:i if NOT (%GLOBAL%$song_entry$->$song_rating$ = $None$)				:i return $rating$ = (%GLOBAL%$song_entry$->$song_rating$)			:i endif		:i endif		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$	:i endif	:i return ${StructQBKey rating = None}$	:i endfunction]Script get_marketplace_song_struct 0x57fd5582 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				song_name			]		}		StructQBKey all	}$		:i if $StructureContains$$structure$ = ~$musicstore_songlist_props$%GLOBAL%$song_name$		:i $songprops$ = ((~$musicstore_songlist_props$)->%GLOBAL%$song_name$)		:i $should_include$ = %i(0)		:i if $music_store_get_product_code$$props$ = %GLOBAL%$songprops$			:i if $MarketplaceFunc$$func$ = $get_content_info$$id$ = %GLOBAL%$code$				:i $should_include$ = %i(1)			:i elseif ((~$debug_music_store_show_all$) = %i(1))				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("debug_music_store_show_all")				:i $should_include$ = %i(1)			:i else 				:i $printf$%s("Song not on marketplace for %s %a with code %c")$s$ = (%GLOBAL%$songprops$->$Title$)$a$ = (%GLOBAL%$songprops$->$artist$)$c$ = %GLOBAL%$code$			:i endif		:i else 			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$album_pack_only$				:i $cost$ = %i(99999)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("album_pack_only")				:i $should_include$ = %i(1)				:i if ((~$debug_music_store_show_all$) = %i(0))					:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$pack_list$						:i if NOT $music_store_check_code_exists$$packages$ = (%GLOBAL%$songprops$->$pack_list$)							:i $should_include$ = %i(0)							:i $printf$^[5b38385b]^$s$ = (%GLOBAL%$songprops$->$Title$)$a$ = (%GLOBAL%$songprops$->$artist$)						:i endif					:i endif				:i endif			:i elseif ((~$debug_music_store_show_all$) = %i(1))				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("debug_music_store_show_all")				:i $should_include$ = %i(1)			:i else 				:i $printf$%s("No product code for song %s %a")$s$ = (%GLOBAL%$songprops$->$Title$)$a$ = (%GLOBAL%$songprops$->$artist$)			:i endif		:i endif		:i if (%GLOBAL%$should_include$ = %i(1))			:i $music_store_generate_date$$year$ = (%GLOBAL%$songprops$->$arrived_year$)$day$ = (%GLOBAL%$songprops$->$arrived_day$)$month$ = (%GLOBAL%$songprops$->$arrived_month$)			:i $song_checksum$ = $null$			:i $song_checksum$ = (%GLOBAL%$songprops$->$checksum$)			:i if $StructureContains$$structure$ = ~$gh4_dlc_songlist_props$%GLOBAL%$song_checksum$				:i $MusicStoreSongDownloadedAndPatched$$song_checksum$ = %GLOBAL%$song_checksum$			:i else 				:i $patched$ = %i(1)			:i endif			:i %GLOBAL%$song_original_artist$ = %i(1)			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$original_artist$				:i %GLOBAL%$song_original_artist$ = (%GLOBAL%$songprops$->$original_artist$)			:i endif			:i %GLOBAL%$song_genre$ = $other$			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$genre$				:i %GLOBAL%$song_genre$ = (%GLOBAL%$songprops$->$genre$)			:i endif			:i %GLOBAL%$song_genre_string$ = ^[ae88c5bc]^			:i if $StructureContains$$structure$ = ~$song_genre_list$%GLOBAL%$song_genre$				:i %GLOBAL%$song_genre_string$ = ((~$song_genre_list$->%GLOBAL%$song_genre$)->$genre_string$)			:i else 				:i %GLOBAL%$song_genre_string$ = ((~$song_genre_list$->$other$)->$genre_string$)			:i endif			:i %GLOBAL%$song_duration$ = %i(0)			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$duration$				:i %GLOBAL%$song_duration$ = (%GLOBAL%$songprops$->$duration$)			:i endif			:i %GLOBAL%$song_guitar_difficulty_rating$ = %i(0)			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$guitar_difficulty_rating$				:i %GLOBAL%$song_guitar_difficulty_rating$ = (%GLOBAL%$songprops$->$guitar_difficulty_rating$)			:i endif			:i %GLOBAL%$song_bass_difficulty_rating$ = %i(0)			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$bass_difficulty_rating$				:i %GLOBAL%$song_bass_difficulty_rating$ = (%GLOBAL%$songprops$->$bass_difficulty_rating$)			:i endif			:i %GLOBAL%$song_vocals_difficulty_rating$ = %i(0)			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$vocals_difficulty_rating$				:i %GLOBAL%$song_vocals_difficulty_rating$ = (%GLOBAL%$songprops$->$vocals_difficulty_rating$)			:i endif			:i %GLOBAL%$song_drums_difficulty_rating$ = %i(0)			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$drums_difficulty_rating$				:i %GLOBAL%$song_drums_difficulty_rating$ = (%GLOBAL%$songprops$->$drums_difficulty_rating$)			:i endif			:i %GLOBAL%$song_band_difficulty_rating$ = %i(0)			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$band_difficulty_rating$				:i %GLOBAL%$song_band_difficulty_rating$ = (%GLOBAL%$songprops$->$band_difficulty_rating$)			:i endif			:i %GLOBAL%$song_rating$ = $None$			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$rating$				:i %GLOBAL%$song_rating$ = (%GLOBAL%$songprops$->$rating$)			:i endif			:i %GLOBAL%$song_double_kick$ = %i(0)			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$double_kick$				:i %GLOBAL%$song_double_kick$ = (%GLOBAL%$songprops$->$double_kick$)			:i endif			:i $song_entry$ = :s{				:i $song_checksum$ = %GLOBAL%$song_name$				:i $song_title$ = (%GLOBAL%$songprops$->$Title$)				:i $song_sort_title$ = (%GLOBAL%$songprops$->$Title$)				:i $song_artist$ = (%GLOBAL%$songprops$->$artist$)				:i $type$ = $song$				:i $type_string$ = ^[b0e5763a]^				:i $album_pack_only$ = (%GLOBAL%$songprops$->$album_pack_only$)				:i $price$ = %GLOBAL%$cost$				:i $purchased$ = %GLOBAL%$purchased$				:i $patched$ = %GLOBAL%$patched$				:i $code$ = %GLOBAL%$code$				:i $duration$ = (%GLOBAL%$songprops$->$duration$)				:i $song_genre$ = %GLOBAL%$song_genre$				:i $song_genre_string$ = %GLOBAL%$song_genre_string$				:i $song_preview_asset_name$ = (%GLOBAL%$songprops$->$asset_name$)				:i $pack_list$ = (%GLOBAL%$songprops$->$pack_list$)				:i $album$ = (%GLOBAL%$songprops$->$album_title$)				:i $song_year$ = (%GLOBAL%$songprops$->$year$)				:i $arrived_date$ = %GLOBAL%$date$				:i $song_original_artist$ = %GLOBAL%$song_original_artist$				:i $song_duration$ = %GLOBAL%$song_duration$				:i $song_guitar_difficulty_rating$ = %GLOBAL%$song_guitar_difficulty_rating$				:i $song_bass_difficulty_rating$ = %GLOBAL%$song_bass_difficulty_rating$				:i $song_vocals_difficulty_rating$ = %GLOBAL%$song_vocals_difficulty_rating$				:i $song_drums_difficulty_rating$ = %GLOBAL%$song_drums_difficulty_rating$				:i $song_band_difficulty_rating$ = %GLOBAL%$song_band_difficulty_rating$				:i $song_rating$ = %GLOBAL%$song_rating$				:i $song_double_kick$ = %GLOBAL%$song_double_kick$			:i :s}			:i if $music_store_is_new_arrival$$name$ = %GLOBAL%$song_name$				:i $song_entry$ = :s{%GLOBAL%$song_entry$$new_arrival$ = %i(1):s}			:i endif			:i if $ScriptExists$${StructQBKey HACK_get_marketplace_song_struct_edit}$				:i $HACK_get_marketplace_song_struct_edit$ isNull 			:i endif			:i if NOT $music_store_should_hide_item$$struct$ = %GLOBAL%$songprops$				:i return $true$$song_entry$ = %GLOBAL%$song_entry$			:i else 				:i $printf$%s("%s has been marked as hidden.")$s$ = (%GLOBAL%$songprops$->$Title$)			:i endif		:i endif	:i else 		:i $printf$%s("No song props for song %s")$s$ = %GLOBAL%$song_name$	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script get_marketplace_import_struct 0x110b6810 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				import_name			]		}		StructQBKey all	}$		:i if $StructureContains$$structure$ = ~$musicstore_importlist_props$%GLOBAL%$import_name$		:i $songprops$ = ((~$musicstore_importlist_props$)->%GLOBAL%$import_name$)		:i $should_include$ = %i(0)		:i if $music_store_get_product_code$$props$ = %GLOBAL%$songprops$			:i if $MarketplaceFunc$$func$ = $get_content_info$$id$ = %GLOBAL%$code$				:i $should_include$ = %i(1)			:i elseif $IsXenonOrWinDX$				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $should_include$ = %i(1)			:i elseif ((~$debug_music_store_show_all$) = %i(1))				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("debug_music_store_show_all")				:i $should_include$ = %i(1)			:i else 				:i $printf$%s("import not on marketplace for %s with code %c")$s$ = (%GLOBAL%$songprops$->$Title$)$c$ = %GLOBAL%$code$			:i endif		:i else 			:i if ((~$debug_music_store_show_all$) = %i(1))				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("debug_music_store_show_all")				:i $should_include$ = %i(1)			:i else 				:i $printf$%s("No product code for import %s")$s$ = (%GLOBAL%$songprops$->$Title$)			:i endif		:i endif		:i if (%GLOBAL%$should_include$ = %i(1))			:i $music_store_generate_date$$year$ = (%GLOBAL%$songprops$->$arrived_year$)$day$ = (%GLOBAL%$songprops$->$arrived_day$)$month$ = (%GLOBAL%$songprops$->$arrived_month$)			:i %GLOBAL%$song_rating$ = $None$			:i if $StructureContains$$structure$ = %GLOBAL%$songprops$$rating$				:i %GLOBAL%$song_rating$ = (%GLOBAL%$songprops$->$rating$)			:i endif			:i $song_title$ = (%GLOBAL%$songprops$->$Title$)			:i $HACK_modify_hits_string$$Title$ = (%GLOBAL%$songprops$->$Title$)$code$ = %GLOBAL%$code$			:i $import_entry$ = :s{				:i $song_checksum$ = %GLOBAL%$import_name$				:i $song_title$ = %GLOBAL%$song_title$				:i $song_sort_title$ = %GLOBAL%$song_title$				:i $type$ = $import$				:i $type_string$ = ^[ca5f1833]^				:i $price$ = %GLOBAL%$cost$				:i $purchased$ = %GLOBAL%$purchased$				:i $code$ = %GLOBAL%$code$				:i $song_preview_asset_name$ = (%GLOBAL%$songprops$->$asset_name$)				:i $contents$ = (%GLOBAL%$songprops$->$contents$)				:i $arrived_date$ = %GLOBAL%$date$				:i $song_rating$ = %GLOBAL%$song_rating$				:i $offering_id$ = (%GLOBAL%$songprops$->$offering_id$)			:i :s}			:i if $music_store_is_new_arrival$$name$ = %GLOBAL%$import_name$				:i $import_entry$ = :s{%GLOBAL%$import_entry$$new_arrival$ = %i(1):s}			:i endif			:i if $ScriptExists$${StructQBKey HACK_get_marketplace_import_struct_edit}$				:i $HACK_get_marketplace_import_struct_edit$ isNull 			:i endif			:i if NOT $music_store_should_hide_item$$struct$ = %GLOBAL%$songprops$				:i return $true$$import_entry$ = %GLOBAL%$import_entry$			:i else 				:i $printf$%s("%s has been marked as hidden.")$s$ = (%GLOBAL%$songprops$->$Title$)			:i endif		:i endif	:i else 		:i $printf$%s("No import props for import %s")$s$ = %GLOBAL%$song_name$	:i endif	:i return ${StructQBKey false}$	:i endfunction]SectionQBKeyStringQs g_smash_hits_import_string ed421180SectionQBKeyStringQs g_greatest_hits_import_string 0x16fcc2b4Script HACK_modify_hits_string 0x87af3cc3 [	:i $song_title$ = %GLOBAL%$Title$	:i if (%GLOBAL%$code$ = %s("41560840_CCF0029") OR %GLOBAL%$code$ = %s("EP0002-BLES00576_00-GHTHFCCPATCH0001-E001") OR %GLOBAL%$code$ = %s("UP0002-BLUS30292_00-GHTHFCCPATCH0001-UA01"))		:i $GetTerritory$		:i if (%GLOBAL%$territory$ = $territory_us$)			:i $song_title$ = ~$g_smash_hits_import_string$		:i else 			:i $song_title$ = ~$g_greatest_hits_import_string$		:i endif	:i endif	:i return $song_title$ = %GLOBAL%$song_title$	:i endfunction]Script get_marketplace_patch_struct 0x4a229ce6 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				patch_name			]		}		StructQBKey all	}$		:i if $StructureContains$$structure$ = ~$musicstore_patchlist_props$%GLOBAL%$patch_name$		:i $songprops$ = ((~$musicstore_patchlist_props$)->%GLOBAL%$patch_name$)		:i $should_include$ = %i(0)		:i if $music_store_get_product_code$$props$ = %GLOBAL%$songprops$			:i if $MarketplaceFunc$$func$ = $get_content_info$$id$ = %GLOBAL%$code$				:i $should_include$ = %i(1)			:i elseif $IsXenonOrWinDX$				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $should_include$ = %i(1)			:i elseif ((~$debug_music_store_show_all$) = %i(1))				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("debug_music_store_show_all")				:i $should_include$ = %i(1)			:i else 				:i $printf$%s("patch not on marketplace for %s with code %c")$s$ = (%GLOBAL%$songprops$->$Title$)$c$ = %GLOBAL%$code$			:i endif		:i else 			:i if ((~$debug_music_store_show_all$) = %i(1))				:i $cost$ = %i(0)				:i $cost_fraction$ = %i(0)				:i $purchased$ = %i(0)				:i $code$ = %s("debug_music_store_show_all")				:i $should_include$ = %i(1)			:i else 				:i $printf$%s("No product code for patch %s")$s$ = (%GLOBAL%$songprops$->$Title$)			:i endif		:i endif		:i if (%GLOBAL%$should_include$ = %i(1))			:i $music_store_generate_date$$year$ = (%GLOBAL%$songprops$->$arrived_year$)$day$ = (%GLOBAL%$songprops$->$arrived_day$)$month$ = (%GLOBAL%$songprops$->$arrived_month$)			:i $patch_entry$ = :s{				:i $song_checksum$ = %GLOBAL%$patch_name$				:i $song_title$ = (%GLOBAL%$songprops$->$Title$)				:i $song_sort_title$ = (%GLOBAL%$songprops$->$Title$)				:i $type$ = $patch$				:i $type_string$ = ^[e27944a1]^				:i $price$ = %GLOBAL%$cost$				:i $purchased$ = %GLOBAL%$purchased$				:i $code$ = %GLOBAL%$code$				:i $song_preview_asset_name$ = (%GLOBAL%$songprops$->$asset_name$)				:i $arrived_date$ = %GLOBAL%$date$			:i :s}			:i if $music_store_is_new_arrival$$name$ = %GLOBAL%$patch_name$				:i $patch_entry$ = :s{%GLOBAL%$patch_entry$$new_arrival$ = %i(1):s}			:i endif			:i if $ScriptExists$${StructQBKey HACK_get_marketplace_patch_struct_edit}$				:i $HACK_get_marketplace_patch_struct_edit$ isNull 			:i endif			:i if NOT $music_store_should_hide_item$$struct$ = %GLOBAL%$songprops$				:i return $true$$patch_entry$ = %GLOBAL%$patch_entry$			:i else 				:i $printf$%s("%s has been marked as hidden.")$s$ = (%GLOBAL%$songprops$->$Title$)			:i endif		:i endif	:i else 		:i $printf$%s("No props for patch %s")$s$ = %GLOBAL%$song_name$	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script music_store_get_pack_contents_strings 0x051b3a9d [	:i if NOT $GotParam$${StructQBKey pack_contents}$		:i return 	:i endif	:i %GLOBAL%$title_array$ = :a{:a}	:i %GLOBAL%$artist_array$ = :a{:a}	:i $GetArraySize$%GLOBAL%$pack_contents$	:i if (%GLOBAL%$array_size$ > %i(0))		:i %GLOBAL%$i$ = %i(0)		:i while 		:i if $get_marketplace_song_struct$$song_name$ = (%GLOBAL%$pack_contents$:a{%GLOBAL%$i$:a})			:i if NOT $StructureContains$$structure$ = %GLOBAL%$song_entry$$song_original_artist$				:i $AddArrayElement$$array$ = %GLOBAL%$title_array$$element$ = (%GLOBAL%$song_entry$->$song_title$)				:i %GLOBAL%$title_array$ = %GLOBAL%$array$				:i $AddArrayElement$$array$ = %GLOBAL%$artist_array$$element$ = (%GLOBAL%$song_entry$->$song_artist$)				:i %GLOBAL%$artist_array$ = %GLOBAL%$array$			:i else 				:i if (%GLOBAL%$song_entry$->$song_original_artist$ = %i(1))					:i $AddArrayElement$$array$ = %GLOBAL%$title_array$$element$ = (%GLOBAL%$song_entry$->$song_title$)					:i %GLOBAL%$title_array$ = %GLOBAL%$array$					:i $AddArrayElement$$array$ = %GLOBAL%$artist_array$$element$ = (%GLOBAL%$song_entry$->$song_artist$)					:i %GLOBAL%$artist_array$ = %GLOBAL%$array$				:i else 					:i $FormatText$$textname$ = $element$^[3b56c7f4]^$n$ = (%GLOBAL%$song_entry$->$song_title$)					:i $AddArrayElement$$array$ = %GLOBAL%$title_array$$element$ = %GLOBAL%$element$					:i %GLOBAL%$title_array$ = %GLOBAL%$array$					:i $AddArrayElement$$array$ = %GLOBAL%$artist_array$$element$ = ^[03ac90f0]^					:i %GLOBAL%$artist_array$ = %GLOBAL%$array$				:i endif			:i endif		:i endif		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$	:i endif	:i return $title_strings$ = %GLOBAL%$title_array$$artist_strings$ = %GLOBAL%$artist_array$	:i endfunction]Script music_store_check_code_exists 0x362b5110 [	${		StructArray packages		{			Floats [0.00000, 0.00000]		}	}$		:i $package_structs$ = :s{~$musicstore_albumlist_props$~$musicstore_packlist_props$~$musicstore_songlist_props$:s}	:i $GetArraySize$%GLOBAL%$packages$	:i if (%GLOBAL%$array_size$ > %i(0))		:i $i$ = %i(0)		:i while 		:i $package_props$ = (%GLOBAL%$package_structs$->(%GLOBAL%$packages$:a{%GLOBAL%$i$:a}))		:i if $music_store_get_product_code$$props$ = %GLOBAL%$package_props$			:i if $MarketplaceFunc$$func$ = $get_content_info$$id$ = %GLOBAL%$code$				:i return ${StructQBKey true}$			:i endif		:i endif		:i $i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script music_store_should_hide_item 0x05b86e62 [	:i if NOT $CheckForSignin$$network_platform_only$$controller_index$ = (~$primary_controller$)		:i return 	:i endif	:i $GetLocale$	:i if $StructureContains$$structure$ = %GLOBAL%$struct$$hide_for_locale$		:i if $ArrayContains$$array$ = (%GLOBAL%$struct$->$hide_for_locale$)$contains$ = %GLOBAL%$locale$			:i return ${StructQBKey true}$		:i endif	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script music_store_generate_date 0x61684aa8 [	${		StructInt year = 9999		StructInt month = 15		StructInt day = 31	}$		:i $date$ = %i(0)	:i $date$ = (%GLOBAL%$date$ + (%GLOBAL%$year$ * %i(512)))	:i $date$ = (%GLOBAL%$date$ + (%GLOBAL%$month$ * %i(32)))	:i $date$ = (%GLOBAL%$date$ + %GLOBAL%$day$)	:i return $date$ = %GLOBAL%$date$	:i endfunction]Script get_songlist_filename 0x8a709edf [	:i $songlistfile$ = (~$songlist_pak_filename$)	:i return $songlist_filename$ = (%GLOBAL%$songlistfile$ + %s(".pak"))	:i endfunction]Script issongavailable e607b2c7 [	${		StructInt for_bonus = 0		Unknown [000124001b0509c5696969690000002800012600cc12115e6969696900000000]	}$		:i $gamemode_gettype$	:i if NOT $FastStructureContains$$structure$ = ~$gh_songlist_props$$name$ = %GLOBAL%$song$		:i return ${StructQBKey false}$	:i endif	:i %GLOBAL%$song_props$ = :s{:s}	:i %GLOBAL%$song_props$ = (~$gh_songlist_props$->%GLOBAL%$song$)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_props$$name$ = $never_show_in_setlist$		:i return ${StructQBKey false}$	:i endif	:i if NOT $IsDownloadedSongEnabled$$song_prefix$ = (%GLOBAL%$song_props$->$name$)		:i return ${StructQBKey false}$	:i endif	:i if ((~$g_include_debug_songs$) = %i(1))		:i if NOT $is_song_downloaded$$song_checksum$ = %GLOBAL%$song$			:i return ${StructQBKey false}$		:i endif		:i if (%GLOBAL%$download$ = %i(0))			:i return ${StructQBKey true}$		:i endif	:i else 		:i $check_allowed_in_quickplay$ = %i(0)		:i if ((~$is_network_game$ = %i(1)) OR (%GLOBAL%$type$ = $quickplay$) OR (%GLOBAL%$type$ = $competitive$) OR (%GLOBAL%$type$ = $training$) OR (%GLOBAL%$type$ = $freeplay$) OR (%GLOBAL%$type$ = $practice$))			:i $check_allowed_in_quickplay$ = %i(1)		:i endif		:i if (%GLOBAL%$check_allowed_in_quickplay$ = %i(1))			:i $get_song_allowed_in_quickplay$$song$ = %GLOBAL%$song$			:i if (%GLOBAL%$allowed_in_quickplay$ = %i(0))				:i return ${StructQBKey false}$			:i endif		:i endif	:i endif	:i %GLOBAL%$on_disc_song$ = %i(0)	:i %GLOBAL%$global_on_disc_array_name$ = (~$on_disc_list$)	:i if $ArrayContains$$array$ = ~%GLOBAL%$global_on_disc_array_name$$contains$ = %GLOBAL%$song$		:i %GLOBAL%$on_disc_song$ = %i(1)	:i endif	:i if (~$is_network_game$ = %i(1))		:i if (%GLOBAL%$on_disc_song$ = %i(0))			:i if NOT $SonglistMatch$$func$ = $is_available_on_other_client$$name$ = (%GLOBAL%$song_props$->$name$)				:i return ${StructQBKey false}$			:i endif		:i endif		:i $get_song_saved_in_globaltags$$song$ = %GLOBAL%$song$		:i if (%GLOBAL%$saved_in_globaltags$ = %i(1))			:i return ${StructQBKey true}$		:i endif	:i else 		:i if $FastStructureContains$$structure$ = ~$download_songlist_props$$name$ = %GLOBAL%$song$			:i $MusicStoreSongDownloadedAndPatched$$song_checksum$ = %GLOBAL%$song$			:i if (%GLOBAL%$downloaded$ = %i(1))				:i return ${StructQBKey true}$			:i endif		:i else 			:i return ${StructQBKey true}$		:i endif		:i return ${StructQBKey false}$	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script IsSongSelectable 0x494007d0 [	${		Unknown [00012600cc12115e6969696900000018]		StructInt savegame = -1	}$		:i if $song_is_jamsession$$song$ = %GLOBAL%$song$		:i return ${StructQBKey true}$	:i endif	:i if (%GLOBAL%$savegame$ = %i(4294967295))		:i $get_savegame_from_controller$$controller$ = (~$primary_controller$)	:i endif	:i if $is_song_locked$$song$ = %GLOBAL%$song$$savegame$ = %GLOBAL%$savegame$		:i return ${			StructQBKey false			StructInt song_is_locked = 1		}$			:i endif	:i %GLOBAL%$downloaded$ = %i(1)	:i %GLOBAL%$patched$ = %i(1)	:i if $FastStructureContains$$structure$ = ~$download_songlist_props$$name$ = %GLOBAL%$song$		:i $MusicStoreSongDownloadedAndPatched$$song_checksum$ = %GLOBAL%$song$	:i endif	:i if (%GLOBAL%$patched$ = %i(0))		:i return ${			StructQBKey false			StructInt song_not_patched = 1		}$			:i endif	:i if NOT $FastStructureContains$$structure$ = ~$gh_songlist_props$$name$ = %GLOBAL%$song$		:i $printf$%s("Song not found in props: %a")$a$ = %GLOBAL%$song$		:i return ${StructQBKey false}$	:i endif	:i if NOT $ScreenElementExistsSimpleID$${StructQBKey id = songlist_component}$		:i return ${StructQBKey true}$	:i endif	:i if NOT $songlist_component$.$Obj_GetStructureTag$${			StructQBKey tag_name = band_instrument_setup			StructInt assert = 0		}$				:i return ${StructQBKey true}$	:i endif	:i %GLOBAL%$song_struct$ = :s{:s}	:i %GLOBAL%$song_struct$ = (~$gh_songlist_props$->%GLOBAL%$song$)	:i %GLOBAL%$song_guitar_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $guitar_difficulty_rating$		:i %GLOBAL%$song_guitar_difficulty_rating$ = (%GLOBAL%$song_struct$->$guitar_difficulty_rating$)	:i endif	:i %GLOBAL%$song_bass_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $bass_difficulty_rating$		:i %GLOBAL%$song_bass_difficulty_rating$ = (%GLOBAL%$song_struct$->$bass_difficulty_rating$)	:i endif	:i %GLOBAL%$song_vocals_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $vocals_difficulty_rating$		:i %GLOBAL%$song_vocals_difficulty_rating$ = (%GLOBAL%$song_struct$->$vocals_difficulty_rating$)	:i endif	:i %GLOBAL%$song_drums_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $drums_difficulty_rating$		:i %GLOBAL%$song_drums_difficulty_rating$ = (%GLOBAL%$song_struct$->$drums_difficulty_rating$)	:i endif	:i $gamemode_gettype$	:i if (%GLOBAL%$type$ = $competitive$)		:i if (%GLOBAL%$structure_value$->$guitar$->$contains$ = $true$ AND (%GLOBAL%$song_guitar_difficulty_rating$ = %i(0)))			:i return ${StructQBKey false}$		:i endif		:i if (%GLOBAL%$structure_value$->$Bass$->$contains$ = $true$ AND (%GLOBAL%$song_bass_difficulty_rating$ = %i(0)))			:i return ${StructQBKey false}$		:i endif		:i if (%GLOBAL%$structure_value$->$Vocals$->$contains$ = $true$ AND (%GLOBAL%$song_vocals_difficulty_rating$ = %i(0)))			:i return ${StructQBKey false}$		:i endif		:i if (%GLOBAL%$structure_value$->$drum$->$contains$ = $true$ AND (%GLOBAL%$song_drums_difficulty_rating$ = %i(0)))			:i return ${StructQBKey false}$		:i endif	:i else 		:i %GLOBAL%$num_players$ = %i(0)		:i $GetNumPlayersInGame$		:i if (%GLOBAL%$type$ = $quickplay$ AND %GLOBAL%$num_players$ > %i(1))			:i if (%GLOBAL%$structure_value$->$guitar$->$contains$ = $true$ AND (%GLOBAL%$song_guitar_difficulty_rating$ = %i(0)))				:i return ${StructQBKey false}$			:i endif			:i if (%GLOBAL%$structure_value$->$Bass$->$contains$ = $true$ AND (%GLOBAL%$song_bass_difficulty_rating$ = %i(0)))				:i return ${StructQBKey false}$			:i endif		:i else 			:i if (%GLOBAL%$structure_value$->$guitar$->$only$ = $true$ AND (%GLOBAL%$song_guitar_difficulty_rating$ = %i(0)))				:i return ${StructQBKey false}$			:i endif			:i if (%GLOBAL%$structure_value$->$Bass$->$only$ = $true$ AND (%GLOBAL%$song_bass_difficulty_rating$ = %i(0)))				:i return ${StructQBKey false}$			:i endif			:i if (%GLOBAL%$structure_value$->$Vocals$->$only$ = $true$ AND (%GLOBAL%$song_vocals_difficulty_rating$ = %i(0)))				:i return ${StructQBKey false}$			:i endif			:i if (%GLOBAL%$structure_value$->$drum$->$only$ = $true$ AND (%GLOBAL%$song_drums_difficulty_rating$ = %i(0)))				:i return ${StructQBKey false}$			:i endif		:i endif	:i endif	:i return ${StructQBKey true}$	:i endfunction]Script is_part_supported 0x72d3156a [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				part			]		}		StructQBKey all	}$		:i $support_part$ = %GLOBAL%$part$	:i $GetNumPlayersInGame$	:i if NOT $GameMode_IsCooperative$		:i if (%GLOBAL%$num_players$ = %i(1))			:i $GetFirstPlayer$			:i while 			:i $getplayerinfo$%GLOBAL%$player$$part$			:i if (%GLOBAL%$part$ = %GLOBAL%$support_part$)				:i return ${StructQBKey false}$			:i endif			:i $GetNextPlayer$$player$ = %GLOBAL%$player$			:i loop_to %GLOBAL%$num_players$		:i endif	:i endif	:i return ${StructQBKey true}$	:i endfunction]Script get_ui_song_struct_items 0x7e69542b [	${Unknown [00012600cc12115e6969696900000018000124001b0509c56969696900000000]}$	:i if NOT $FastStructureContains$$structure$ = ~$gh_songlist_props$$name$ = %GLOBAL%$song$		:i $printf$%s("Song not found in props: %a")$a$ = %GLOBAL%$song$		:i return ${StructQBKey song_not_found = true}$	:i endif	:i %GLOBAL%$song_struct$ = :s{:s}	:i %GLOBAL%$song_struct$ = (~$gh_songlist_props$->%GLOBAL%$song$)	:i $downloaded$ = %i(1)	:i $patched$ = %i(1)	:i if $FastStructureContains$$structure$ = ~$download_songlist_props$$name$ = %GLOBAL%$song$		:i $MusicStoreSongDownloadedAndPatched$$song_checksum$ = %GLOBAL%$song$	:i endif	:i %GLOBAL%$song_title$ = ^[7af5891d]^	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $Title$		:i if $GetLocalizedStringFromStruct$$struct$ = %GLOBAL%$song_struct$$name$ = $Title$			:i %GLOBAL%$song_title$ = %GLOBAL%$string$		:i endif		:i %GLOBAL%$sort_title$ = %GLOBAL%$song_title$		:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $sort_title$			:i %GLOBAL%$sort_title$ = (%GLOBAL%$song_struct$->$sort_title$)		:i endif	:i elseif $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $display_name$		:i if $GetLocalizedStringFromStruct$$struct$ = %GLOBAL%$song_struct$$name$ = $display_name$			:i %GLOBAL%$song_title$ = %GLOBAL%$string$		:i endif		:i %GLOBAL%$sort_title$ = %GLOBAL%$song_title$		:i %GLOBAL%$song$ = $jamsession$	:i elseif $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $filename$		:i if $GetLocalizedStringFromStruct$$struct$ = %GLOBAL%$song_struct$$name$ = $filename$			:i %GLOBAL%$song_title$ = %GLOBAL%$string$		:i endif		:i %GLOBAL%$sort_title$ = %GLOBAL%$song_title$		:i %GLOBAL%$song$ = $jamsession$	:i endif	:i %GLOBAL%$song_artist$ = ^[dede583c]^	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $artist$		:i if $GetLocalizedStringFromStruct$$struct$ = %GLOBAL%$song_struct$$name$ = $artist$			:i %GLOBAL%$song_artist$ = %GLOBAL%$string$		:i endif	:i endif	:i %GLOBAL%$song_genre$ = $other$	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $genre$		:i %GLOBAL%$song_genre$ = (%GLOBAL%$song_struct$->$genre$)	:i endif	:i %GLOBAL%$song_genre_string$ = ^[ae88c5bc]^	:i if $FastStructureContains$$structure$ = ~$song_genre_list$$name$ = %GLOBAL%$song_genre$		:i if $GetLocalizedStringFromStruct$$struct$ = (~$song_genre_list$->%GLOBAL%$song_genre$)$name$ = $genre_string$			:i %GLOBAL%$song_genre_string$ = %GLOBAL%$string$		:i endif	:i else 		:i if $GetLocalizedStringFromStruct$$struct$ = (~$song_genre_list$->$other$)$name$ = $genre_string$			:i %GLOBAL%$song_genre_string$ = %GLOBAL%$string$		:i endif	:i endif	:i %GLOBAL%$song_year$ = %i(2010)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $year$		:i %GLOBAL%$song_year$ = (%GLOBAL%$song_struct$->$year$)	:i endif	:i %GLOBAL%$song_venue$ = %i(20)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $venue$		:i %GLOBAL%$song_venue$ = (%GLOBAL%$song_struct$->$venue$)	:i endif	:i %GLOBAL%$song_album_title$ = ^[4d663b3f]^	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $album_title$		:i if $GetLocalizedStringFromStruct$$struct$ = %GLOBAL%$song_struct$$name$ = $album_title$			:i %GLOBAL%$song_album_title$ = %GLOBAL%$string$		:i endif	:i endif	:i %GLOBAL%$song_duration$ = %i(0)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $duration$		:i %GLOBAL%$song_duration$ = (%GLOBAL%$song_struct$->$duration$)	:i elseif $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $musicstudio_song_length$		:i %GLOBAL%$song_length_float$ = %f(0.0)		:i %GLOBAL%$song_length_float$ = (%GLOBAL%$song_struct$->$musicstudio_song_length$)		:i %GLOBAL%$song_length_float$ = (%GLOBAL%$song_length_float$ / %f(1000.0))		:i $ConvertToInteger$$float_value$ = %GLOBAL%$song_length_float$		:i %GLOBAL%$song_duration$ = %GLOBAL%$integer_value$	:i endif	:i %GLOBAL%$song_guitar_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $guitar_difficulty_rating$		:i %GLOBAL%$song_guitar_difficulty_rating$ = (%GLOBAL%$song_struct$->$guitar_difficulty_rating$)	:i endif	:i %GLOBAL%$song_bass_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $bass_difficulty_rating$		:i %GLOBAL%$song_bass_difficulty_rating$ = (%GLOBAL%$song_struct$->$bass_difficulty_rating$)	:i endif	:i %GLOBAL%$song_vocals_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $vocals_difficulty_rating$		:i %GLOBAL%$song_vocals_difficulty_rating$ = (%GLOBAL%$song_struct$->$vocals_difficulty_rating$)	:i endif	:i %GLOBAL%$song_drums_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $drums_difficulty_rating$		:i %GLOBAL%$song_drums_difficulty_rating$ = (%GLOBAL%$song_struct$->$drums_difficulty_rating$)	:i endif	:i %GLOBAL%$song_band_difficulty_rating$ = %i(11)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $band_difficulty_rating$		:i %GLOBAL%$song_band_difficulty_rating$ = (%GLOBAL%$song_struct$->$band_difficulty_rating$)	:i endif	:i %GLOBAL%$song_preview_asset_name$ = %s("placeholder_album")	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $album_img$		:i if $GetNonLocalizedStringFromStruct$$struct$ = %GLOBAL%$song_struct$$name$ = $album_img$			:i %GLOBAL%$song_preview_asset_name$ = %GLOBAL%$nl_string$		:i endif	:i endif	:i %GLOBAL%$song_original_artist$ = %i(1)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $original_artist$		:i %GLOBAL%$song_original_artist$ = (%GLOBAL%$song_struct$->$original_artist$)	:i endif	:i %GLOBAL%$song_double_kick$ = %i(0)	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $double_kick$		:i %GLOBAL%$song_double_kick$ = (%GLOBAL%$song_struct$->$double_kick$)	:i endif	:i $GetGlobalTagSongUIParams$$song$ = %GLOBAL%$song$$savegame$ = %GLOBAL%$savegame$	:i if $is_song_locked$$song$ = %GLOBAL%$song$$savegame$ = %GLOBAL%$savegame$		:i %GLOBAL%$source$ = $Guitar_Hero_6_Locked$		:i %GLOBAL%$source_txt$ = ^[3d2956c8]^	:i else 		:i %GLOBAL%$source$ = $null$		:i %GLOBAL%$source_txt$ = ^[03ac90f0]^		:i $get_song_source$$song_name$ = %GLOBAL%$song$	:i endif	:i $ui_struct$ = :s{		:i $song_checksum$ = %GLOBAL%$song$		:i $song_title$ = %GLOBAL%$song_title$		:i $song_sort_title$ = %GLOBAL%$sort_title$		:i $song_artist$ = %GLOBAL%$song_artist$		:i $song_genre$ = %GLOBAL%$song_genre$		:i $song_genre_string$ = %GLOBAL%$song_genre_string$		:i $song_year$ = %GLOBAL%$song_year$		:i $song_album_title$ = %GLOBAL%$song_album_title$		:i $song_duration$ = %GLOBAL%$song_duration$		:i $song_guitar_difficulty_rating$ = %GLOBAL%$song_guitar_difficulty_rating$		:i $song_bass_difficulty_rating$ = %GLOBAL%$song_bass_difficulty_rating$		:i $song_vocals_difficulty_rating$ = %GLOBAL%$song_vocals_difficulty_rating$		:i $song_drums_difficulty_rating$ = %GLOBAL%$song_drums_difficulty_rating$		:i $song_band_difficulty_rating$ = %GLOBAL%$song_band_difficulty_rating$		:i $song_preview_asset_name$ = %GLOBAL%$song_preview_asset_name$		:i $song_venue$ = %GLOBAL%$song_venue$		:i $song_source$ = %GLOBAL%$source$		:i $song_source_txt$ = %GLOBAL%$source_txt$		:i $song_original_artist$ = %GLOBAL%$song_original_artist$		:i $song_double_kick$ = %GLOBAL%$song_double_kick$		:i $song_downloaded$ = %GLOBAL%$downloaded$		:i $song_patched$ = %GLOBAL%$patched$		:i $song_num_times_played$ = %GLOBAL%$num_times_played$		:i $song_stars$ = %GLOBAL%$song_stars$	:i :s}	:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $playback_track1$		:i $musicstudio_genre$ = %i(4294967295)		:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $musicstudio_genre$			:i $musicstudio_genre$ = (%GLOBAL%$song_struct$->$musicstudio_genre$)		:i endif		:i $song_source$ = $ghtunes$		:i $song_source_txt$ = ^[4b3cd73d]^		:i %GLOBAL%$additional_props$ = :s{:s}		:i if $FastStructureContains$$structure$ = %GLOBAL%$song_struct$$name$ = $additional_props$			:i $additional_props$ = (%GLOBAL%$song_struct$->$additional_props$)		:i endif		:i $musicstudio_genre_text$ = ^[d0ef7f05]^		:i $fastgetarraysize$${StructQBString array = jam_genre_list}$		:i if ((%GLOBAL%$musicstudio_genre$ >= %i(0)) AND (%GLOBAL%$musicstudio_genre$ < %GLOBAL%$array_size$))			:i if $GetLocalizedStringFromStruct$$struct$ = (~$jam_genre_list$:a{%GLOBAL%$musicstudio_genre$:a})$name$ = $name_text$				:i $musicstudio_genre_text$ = %GLOBAL%$string$			:i endif		:i endif		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $song_genre_string$$value$ = %GLOBAL%$musicstudio_genre_text$		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $song_source$$value$ = %GLOBAL%$song_source$		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $song_source_txt$$value$ = %GLOBAL%$song_source_txt$		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $filename$$value$ = (%GLOBAL%$song_struct$->$filename$)		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $playback_track1$$value$ = (%GLOBAL%$song_struct$->$playback_track1$)		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $playback_track2$$value$ = (%GLOBAL%$song_struct$->$playback_track2$)		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $playback_track_drums$$value$ = (%GLOBAL%$song_struct$->$playback_track_drums$)		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $playback_track_vocals$$value$ = (%GLOBAL%$song_struct$->$playback_track_vocals$)		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $musicstudio_genre$$value$ = %GLOBAL%$musicstudio_genre$		:i $AddParam$$structure_name$ = $ui_struct$$name$ = $additional_props$$value$ = %GLOBAL%$additional_props$	:i endif	:i return $ui_struct$ = %GLOBAL%$ui_struct$	:i endfunction]Script music_store_is_new_arrival 0x7acb4e2c [	:i if $globalexists$${StructQBKey name = musicstore_new_arrivals}$		:i if $StructureContains$${				StructQBString structure = musicstore_new_arrivals				StructQBKey WORLDWIDE			}$						:i if $ArrayContains$$array$ = (~$musicstore_new_arrivals$->$WORLDWIDE$)$contains$ = %GLOBAL%$name$				:i return ${StructQBKey true}$			:i endif		:i endif		:i if $MarketplaceFunc$${StructQBKey func = get_region_checksum}$			:i if $StructureContains$$structure$ = ~$musicstore_new_arrivals$%GLOBAL%$region_checksum$				:i if $ArrayContains$$array$ = (~$musicstore_new_arrivals$->%GLOBAL%$region_checksum$)$contains$ = %GLOBAL%$name$					:i return ${StructQBKey true}$				:i endif			:i endif		:i endif	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script music_store_get_product_code 0x44dd57fd [	${		StructStruct props		{			StructHeader {}		}	}$		:i if $StructureContains$$structure$ = %GLOBAL%$props$$product_codes$		:i $product_codes$ = (%GLOBAL%$props$->$product_codes$)		:i if $IsXenon$			:i if $StructureContains$$structure$ = %GLOBAL%$product_codes$$WORLDWIDE$				:i return $true$$code$ = (%GLOBAL%$product_codes$->$WORLDWIDE$)			:i endif		:i endif		:i if $MarketplaceFunc$${StructQBKey func = get_region_checksum}$			:i if $StructureContains$$structure$ = %GLOBAL%$product_codes$%GLOBAL%$region_checksum$				:i return $true$$code$ = (%GLOBAL%$product_codes$->%GLOBAL%$region_checksum$)			:i endif		:i endif	:i endif	:i return ${StructQBKey false}$	:i endfunction]Script musicstore_additional_region_check 0x765fb43f [	:i if $IsPS3$		:i if $globalexists$${StructQBKey name = ps3_musicstore_locales_allowed}$			:i $GetLocale$			:i $GetTerritory$			:i if NOT $StructureContains$$structure$ = ~$ps3_musicstore_locales_allowed$%GLOBAL%$territory$				:i return ${StructQBKey false}$			:i endif			:i if NOT $ArrayContains$$array$ = (~$ps3_musicstore_locales_allowed$->%GLOBAL%$territory$)$contains$ = %GLOBAL%$locale$				:i return ${StructQBKey false}$			:i endif		:i endif	:i endif	:i return ${StructQBKey true}$	:i endfunction]Script songlist_clean_up_spawned_scripts 0x24065a37 [	:i $KillSpawnedScript$${StructQBKey name = songlist_request_page_when_ready}$	:i $KillSpawnedScript$${StructQBKey name = ui_create_music_store_scan_marketplace_spawned}$	:i $KillSpawnedScript$${StructQBKey name = ui_create_songlist_options}$	:i endfunction]Script songlist_unfocus_ui_elements c07bfc6e [	:i if $ScreenElementExists$${StructQBKey id = current_menu}$		:i $LaunchEvent$${			StructQBKey type = unfocus			StructQBKey target = current_menu		}$			:i endif	:i if $ScreenElementExists$${StructQBKey id = music_store_terms}$		:i $LaunchEvent$${			StructQBKey type = unfocus			StructQBKey target = music_store_terms		}$			:i endif	:i if $ScreenElementExists$${StructQBKey id = music_store_hub_vmenu}$		:i $LaunchEvent$${			StructQBKey type = unfocus			StructQBKey target = music_store_hub_vmenu		}$			:i endif	:i if $ScreenElementExists$${StructQBKey id = songlist_options_vmenu}$		:i $LaunchEvent$${			StructQBKey type = unfocus			StructQBKey target = songlist_options_vmenu		}$			:i endif	:i if $ScreenElementExists$${StructQBKey id = import_legal_dialog_box}$		:i $LaunchEvent$${			StructQBKey type = unfocus			StructQBKey target = import_legal_dialog_box		}$			:i endif	:i endfunction]SectionInteger g_marketplace_responding_to_error 0Script create_marketplace_error_dialogue 0x60c44fb4 [	${		StructQBStringQs body_text = 0x1ba51040		StructInt error_code = 0	}$		:i $SetSpawnInstanceLimits$${		StructInt max = 1		StructQBKey management = ignore_spawn_request	}$		:i $spawnscriptnow$$create_marketplace_error_dialogue_worker$$params$ = isNull 	:i endfunction]Script create_marketplace_error_dialogue_worker 0x5b969263 [	:i $SetSpawnInstanceLimits$${		StructInt max = 1		StructQBKey management = ignore_spawn_request	}$		:i if (~$g_marketplace_responding_to_error$ = %i(1))		:i return 	:i endif	:i $change$${StructInt g_marketplace_responding_to_error = 1}$	:i $destroy_dialog_box$	:i $songlist_clean_up_spawned_scripts$	:i $songlist_unfocus_ui_elements$	:i if NOT $cd$		:i if $GotParam$${StructQBKey dev_text}$			:i $FormatText$$textname$ = $body_text$^[05a9e77f]^$s$ = %GLOBAL%$body_text$$d$ = %GLOBAL%$dev_text$		:i endif	:i endif	:i $create_dialog_box$:s{		:i $no_background$		:i $heading_text$ = ^[aa163738]^		:i $body_text$ = %GLOBAL%$body_text$		:i $error_code$ = %GLOBAL%$error_code$		:i $options$ = :a{			:i :s{				:i $func$ = $songlist_marketplace_error_go_back$				:i $text$ = ^[0e41fe46]^			:i :s}		:i :a}	:i :s}	:i endfunction]Script songlist_marketplace_error_go_back e250b810 [	:i $destroy_dialog_box$	:i $change$${StructInt g_marketplace_responding_to_error = 0}$	:i $songlist_component$.$getsingletag$${StructQBKey tab_enabled}$	:i if (%GLOBAL%$tab_enabled$ = %i(1))		:i if $ui_event_exists_in_stack$${StructString name = "music_store_scan_marketplace"}$			:i $generic_event_back$${StructQBKey state = uistate_band_lobby}$		:i else 			:i $change$${StructInt g_songlist_refresh_menus = 1}$			:i $songlist_go_to_song_library_tab$${StructInt skip_scan = 1}$		:i endif	:i else 		:i if $ui_event_exists_in_stack$${StructString name = "band_lobby"}$			:i %GLOBAL%$back_state$ = $uistate_band_lobby$		:i else 			:i %GLOBAL%$back_state$ = $uistate_mainmenu$		:i endif		:i $ui_event$$event$ = $menu_back$$Data$ = :s{$state$ = %GLOBAL%$back_state$:s}	:i endif	:i endfunction]Script callback_marketplace_raf_setup_fail bf9c5f8e [	:i $printf$${StructString 0x00000000 = "MarketPlaceContentSource: failed to setup the RAF."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f676fb05		StructQBStringQs dev_text = 0x9223d6f4		StructInt error_code = 1	}$		:i endfunction]Script callback_marketplace_raf_get_fail 0x133ed2e2 [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: failed to retrieve the RAF."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f676fb05		StructQBStringQs dev_text = e1c5cc60		StructInt error_code = 2	}$		:i endfunction]Script callback_marketplace_retrieve_manifest_fail a6239665 [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: CDN failed to retrieve the manifest."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f4be4e2f		StructQBStringQs dev_text = 0x1cc3c608		StructInt error_code = 3	}$		:i endfunction]Script callback_marketplace_connecting_to_lsp_fail 0x85a58b92 [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: CDN failed to connect to the LSP server."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f4be4e2f		StructQBStringQs dev_text = 0x3b4882aa		StructInt error_code = 4	}$		:i endfunction]Script callback_marketplace_cdn_is_down 0x2971c960 [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: CDN is down."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f4be4e2f		StructQBStringQs dev_text = 0x5dc00207		StructInt error_code = 5	}$		:i endfunction]Script callback_marketplace_songlist_pak_request_fail 0x435814ce [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: failed to request the songlist pak."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = 0x17082ce4		StructQBStringQs dev_text = 0x4df46e28		StructInt error_code = 6	}$		:i endfunction]Script callback_marketplace_songlist_pak_download_fail 0x8fa49dec [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: failed to download the songlist pak."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = b63d2914		StructQBStringQs dev_text = a13222f1		StructInt error_code = 7	}$		:i endfunction]Script callback_marketplace_market_init_settings_fail d7bc5256 [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: failed to retrieve the marketplace init settings from the songlist pak."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = e50550eb		StructQBStringQs dev_text = c9840d4d		StructInt error_code = 8	}$		:i endfunction]Script callback_marketplace_market_init_fail 0x15c689ab [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: failed to init the marketplace."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f676fb05		StructQBStringQs dev_text = 0x45966566		StructInt error_code = 9	}$		:i endfunction]Script callback_marketplace_market_state_fail a9953c70 [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: failed to enumerate marketplace content, the marketplace is not idle."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f676fb05		StructQBStringQs dev_text = 0x58bdb77e		StructInt error_code = 10	}$		:i endfunction]Script callback_marketplace_market_begin_enum_fail f37dc901 [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: failed to begin enumerating marketplace content."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f676fb05		StructQBStringQs dev_text = 0x89fad2ea		StructInt error_code = 11	}$		:i endfunction]Script callback_marketplace_market_enum_validity_fail d766d9ce [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: failed the marketplace enumeration validity check."}$	:i if $IsPS3$		:i $dev_text$ = ^[02ac0e72]^	:i else 		:i $dev_text$ = ^[a898095a]^	:i endif	:i $create_marketplace_error_dialogue$$body_text$ = ^[f676fb05]^$dev_text$ = %GLOBAL%$dev_text$$error_code$ = %i(12)	:i endfunction]Script callback_marketplace_not_signed_in c384e551 [	:i $finalprintf$%s("MarketPlaceContentSource: controller %c not signed in.")$c$ = (~$primary_controller$)	:i if $IsPS3$		:i $body_text$ = ^[2aa76f36]^	:i else 		:i $body_text$ = ^[680a3a16]^	:i endif	:i $create_marketplace_error_dialogue$$body_text$ = %GLOBAL%$body_text$$dev_text$ = ^[c1ec24e1]^	:i endfunction]Script callback_marketplace_no_guest_account c8ff7a5b [	:i $finalprintf$%s("MarketPlaceContentSource: controller %c is a guest account, not allowed in the music store.")$c$ = (~$primary_controller$)	:i $create_marketplace_error_dialogue$${StructQBStringQs body_text = b9fd7c2c}$	:i if $IsPS3$		:i $scriptassert$${StructQBStringQs e5cf7db1}$	:i endif	:i endfunction]Script callback_marketplace_non_xbl_account 0x84b9a6aa [	:i $finalprintf$%s("MarketPlaceContentSource: controller %c is not an XBL enabled account, or not connected to XBL.")$c$ = (~$primary_controller$)	:i if $IsPS3$		:i $body_text$ = ^[2aa76f36]^	:i else 		:i $body_text$ = ^[d1dc3d89]^	:i endif	:i $create_marketplace_error_dialogue$$body_text$ = %GLOBAL%$body_text$	:i endfunction]Script callback_marketplace_connection_lost 0x4f6ac50c [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: connection lost."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = a76a52e8		StructInt error_code = 12	}$		:i endfunction]Script callback_marketplace_cannot_purchase_content fd6dd624 [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: profile is not allowed to purchase content"}$	:i if $IsPS3$		:i $body_text$ = ^[b0311ad6]^	:i else 		:i $body_text$ = ^[6bc7c154]^	:i endif	:i $create_marketplace_error_dialogue$$body_text$ = %GLOBAL%$body_text$	:i endfunction]Script callback_marketplace_region_not_supported 0x90e56a9d [	:i $finalprintf$${StructString 0x00000000 = "MarketPlaceContentSource: region not supported"}$	:i $create_marketplace_error_dialogue$${StructQBStringQs body_text = 0x2628f160}$	:i endfunction]Script callback_marketplace_content_list_download_failed 0x01eb58e0 [	:i $finalprintf$${StructString 0x00000000 = "Imports failed to download content list."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f4be4e2f		StructInt error_code = 14	}$		:i endfunction]Script callback_marketplace_content_list_download_timedout 0x9024da65 [	:i $finalprintf$${StructString 0x00000000 = "Imports timed out to download content list."}$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f4be4e2f		StructInt error_code = 15	}$		:i endfunction]Script callback_marketplace_content_general_timedout 0x3fa53deb [	:i $finalprintf$${StructString 0x00000000 = "Marketplace timed out to download Product Long Description."}$	:i $printscriptinfo$	:i $create_marketplace_error_dialogue$${StructQBStringQs body_text = e58d4b79}$	:i endfunction]Script callback_marketplace_detailed_description_request_failed 0x676ccd7b [	:i if NOT $IsPS3$		:i $scriptassert$${StructString 0x00000000 = "callback_marketplace_detailed_description_request_failed called from non ps3 sku. This is incorrect."}$	:i endif	:i $finalprintf$${StructString 0x00000000 = "Failed to make a request for the detailed descrition."}$	:i $printscriptinfo$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f676fb05		StructQBStringQs dev_text = a48c2d1d		StructInt error_code = 13	}$		:i endfunction]Script callback_marketplace_detailed_description_retrieve_failed c33d528c [	:i if NOT $IsPS3$		:i $scriptassert$${StructString 0x00000000 = "callback_marketplace_detailed_description_retrieve_failed called from non ps3 sku. This is incorrect."}$	:i endif	:i $finalprintf$${StructString 0x00000000 = "Failed to retrieve the detailed descrition."}$	:i $printscriptinfo$	:i $create_marketplace_error_dialogue$${		StructQBStringQs body_text = f676fb05		StructQBStringQs dev_text = 0x61db3621		StructInt error_code = 14	}$		:i endfunction]