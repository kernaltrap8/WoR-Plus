Unknown [1c00000000000000000062c40000000000000000]SectionInteger lightshow_enabled 1SectionInteger lightshow_debug 0SectionFloat lightvolume_flarecutoff 0.300000SectionQBKey lightvolume_flarematerialcrc FlareMaterial_FlareMaterialSectionQBKey lightvolume_lightbulbmaterialcrc LightBulbMaterial_LightBulbMaterialSectionFloat lightvolume_flaresaturate 0.800000SectionQBKey lightvolume_followbonename Bone_PelvisSectionStruct lightvolume_follow{	StructHeader	{		StructStruct allowedradius		{			StructHeader			{				StructFloat amplitude = 0.20000000298023224				StructFloat center = 1.00				StructFloat periodbase = 0.006500000134110451				StructArray periodmultiples				{					ArrayInteger					[						1						3						4						7					]				}			}		}		StructArray driftlerpmap		{			ArrayFloatsX2			[				Floats [0.00000, 0.400000]				Floats [0.200000, 0.700000]						]		}	}}SectionFloat lightshow_defaultblendtime 0.150000SectionFloat lightshow_coloroverrideblend 0.400000SectionInteger lightshow_offset_ms 100SectionQBKey lightshow_allow_mood_changes trueSectionQBKey lightshow_last_mood_requested 0x00000000SectionQBKey lightshow_mood_override_starpower falseSectionQBKey lightshow_mood_override_blackout falseSectionQBKey lightshow_mood_override_debug falseSectionArray lightshow_available_snapshot_names{	Floats [0.00000, 0.00000]}SectionArray lightshow_snapshot_mood{	Floats [0.00000, 0.00000]}SectionArray lightshow_menu_moods{	ArrayQBKey	[		intro		prelude		exposition		tension		climax		resolution		fallingaction	]}SectionFloat lightshow_menu_min_time 1.00000SectionFloat lightshow_menu_max_time 2.00000SectionFloat lightshow_menu_transition_time 0.150000SectionQBKey lightshow_debug_lighting_snapshot 0x00000000SectionArray lightshow_housingmodels{	ArrayStruct	[		StructHeader		{			StructString Model = "LightHousings\GO_NoHousing01\GO_NoHousing01.mdl"			StructQBKey clonesrc = LS_GO_NoHousing01		}		StructHeader		{			StructString Model = "LightHousings\GO_NoHousing01_Flare01\GO_NoHousing01_Flare01.mdl"			StructQBKey clonesrc = LS_GO_NoHousing01_Flare01		}		StructHeader		{			StructString Model = "LightHousings\GO_NoHousing01_SmallFlare01\GO_NoHousing01_SmallFlare01.mdl"			StructQBKey clonesrc = LS_GO_NoHousing01_SmallFlare01		}		StructHeader		{			StructString Model = "LightHousings\GO_BarnHousing01\GO_BarnHousing01.mdl"			StructQBKey clonesrc = LS_GO_BarnHousing01		}		StructHeader		{			StructString Model = "LightHousings\GO_LightHousing01\GO_LightHousing01.mdl"			StructQBKey clonesrc = LS_GO_LightHousing01		}		StructHeader		{			StructString Model = "LightHousings\GO_LightHousing01_SmallFlare01\GO_LightHousing01_SmallFlare01.mdl"			StructQBKey clonesrc = LS_GO_LightHousing01_SmallFlare01		}		StructHeader		{			StructString Model = "LightHousings\GO_LightHousing02\GO_LightHousing02.mdl"			StructQBKey clonesrc = LS_GO_LightHousing02		}		StructHeader		{			StructString Model = "LightHousings\GO_LightHousing02_SmallFlare01\GO_LightHousing02_SmallFlare01.mdl"			StructQBKey clonesrc = LS_GO_LightHousing02_SmallFlare01		}		StructHeader		{			StructString Model = "LightHousings\GO_LightHousing02_Small01\GO_LightHousing02_Small01.mdl"			StructQBKey clonesrc = LS_GO_LightHousing02_Small01		}		StructHeader		{			StructString Model = "LightHousings\GO_LH_Bowl\GO_LH_Bowl.mdl"			StructQBKey clonesrc = LS_GO_LH_Bowl		}		StructHeader		{			StructString Model = "LightHousings\GO_NoHousing01_MomentFlare01\GO_NoHousing01_MomentFlare01.mdl"			StructQBKey clonesrc = GO_NoHousing01_MomentFlare01		}		]}Script LightShow_CreatePermModels 0x30af564d [	:i $GetArraySize$${StructQBString lightshow_housingmodels}$	:i %GLOBAL%$i$ = %i(0)	:i while 	:i %GLOBAL%$desc$ = (~$lightshow_housingmodels$:a{%GLOBAL%$i$:a})	:i %GLOBAL%$Model$ = (%GLOBAL%$desc$->$Model$)	:i %GLOBAL%$Pos$ = (%vec2(-100.0,300.0) + %GLOBAL%$i$ * %vec2(0.0,10.0))	:i %GLOBAL%$src$ = (%GLOBAL%$desc$->$clonesrc$)	:i $CreateCompositeObject$:s{		:i $Components$ = :a{			:i :s{				:i $Component$ = $Model$				:i $Model$ = %GLOBAL%$Model$			:i :s}		:i :a}		:i $params$ = :s{			:i $Pos$ = %GLOBAL%$Pos$			:i $name$ = %GLOBAL%$src$		:i :s}	:i :s}	:i %GLOBAL%$src$.$hide$	:i %GLOBAL%$src$.$Obj_ForceUpdate$	:i %GLOBAL%$src$.$Suspend$	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i endfunction]Script LS_AllOff 0x13911476 [	:i $KillSpawnedScript$${StructQBKey id = lightshow}$	:i endfunction]Script LS_SetupVenueLights ffffffff [	:i endfunction]Script LS_ResetVenueLights 0x14a19d9f [	:i $LS_AllOff$	:i $LS_KillFX$	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i endfunction]Script LS_KillFX ffffffff [	:i endfunction]SectionArray lightshow_spotlightfollownames{	ArrayQBKey	[		guitarist		vocalist		bassist		drummer	]}SectionArray LightShow_StateNodeFlags{	ArrayQBKey	[		LS_PERF_POOR		LS_PERF_MEDIUM		LS_PERF_GOOD		LS_PERF_POOR_MEDIUM		LS_PERF_MEDIUM_GOOD		LS_PERF_POOR_MEDIUM_GOOD		LS_PERF_POOR_NOBLACKOUT		LS_PERF_MEDIUM_NOBLACKOUT		LS_PERF_GOOD_NOBLACKOUT		LS_PERF_POOR_MEDIUM_NOBLACKOUT		LS_PERF_MEDIUM_GOOD_NOBLACKOUT		LS_PERF_POOR_MEDIUM_GOOD_NOBLACKOUT		ls_mood_intro		ls_mood_blackout		ls_mood_flare		ls_mood_strobe		ls_mood_wash		ls_mood_prelude		ls_mood_exposition		ls_mood_rising		ls_mood_tension		ls_mood_climax		ls_mood_falling		ls_mood_resolution		ls_mood_pyro		ls_mood_silhouette		ls_mood_starpower		ls_mood_menu		ls_mood_band_lobby	]}SectionStruct lightshow_statenodeflagmapping{	StructHeader	{		StructStruct performance		{			StructHeader			{				StructArray poor				{					ArrayStruct					[						StructHeader						{							StructQBKey LS_PERF_POOR							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_GOOD							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_NOBLACKOUT							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_NOBLACKOUT							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_GOOD_NOBLACKOUT							StructInt 1						}										]				}				StructArray medium				{					ArrayStruct					[						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM_GOOD							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_GOOD							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_NOBLACKOUT							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM_NOBLACKOUT							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM_GOOD_NOBLACKOUT							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_GOOD_NOBLACKOUT							StructInt 1						}										]				}				StructArray good				{					ArrayStruct					[						StructHeader						{							StructQBKey LS_PERF_MEDIUM_GOOD							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_GOOD							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_GOOD							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM_GOOD_NOBLACKOUT							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_GOOD_NOBLACKOUT							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_GOOD_NOBLACKOUT							StructInt 1						}										]				}			}		}		StructStruct mood		{			StructHeader			{				StructArray intro				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_intro							StructInt 1						}										]				}				StructArray blackout				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_blackout							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_GOOD							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM_GOOD							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_GOOD							StructInt 0						}										]				}				StructArray flare				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_flare							StructInt 1						}						StructHeader						{							StructQBKey LS_PERF_POOR							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_GOOD							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_MEDIUM_GOOD							StructInt 0						}						StructHeader						{							StructQBKey LS_PERF_POOR_MEDIUM_GOOD							StructInt 0						}										]				}				StructArray strobe				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_strobe							StructInt 1						}										]				}				StructArray wash				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_wash							StructInt 1						}										]				}				StructArray prelude				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_prelude							StructInt 1						}										]				}				StructArray exposition				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_exposition							StructInt 1						}										]				}				StructArray risingaction				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_rising							StructInt 1						}										]				}				StructArray tension				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_tension							StructInt 1						}										]				}				StructArray climax				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_climax							StructInt 1						}										]				}				StructArray fallingaction				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_falling							StructInt 1						}										]				}				StructArray resolution				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_resolution							StructInt 1						}										]				}				StructArray pyro				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_pyro							StructInt 1						}										]				}				StructArray silhouette				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_silhouette							StructInt 1						}										]				}				StructArray starpower				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_starpower							StructInt 1						}										]				}				StructArray menu				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_menu							StructInt 1						}										]				}				StructArray band_lobby				{					ArrayStruct					[						StructHeader						{							StructQBKey ls_mood_band_lobby							StructInt 1						}										]				}			}		}	}}SectionArray LightShow_NoteMapping{	ArrayStruct	[		StructHeader		{			StructInt midinote = 107			StructQBKey scr = LightShow_ToggleNoteLengthMode			StructStruct params			{				StructHeader				{					StructQBKey color = red				}			}		}		StructHeader		{			StructInt midinote = 105			StructQBKey scr = LightShow_SpotlightColor			StructStruct params			{				StructHeader				{					StructQBKey color = red				}			}		}		StructHeader		{			StructInt midinote = 104			StructQBKey scr = LightShow_SpotlightColor			StructStruct params			{				StructHeader				{					StructQBKey color = orange				}			}		}		StructHeader		{			StructInt midinote = 103			StructQBKey scr = LightShow_SpotlightColor			StructStruct params			{				StructHeader				{					StructQBKey color = yellow				}			}		}		StructHeader		{			StructInt midinote = 102			StructQBKey scr = LightShow_SpotlightColor			StructStruct params			{				StructHeader				{					StructQBKey color = green				}			}		}		StructHeader		{			StructInt midinote = 101			StructQBKey scr = LightShow_SpotlightColor			StructStruct params			{				StructHeader				{					StructQBKey color = blue				}			}		}		StructHeader		{			StructInt midinote = 100			StructQBKey scr = LightShow_SpotlightColor			StructStruct params			{				StructHeader				{					StructQBKey color = purple				}			}		}		StructHeader		{			StructInt midinote = 99			StructQBKey scr = LightShow_SpotlightColor			StructStruct params			{				StructHeader				{					StructQBKey color = magenta				}			}		}		StructHeader		{			StructInt midinote = 98			StructQBKey scr = LightShow_SpotlightColor			StructStruct params			{				StructHeader				{					StructQBKey color = white				}			}		}		StructHeader		{			StructInt midinote = 97			StructQBKey scr = LightShow_EnableSpotlights			StructStruct params			{				StructHeader				{					StructQBKey enabled = true					StructArray spots					{						ArrayQBKey						[							vocalist						]					}				}			}		}		StructHeader		{			StructInt midinote = 96			StructQBKey scr = LightShow_EnableSpotlights			StructStruct params			{				StructHeader				{					StructQBKey enabled = false					StructArray spots					{						ArrayQBKey						[							vocalist						]					}				}			}		}		StructHeader		{			StructInt midinote = 95			StructQBKey scr = LightShow_EnableSpotlights			StructStruct params			{				StructHeader				{					StructQBKey enabled = true					StructArray spots					{						ArrayQBKey						[							guitarist						]					}				}			}		}		StructHeader		{			StructInt midinote = 94			StructQBKey scr = LightShow_EnableSpotlights			StructStruct params			{				StructHeader				{					StructQBKey enabled = false					StructArray spots					{						ArrayQBKey						[							guitarist						]					}				}			}		}		StructHeader		{			StructInt midinote = 93			StructQBKey scr = LightShow_EnableSpotlights			StructStruct params			{				StructHeader				{					StructQBKey enabled = true					StructArray spots					{						ArrayQBKey						[							bassist						]					}				}			}		}		StructHeader		{			StructInt midinote = 92			StructQBKey scr = LightShow_EnableSpotlights			StructStruct params			{				StructHeader				{					StructQBKey enabled = false					StructArray spots					{						ArrayQBKey						[							bassist						]					}				}			}		}		StructHeader		{			StructInt midinote = 91			StructQBKey scr = LightShow_EnableSpotlights			StructStruct params			{				StructHeader				{					StructQBKey enabled = true					StructArray spots					{						ArrayQBKey						[							drummer						]					}				}			}		}		StructHeader		{			StructInt midinote = 90			StructQBKey scr = LightShow_EnableSpotlights			StructStruct params			{				StructHeader				{					StructQBKey enabled = false					StructArray spots					{						ArrayQBKey						[							drummer						]					}				}			}		}		StructHeader		{			StructInt midinote = 88			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey resetcycleonmoodchange = true				}			}		}		StructHeader		{			StructInt midinote = 87			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey resetcycleonmoodchange = false				}			}		}		StructHeader		{			StructInt midinote = 84			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = intro				}			}		}		StructHeader		{			StructInt midinote = 83			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = blackout				}			}		}		StructHeader		{			StructInt midinote = 82			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = flare				}			}		}		StructHeader		{			StructInt midinote = 81			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = strobe				}			}		}		StructHeader		{			StructInt midinote = 80			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = wash				}			}		}		StructHeader		{			StructInt midinote = 79			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = prelude				}			}		}		StructHeader		{			StructInt midinote = 78			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = exposition				}			}		}		StructHeader		{			StructInt midinote = 77			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = risingaction				}			}		}		StructHeader		{			StructInt midinote = 76			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = tension				}			}		}		StructHeader		{			StructInt midinote = 75			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = climax				}			}		}		StructHeader		{			StructInt midinote = 74			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = fallingaction				}			}		}		StructHeader		{			StructInt midinote = 73			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = resolution				}			}		}		StructHeader		{			StructInt midinote = 72			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = pyro				}			}		}		StructHeader		{			StructInt midinote = 71			StructQBKey scr = LightShow_SetParams			StructStruct params			{				StructHeader				{					StructQBKey mood = silhouette				}			}		}		StructHeader		{			StructInt midinote = 69			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey color = red				}			}		}		StructHeader		{			StructInt midinote = 68			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey color = orange				}			}		}		StructHeader		{			StructInt midinote = 67			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey color = yellow				}			}		}		StructHeader		{			StructInt midinote = 66			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey color = green				}			}		}		StructHeader		{			StructInt midinote = 65			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey color = blue				}			}		}		StructHeader		{			StructInt midinote = 64			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey color = purple				}			}		}		StructHeader		{			StructInt midinote = 63			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey color = magenta				}			}		}		StructHeader		{			StructInt midinote = 62			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey color = white				}			}		}		StructHeader		{			StructInt midinote = 61			StructQBKey scr = LightShow_OverrideColor			StructStruct params			{				StructHeader				{					StructQBKey Off				}			}		}		StructHeader		{			StructInt midinote = 60			StructQBKey event = strobetoggle			StructStruct params			{				StructHeader				{					StructQBKey usesnapshotpositions = true				}			}		}		StructHeader		{			StructInt midinote = 58			StructQBKey event = snapshotchange			StructStruct params			{				StructHeader				{					StructQBKey usesnapshotpositions = true				}			}		}		StructHeader		{			StructInt midinote = 57			StructQBKey event = snapshotchange			StructStruct params			{				StructHeader				{					StructQBKey usesnapshotpositions = true				}			}		}		StructHeader		{			StructInt midinote = 56			StructQBKey event = visualizerChange			StructStruct params			{				StructHeader {}			}		}		StructHeader		{			StructInt midinote = 53			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 1.00				}			}		}		StructHeader		{			StructInt midinote = 52			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.8999999761581421				}			}		}		StructHeader		{			StructInt midinote = 51			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.800000011920929				}			}		}		StructHeader		{			StructInt midinote = 50			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.699999988079071				}			}		}		StructHeader		{			StructInt midinote = 49			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.6000000238418579				}			}		}		StructHeader		{			StructInt midinote = 48			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.5				}			}		}		StructHeader		{			StructInt midinote = 47			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.4000000059604645				}			}		}		StructHeader		{			StructInt midinote = 46			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.30000001192092896				}			}		}		StructHeader		{			StructInt midinote = 45			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.25				}			}		}		StructHeader		{			StructInt midinote = 44			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.20000000298023224				}			}		}		StructHeader		{			StructInt midinote = 43			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.15000000596046448				}			}		}		StructHeader		{			StructInt midinote = 42			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.10000000149011612				}			}		}		StructHeader		{			StructInt midinote = 41			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.05000000074505806				}			}		}		StructHeader		{			StructInt midinote = 40			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructFloat time = 0.00				}			}		}		StructHeader		{			StructInt midinote = 39			StructQBKey scr = LightShow_SetTime			StructStruct params			{				StructHeader				{					StructQBKey default				}			}		}		StructHeader		{			StructInt midinote = 37			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = generic				}			}		}		StructHeader		{			StructInt midinote = 35			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = front_1				}			}		}		StructHeader		{			StructInt midinote = 34			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = front_2				}			}		}		StructHeader		{			StructInt midinote = 33			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = front_3				}			}		}		StructHeader		{			StructInt midinote = 32			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = front_4				}			}		}		StructHeader		{			StructInt midinote = 31			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = top_1				}			}		}		StructHeader		{			StructInt midinote = 30			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = top_2				}			}		}		StructHeader		{			StructInt midinote = 29			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = top_3				}			}		}		StructHeader		{			StructInt midinote = 28			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = top_4				}			}		}		StructHeader		{			StructInt midinote = 27			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = mid_1				}			}		}		StructHeader		{			StructInt midinote = 26			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = mid_2				}			}		}		StructHeader		{			StructInt midinote = 25			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = mid_3				}			}		}		StructHeader		{			StructInt midinote = 24			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = mid_4				}			}		}		StructHeader		{			StructInt midinote = 23			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = back_1				}			}		}		StructHeader		{			StructInt midinote = 22			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = back_2				}			}		}		StructHeader		{			StructInt midinote = 21			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = back_3				}			}		}		StructHeader		{			StructInt midinote = 20			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = back_4				}			}		}		StructHeader		{			StructInt midinote = 19			StructQBKey scr = LightShow_PyroEvent			StructStruct params			{				StructHeader				{					StructQBKey type = Pyro_Special				}			}		}		]}SectionArray LightShow_SharedProcessors{	ArrayStruct	[		StructHeader		{			StructQBKey name = default_generic			StructQBKey screnter = LightShow_GenericMood_Enter			StructQBKey screvent = LightShow_GenericMood_Event			StructQBKey screxit = LightShow_GenericMood_Exit		}		StructHeader		{			StructQBKey name = Poor_Generic			StructQBKey screnter = LightShow_Poor_Enter			StructQBKey screvent = LightShow_Poor_Event			StructQBKey screxit = LightShow_Poor_Exit		}		StructHeader		{			StructQBKey name = Blackout_Generic			StructQBKey screnter = LightShow_Blackout_Enter			StructQBKey screvent = LightShow_Blackout_Event			StructQBKey screxit = LightShow_Blackout_Exit		}		StructHeader		{			StructQBKey name = Flare_Generic			StructQBKey screnter = LightShow_Flare_Enter			StructQBKey screvent = LightShow_Flare_Event			StructQBKey screxit = LightShow_Flare_Exit		}		StructHeader		{			StructQBKey name = Strobe_Generic			StructQBKey screnter = LightShow_GenericMood_Enter			StructQBKey screvent = LightShow_GenericMood_Event			StructQBKey screxit = LightShow_GenericMood_Exit		}		StructHeader		{			StructQBKey name = Visualizer_Generic			StructQBKey screnter = Visualizer_GenericMood_Enter			StructQBKey screvent = Visualizer_GenericMood_Event			StructQBKey screxit = Visualizer_GenericMood_Exit		}		]}Script lightshow_iterator_set_song_event 0x18878c0d [	:i $get_song_prefix$$song$ = %GLOBAL%$song_name$	:i $FormatText$$checksumname$ = $event_array$%s("%s_lightshow_notes")$s$ = %GLOBAL%$song_prefix$$addtostringlookup$ = $true$	:i if NOT $SongGlobalExists$$name$ = %GLOBAL%$event_array$$type$ = $array$		:i $printf$${StructQBStringQs 0x093d0e8a}$		:i return ${StructQBKey false}$	:i endif	:i return $true$$event_array$ = %GLOBAL%$event_array$	:i endfunction]Script lightshow_iterator_init 0x3c289fda [	:i $printf$^[c9557688]^$d$ = %GLOBAL%$time_offset$$channel$ = $events$	:i $LightShow_SetActive$${StructQBKey active = false}$	:i if NOT $cd$		:i $DestroyScreenElement$${StructQBKey id = LightShow_DebugAnchor}$		:i if (~$lightshow_debug$ = %i(1))			:i $LightShow_DisplayDebugInfo$		:i endif	:i endif	:i if (~$lightshow_enabled$ = %i(0))		:i $printf$${StructQBStringQs 0x46b6ad6b}$		:i return ${StructQBKey false}$	:i endif	:i if NOT $lightshow_iterator_set_song_event$$song_name$ = %GLOBAL%$song_name$		:i return ${StructQBKey false}$	:i endif	:i if NOT $lightshow_initeventmappings$		:i return ${StructQBKey false}$	:i endif	:i $change$${StructInt g_lightshow_usenotelength_mode = 0}$	:i return $true$$event_array$ = %GLOBAL%$event_array$$parse_notetrack$ = %GLOBAL%$parse_notetrack$	:i endfunction]Script lightshow_iterator 0x035cf452 [	:i if NOT $lightshow_iterator_init$ isNull 		:i return 	:i endif	:i $array_entry$ = %i(0)	:i $fretbar_count$ = %i(0)	:i $GetSongArraySize$%GLOBAL%$event_array$	:i $array_size$ = (%GLOBAL%$array_size$ / %i(2))	:i $getsongtimems$$time_offset$ = %GLOBAL%$time_offset$	:i if NOT (%GLOBAL%$array_size$ = %i(0))		:i while 		:i $GetSongGlobal$$name$ = %GLOBAL%$event_array$$index$ = %GLOBAL%$array_entry$		:i if ((%GLOBAL%$time$ - %GLOBAL%$skipleadin$) < %GLOBAL%$element$)			:i continue		:i endif		:i $GetSongGlobal$$name$ = %GLOBAL%$event_array$$index$ = (%GLOBAL%$array_entry$ + %i(1))		:i $decompressnotevalue$$note_value$ = %GLOBAL%$element$		:i if (%GLOBAL%$note_value$ = %i(107))			:i $LightShow_ToggleNoteLengthMode$		:i endif		:i %GLOBAL%$array_entry$ = (%GLOBAL%$array_entry$ + %i(2))		:i loop_to %GLOBAL%$array_size$		:i $array_size$ = (%GLOBAL%$array_size$ - (%GLOBAL%$array_entry$ / %i(2)))		:i if NOT (%GLOBAL%$array_size$ = %i(0))			:i while 			:i $GetSongGlobal$$name$ = %GLOBAL%$event_array$$index$ = %GLOBAL%$array_entry$			:i $array_time_entry$ = %GLOBAL%$element$			:i $TimeMarkerReached_SetParams$$time_offset$ = %GLOBAL%$time_offset$$time$ = %GLOBAL%$array_time_entry$$perframe$			:i while 			:i $LightShow_Update$			:i if $TimeMarkerReached$				:i $getsongtimems$$time_offset$ = %GLOBAL%$time_offset$				:i continue			:i endif			:i $wait$${				StructInt 1				StructQBKey gameframe			}$						:i loop_to 			:i $TimeMarkerReached_ClearParams$			:i if (%GLOBAL%$array_size$ = %i(0))				:i continue			:i endif			:i $Process_Lightshow_Note$$event_array$ = %GLOBAL%$event_array$$array_entry$ = %GLOBAL%$array_entry$$parse_notetrack$ = %GLOBAL%$parse_notetrack$			:i %GLOBAL%$array_entry$ = (%GLOBAL%$array_entry$ + %i(2))			:i loop_to %GLOBAL%$array_size$		:i endif	:i endif	:i if NOT $cd$		:i if $ScreenElementExists$${StructQBKey id = lightshow_debugtext}$			:i $lightshow_debugtext$.$se_setprops$${StructQBStringQs text = cbc0eb10}$		:i endif	:i endif	:i while 	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i $LightShow_Update$	:i loop_to 	:i endfunction]Script Process_Lightshow_Note 0x613eb6ee [	:i $GetSongGlobal$$name$ = %GLOBAL%$event_array$$index$ = (%GLOBAL%$array_entry$ + %i(1))	:i $decompressnotevalue$$note_value$ = %GLOBAL%$element$	:i if (%GLOBAL%$Length$ > %i(150))		:i $Length$ = (%GLOBAL%$Length$ - %i(50))	:i endif	:i if (%GLOBAL%$parse_notetrack$ = $true$)		:i if (~$lightshow_mood_override_debug$ = $false$)			:i $GetSongGlobal$$name$ = %GLOBAL%$event_array$$index$ = %GLOBAL%$array_entry$			:i if $LightShow_BeginProcessBlock$:s{$time$ = %GLOBAL%$element$					:i $note_value$ = %GLOBAL%$note_value$				:i $Length$ = %GLOBAL%$Length$:s}				:i switch %GLOBAL%$process_mode$					:i case $event$						:i $LightShow_PassEvent$						:i endcase					case $scr$						:i %GLOBAL%$eventscr$%GLOBAL%$eventparams$				:i end_switch				:i $LightShow_EndProcessBlock$			:i endif		:i endif	:i endif	:i endfunction]SectionInteger g_lightshow_usenotelength_mode 0Script LightShow_ToggleNoteLengthMode 0x47e8bb4e [	:i $printf$${StructQBStringQs 0x5460a434}$	:i $change$$g_lightshow_usenotelength_mode$ = (%i(1) - ~$g_lightshow_usenotelength_mode$)	:i endfunction]Script LightShow_ToggleDebugInfo 0x3e75c59c [	:i if (~$lightshow_debug$ = %i(1))		:i $change$${StructInt lightshow_debug = 0}$		:i $DestroyScreenElement$${StructQBKey id = LightShow_DebugAnchor}$	:i else 		:i $change$${StructInt lightshow_debug = 1}$		:i $LightShow_DisplayDebugInfo$	:i endif	:i endfunction]Script LightShow_DisplayDebugInfo 0x152721c0 [	:i $DestroyScreenElement$${StructQBKey id = LightShow_DebugAnchor}$	:i $CreateScreenElement$${		StructQBKey type = ContainerElement		StructQBKey parent = root_window		StructQBKey id = LightShow_DebugAnchor		StructFloatX2 Pos		{			Floats [400.000, 440.000]		}		StructInt z_priority = 1000	}$		:i $CreateScreenElement$${		StructQBKey type = SpriteElement		StructQBKey parent = LightShow_DebugAnchor		StructFloatX2 dims		{			Floats [500.000, 220.000]		}		StructArray just		{			ArrayQBKey			[				left				top			]		}		StructArray rgba		{			ArrayInteger			[				0				0				0				255			]		}		StructFloat alpha = 0.699999988079071	}$		:i $CreateScreenElement$${		StructQBKey type = TextBlockElement		StructQBKey parent = LightShow_DebugAnchor		StructQBKey id = lightshow_debugtext		StructArray just		{			ArrayQBKey			[				left				top			]		}		StructFloatX2 Pos		{			Floats [0.00000, 0.00000]		}		StructFloatX2 dims		{			Floats [1000.00, 1000.00]		}		StructQBKey font = fontgrid_text_a1		StructFloatX2 internal_scale		{			Floats [0.600000, 0.400000]		}		StructQBStringQs text = cbc0eb10	}$		:i if NOT $LightShow_GetParams$		:i $lightshow_debugtext$ = ^[46e08381]^	:i endif	:i endfunction]Script LightShow_PyroEvent b93e097d [	:i if $LightShow_GetPyroScript$		:i if $StructureContains$$structure$ = $pyro_scripts$%GLOBAL%$type$			:i $GetPakManCurrent$${StructQBKey map = zones}$			:i if NOT (%GLOBAL%$pak$ = $z_Visualizer$)				:i if $ScriptIsRunning$${StructQBKey fretbar_update_tempo}$					:i if NOT (~$game_mode$ = $practice$)						:i $SoundEvent$${StructQBKey event = pyro}$					:i endif				:i endif			:i endif			:i %GLOBAL%$scr$ = (%GLOBAL%$pyro_scripts$->%GLOBAL%$type$)			:i if $LightShow_GetParams$				:i if $ScriptExists$%GLOBAL%$scr$					:i $spawnscriptnow$%GLOBAL%$scr$$id$ = $lightshow$$params$ = :s{$performance$ = %GLOBAL%$performance$:s}				:i endif			:i endif		:i else 			:i $printf$%s("lightshow - pyro event skipped due to missing venue type %s")$s$ = %GLOBAL%$type$		:i endif	:i else 		:i $printf$${StructString 0x00000000 = "lightshow - pyro event skipped due to missing venue definitions"}$	:i endif	:i endfunction]Script LightShow_Poor_Enter 0x99678612 [	:i $LightShow_CycleNextSnapshot$${		StructQBKey usesnapshotpositions = true		StructQBKey save = true	}$		:i endfunction]Script LightShow_Poor_Exit ffffffff [	:i endfunction]Script LightShow_Poor_Event b51c807d [	:i while 	:i $LightShow_WaitForNextEvent$${		StructArray events		{			ArrayQBKey			[				snapshotchange			]		}	}$		:i loop_to 	:i endfunction]Script LightShow_GenericMood_Enter 0x99678612 [	:i $LightShow_CycleNextSnapshot$${		StructQBKey usesnapshotpositions = true		StructQBKey save = true	}$		:i endfunction]Script LightShow_GenericMood_Exit ffffffff [	:i endfunction]Script LightShow_GenericMood_Event 0x3f2204be [	:i while 	:i $LightShow_WaitForNextEvent$${		StructArray events		{			ArrayQBKey			[				snapshotchange			]		}	}$		:i $LightShow_ProcessNoteLength$$Length$ = %GLOBAL%$Length$	:i $LightShow_CycleNextSnapshot$$usesnapshotpositions$ = %GLOBAL%$usesnapshotpositions$$save$ = $true$	:i loop_to 	:i endfunction]Script LightShow_Blackout_Enter 0x080755b7 [	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i switch %GLOBAL%$pak$		:i case $z_training$			:i endcase		case $z_viewer$			:i $LightShow_AppendSnapshotParams$${				StructFloat intensity = 0.25				StructFloat specularintensity = 0.25			}$				:i end_switch	:i $LightShow_CycleNextSnapshot$${		StructQBKey save = false		StructQBKey usesnapshotpositions = true	}$		:i endfunction]Script LightShow_Blackout_Event ffffffff [	:i endfunction]Script LightShow_Blackout_Exit 0x7d866f52 [	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i switch %GLOBAL%$pak$		:i case $z_training$			:i endcase		case $z_viewer$			:i $LightShow_AppendSnapshotParams$${StructQBKey Clear}$	:i end_switch	:i endfunction]Script LightShow_Flare_Enter 0x080755b7 [	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i switch %GLOBAL%$pak$		:i case $z_training$			:i endcase		case $z_viewer$			:i $LightShow_AppendSnapshotParams$${				StructFloat intensity = 0.25				StructFloat specularintensity = 0.25			}$				:i end_switch	:i $LightShow_CycleNextSnapshot$${		StructQBKey save = false		StructQBKey usesnapshotpositions = true	}$		:i endfunction]Script LightShow_Flare_Event ffffffff [	:i endfunction]Script LightShow_Flare_Exit 0x7d866f52 [	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i switch %GLOBAL%$pak$		:i case $z_training$			:i endcase		case $z_viewer$			:i $LightShow_AppendSnapshotParams$${StructQBKey Clear}$	:i end_switch	:i endfunction]Script LightShow_Strobe_Enter 0x9b528520 [	:i $LightShow_SetTime$${StructQBKey enable = false}$	:i endfunction]Script LightShow_Strobe_Event d4bbfbcb [	:i $LightShow_GetParams$	:i %GLOBAL%$original_snapshot$ = %GLOBAL%$previous_snapshot$	:i while 	:i $LightShow_CycleNextSnapshot$${		StructQBKey usesnapshotpositions = false		StructQBKey save = false	}$		:i $LightShow_WaitForNextEvent$${		StructArray events		{			ArrayQBKey			[				strobetoggle			]		}	}$		:i $LightShow_AppendSnapshotParams$${StructFloat intensity = 1.00}$	:i if $GotParam$${StructQBKey original_snapshot}$		:i $LightShow_PlaySnapshot$$name$ = %GLOBAL%$original_snapshot$$save$ = $false$$usesnapshotpositions$ = $false$	:i else 		:i $LightShow_CycleNextSnapshot$${			StructQBKey usesnapshotpositions = false			StructQBKey save = true		}$			:i endif	:i $LightShow_WaitForNextEvent$${		StructArray events		{			ArrayQBKey			[				strobetoggle			]		}	}$		:i loop_to 	:i endfunction]Script LightShow_Strobe_Exit 0x73004e95 [	:i $LightShow_AppendSnapshotParams$${StructQBKey Clear}$	:i $LightShow_SetTime$${StructQBKey enable = true}$	:i endfunction]Script LightShow_AddNodeFlags bbf1e8a4 [	:i $GetArraySize$${StructQBString LightShow_StateNodeFlags}$	:i %GLOBAL%$i$ = %i(0)	:i while 	:i $createnodeflag$(~$LightShow_StateNodeFlags$:a{%GLOBAL%$i$:a})	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i $createnodeflag$${StructQBKey LS_ALWAYS}$	:i $createnodeflag$${StructQBKey LS_3_5_PRE}$	:i $createnodeflag$${StructQBKey LS_3_5_POST}$	:i $createnodeflag$${StructQBKey LS_ENCORE_PRE}$	:i $createnodeflag$${StructQBKey ls_encore_post}$	:i $createnodeflag$${StructQBKey LS_SPOTLIGHT_GUITARIST}$	:i $createnodeflag$${StructQBKey LS_SPOTLIGHT_BASSIST}$	:i endfunction]Script lightshow_initeventmappings 0x780fe12c [	:i $printf$${StructQBStringQs a6e31d47}$	:i $KillSpawnedScript$${StructQBKey name = LightShow_DummyLoop_Spawned}$	:i $LightShow_AppendSnapshotParams$${StructQBKey Clear}$	:i $LightShow_OverrideColor$${		StructQBKey Off		StructInt Length = 0	}$		:i $LightShow_SetTime$${		StructQBKey default		StructQBKey enable = true	}$		:i $LightShow_SetActive$${StructQBKey active = false}$	:i $LightShow_SetProcessors$${StructQBKey Clear}$	:i $LightShow_SetMapping$${StructQBKey Clear}$	:i $ChangeNodeFlag$${		StructQBKey LS_SPOTLIGHT_GUITARIST		StructInt 1	}$		:i $GetNumPlayersInGame$	:i if (%GLOBAL%$num_players$ = %i(1))		:i $ChangeNodeFlag$${			StructQBKey LS_SPOTLIGHT_BASSIST			StructInt 0		}$			:i else 		:i $ChangeNodeFlag$${			StructQBKey LS_SPOTLIGHT_BASSIST			StructInt 1		}$			:i endif	:i if $GotParam$${StructQBKey force_pakname}$		:i %GLOBAL%$pakname$ = %GLOBAL%$force_pakname$	:i else 		:i if NOT $GetPakManCurrentName$${StructQBKey map = zones}$			:i $printf$${StructQBStringQs e20be0e2}$			:i $printstruct$ isNull 			:i return ${StructQBKey false}$		:i endif	:i endif	:i $FormatText$$checksumname$ = $event_struct$%s("%s_lightshow_mapping")$s$ = %GLOBAL%$pakname$$addtostringlookup$ = $true$	:i $FormatText$$checksumname$ = $snp_filename$%s("zones/%s/%s_snp.snp")$s$ = %GLOBAL%$pakname$$addtostringlookup$ = $true$	:i $FormatText$$checksumname$ = $snapshot_struct$%s("%s_snapshots")$s$ = %GLOBAL%$pakname$$addtostringlookup$ = $true$	:i $FormatText$$checksumname$ = $material_snapshot_struct$%s("%s_material_snapshots")$s$ = %GLOBAL%$pakname$$addtostringlookup$ = $true$	:i $FormatText$$checksumname$ = $processors_struct$%s("%s_lightshow_processors")$s$ = %GLOBAL%$pakname$$addtostringlookup$ = $true$	:i $FormatText$$checksumname$ = $snapshot_names$%s("%s_snapshot_names")$s$ = %GLOBAL%$pakname$$addtostringlookup$ = $true$	:i if NOT $globalexists$$name$ = %GLOBAL%$event_struct$$type$ = $structure$		:i $printf$${StructQBStringQs ce52f5c2}$		:i $printstruct$ isNull 		:i return ${StructQBKey false}$	:i endif	:i if NOT $LightShow_PreProcessSNP$$snpfilename$ = %GLOBAL%$snp_filename$$snapshotstruct$ = %GLOBAL%$snapshot_struct$$snapshotnames$ = %GLOBAL%$snapshot_names$		:i $printf$${StructQBStringQs dc2d0c88}$		:i $printstruct$ isNull 		:i return ${StructQBKey false}$	:i endif	:i if $globalexists$$name$ = %GLOBAL%$processors_struct$$type$ = $array$		:i $printf$${StructQBStringQs 0x23e129d8}$		:i $LightShow_SetProcessors$$venue$ = ~%GLOBAL%$processors_struct$	:i endif	:i $LightShow_SetMapping$(~%GLOBAL%$event_struct$)	:i $LightShow_SetActive$${StructQBKey active = true}$	:i $LightShow_SetParams$:s{		:i $performance$ = $medium$		:i $mood$ = $intro$		:i $venuematerialsnapshotsname$ = %GLOBAL%$material_snapshot_struct$		:i $Length$ = %i(0)	:i :s}	:i $LightShow_SpotlightColor$${		StructQBKey color = white		StructInt Length = 0	}$		:i $FormatText$$checksumname$ = $venue_setup_scr$%s("%s_SetupLightShow")$s$ = %GLOBAL%$pakname$$addtostringlookup$ = $true$	:i if $ScriptExists$%GLOBAL%$venue_setup_scr$		:i $spawnscriptnow$%GLOBAL%$venue_setup_scr$$id$ = $lightshow$	:i endif	:i %GLOBAL%$parse_notetrack$ = $true$	:i switch %GLOBAL%$pakname$		:i case %s("z_studio2")			:i %GLOBAL%$parse_notetrack$ = $false$	:i end_switch	:i if NOT (~$lightshow_debug_lighting_snapshot$ = $[00000000]$)		:i $printf$^[031aedce]^$s$ = (~$lightshow_debug_lighting_snapshot$)		:i $LightShow_PlaySnapshot$$name$ = (~$lightshow_debug_lighting_snapshot$)$save$ = $true$$usesnapshotpositions$ = $true$		:i %GLOBAL%$parse_notetrack$ = $false$	:i endif	:i return $true$$parse_notetrack$ = %GLOBAL%$parse_notetrack$	:i endfunction]Script lightshow_zone_init 0x6ac7f4c1 [	${Unknown [00012700b69dfdf16969696900000000]}$	:i if NOT (~$lightshow_debug_lighting_snapshot$ = $[00000000]$)		:i $printf$^[34991d38]^$s$ = (~$lightshow_debug_lighting_snapshot$)		:i $lightshow_initeventmappings$$force_pakname$ = %GLOBAL%$zone_string_name$	:i endif	:i endfunction]Script lightshow_cleardebugarrays 0x6d4b4752 [	:i $change$${		StructArray lightshow_available_snapshot_names		{			Floats [0.00000, 0.00000]		}	}$		:i $change$${		StructArray lightshow_snapshot_mood		{			Floats [0.00000, 0.00000]		}	}$		:i endfunction]Script LightShow_DummyLoop 0x0307aadc [	:i $KillSpawnedScript$${StructQBKey name = LightShow_DummyLoop_Spawned}$	:i $spawnscriptnow$${		StructQBKey LightShow_DummyLoop_Spawned		StructQBKey id = lightshow	}$		:i endfunction]Script LightShow_DummyLoop_Spawned 0x110d7943 [	:i while 	:i $LightShow_Update$	:i $wait$${		StructInt 1		StructQBKey gameframes	}$		:i loop_to 	:i endfunction]Script LightShow_NotInGamePlay_SetMood 0x9365cad8 [	:i $RequireParams$${		StructArray 0x00000000		{			ArrayQBKey			[				mood			]		}		StructQBKey all	}$		:i $LightShow_SetActive$${StructQBKey active = true}$	:i $LightShow_DummyLoop$	:i $LightShow_SetParams$$mood$ = %GLOBAL%$mood$	:i endfunction]Script LightShow_Shutdown 0x7fd1f9e3 [	:i $KillSpawnedScript$${StructQBKey name = lightshow_iterator}$	:i $KillSpawnedScript$${StructQBKey id = lightshow}$	:i endfunction]Script LightShow_SongFailed 0x20f4d657 [	:i $KillSpawnedScript$${StructQBKey name = lightshow_iterator}$	:i $KillSpawnedScript$${StructQBKey id = lightshow}$	:i $LightShow_EnableSpotlights$${		StructQBKey enabled = false		StructArray spots		{			ArrayQBKey			[				vocalist				guitarist				bassist				drummer			]		}	}$		:i endfunction]SectionInteger LightShow_DebugCycle_Index -1Script lightshow_is_spotlight_snapshot e7e08dba [	:i if NOT $GetPakManCurrentName$${StructQBKey map = zones}$		:i return ${StructQBKey false}$	:i endif	:i $FormatText$$checksumname$ = $mapping$%s("%s_lightshow_mapping")$s$ = %GLOBAL%$pakname$	:i if NOT $globalexists$$name$ = %GLOBAL%$mapping$		:i return ${StructQBKey false}$	:i endif	:i if NOT $StructureContains$$structure$ = ~%GLOBAL%$mapping$$spotlight_snapshots$		:i return ${StructQBKey false}$	:i endif	:i %GLOBAL%$snps$ = (~%GLOBAL%$mapping$->$spotlight_snapshots$)	:i %GLOBAL%$checks$ = :a{$red$$orange$$yellow$$green$$blue$$purple$$magenta$$white$$Off$:a}	:i $GetArraySize$%GLOBAL%$checks$	:i %GLOBAL%$i$ = %i(0)	:i while 	:i %GLOBAL%$check$ = (%GLOBAL%$checks$:a{%GLOBAL%$i$:a})	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i if $StructureContains$$structure$ = %GLOBAL%$snps$%GLOBAL%$check$		:i %GLOBAL%$snp$ = (%GLOBAL%$snps$->%GLOBAL%$check$)		:i if (%GLOBAL%$name$ = %GLOBAL%$snp$)			:i return ${StructQBKey true}$		:i endif	:i endif	:i loop_to %GLOBAL%$array_size$	:i return ${StructQBKey false}$	:i endfunction]Script LightShow_DebugCycle_Init 0x9fd34c58 [	:i if NOT $LightShow_GetParams$		:i if NOT $lightshow_initeventmappings$			:i return ${StructQBKey false}$		:i endif	:i endif	:i return ${StructQBKey true}$	:i endfunction]Script LightShow_DebugCycle 0x9da5d37a [	${		StructInt dir = 1		StructInt restore = 1	}$		:i $printf$${StructQBStringQs 0x8f4f89bb}$	:i if NOT $LightShow_DebugCycle_Init$		:i return 	:i endif	:i if NOT $GetPakManCurrentName$${StructQBKey map = zones}$		:i return 	:i endif	:i $GetArraySize$${StructQBString lightshow_available_snapshot_names}$	:i if (%GLOBAL%$array_size$ = %i(0))		:i return 	:i endif	:i $LightShow_SetTime$${StructFloat time = 0.00}$	:i %GLOBAL%$i$ = %i(0)	:i while 	:i $change$$LightShow_DebugCycle_Index$ = (~$LightShow_DebugCycle_Index$ + %GLOBAL%$dir$)	:i if (~$LightShow_DebugCycle_Index$ >= %GLOBAL%$array_size$)		:i $change$${StructInt LightShow_DebugCycle_Index = 0}$		:i if (~$lightshow_mood_override_debug$ = $true$)			:i if (%GLOBAL%$restore$ = %i(1))				:i $spawnscriptnow$${					StructQBKey Lightshow_Debug_Dislay_Name					StructStruct params					{						StructHeader						{							StructQBStringQs debug_text = 0x9797f3fc						}					}				}$								:i $lightshow_remove_mood_override_reason$${StructQBKey reason = debug}$				:i return 			:i endif		:i endif	:i endif	:i if (~$LightShow_DebugCycle_Index$ < %i(0))		:i $change$$LightShow_DebugCycle_Index$ = (%GLOBAL%$array_size$%i(4294967295))		:i if (~$lightshow_mood_override_debug$ = $true$)			:i if (%GLOBAL%$restore$ = %i(1))				:i $spawnscriptnow$${					StructQBKey Lightshow_Debug_Dislay_Name					StructStruct params					{						StructHeader						{							StructQBStringQs debug_text = 0x9797f3fc						}					}				}$								:i $lightshow_remove_mood_override_reason$${StructQBKey reason = debug}$				:i return 			:i endif		:i endif	:i endif	:i %GLOBAL%$snapshot_name$ = (~$lightshow_available_snapshot_names$:a{~$LightShow_DebugCycle_Index$:a})	:i $FormatText$$checksumname$ = $snapshot_crc$%GLOBAL%$snapshot_name$	:i $FormatText$$textname$ = $debug_text$^[3beef43d]^$s$ = %GLOBAL%$snapshot_name$	:i $mood$ = (~$lightshow_snapshot_mood$:a{~$LightShow_DebugCycle_Index$:a})	:i if $lightshow_is_spotlight_snapshot$$name$ = %GLOBAL%$snapshot_crc$	:i else 		:i continue	:i endif	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i if (%GLOBAL%$i$ > %GLOBAL%$array_size$)		:i return 	:i endif	:i loop_to 	:i $LightShow_EnableSpotlights$${		StructQBKey enabled = false		StructArray spots		{			ArrayQBKey			[				vocalist				guitarist				bassist				drummer			]		}	}$		:i $lightshow_add_mood_override_reason$${StructQBKey reason = debug}$	:i $lightshow_bypass_mood_overrides$${StructQBKey bypass = true}$	:i if (%GLOBAL%$mood$ !== $unknown$)		:i $LightShow_SetParams$$mood$ = %GLOBAL%$mood$	:i else 		:i $LightShow_SetParams$${StructQBKey mood = intro}$	:i endif	:i $LightShow_PlaySnapshot$$name$ = %GLOBAL%$snapshot_crc$$save$ = $true$$usesnapshotpositions$ = $true$	:i $spawnscriptnow$$Lightshow_Debug_Dislay_Name$$params$ = :s{$debug_text$ = %GLOBAL%$debug_text$:s}	:i $lightshow_bypass_mood_overrides$${StructQBKey bypass = false}$	:i endfunction]Script Lightshow_Debug_Dislay_Name 0x79d4c0a4 [	:i $SetSpawnInstanceLimits$${		StructInt max = 1		StructQBKey management = kill_oldest	}$		:i if $RetailBuild$		:i return 	:i endif	:i $DestroyScreenElement$${StructQBKey id = LightShow_DebugCycleAnchor}$	:i $CreateScreenElement$:s{		:i $type$ = $TextElement$		:i $parent$ = $root_window$		:i $id$ = $LightShow_DebugCycleAnchor$		:i $just$ = :a{$left$$top$:a}		:i $Pos$ = %vec2(75.0,550.0)		:i $font$ = $fontgrid_text_a1$		:i $z_priority$ = %i(50)		:i $text$ = %GLOBAL%$debug_text$		:i $use_shadow$ = $true$		:i $shadow_offs$ = %vec2(3.0,3.0)		:i $shadow_rgba$ = :a{%i(0)%i(0)%i(0)%i(255):a}	:i :s}	:i $wait$${		StructInt 2		StructQBKey seconds	}$		:i $DestroyScreenElement$${StructQBKey id = LightShow_DebugCycleAnchor}$	:i endfunction]Script Venue_PulseOnEvents 0x3bf3fbfb [	${		StructFloat amount = 1.1200000047683716		StructFloat time = 0.10000000149011612	}$		:i if $GotParam$${StructQBKey delay}$		:i $RequireParams$${			StructArray 0x00000000			{				ArrayQBKey				[					events				]			}			StructQBKey all		}$				:i $obj_enablescaling$		:i $obj_getscaling$		:i %GLOBAL%$start_scale$ = %GLOBAL%$scaling$		:i %GLOBAL%$end_scale$ = (%GLOBAL%$scaling$ * %GLOBAL%$amount$)		:i while 		:i $Block$$anytypes$ = %GLOBAL%$events$		:i $wait$%GLOBAL%$delay$$seconds$		:i $obj_applyscaling$$Scale$ = %GLOBAL%$end_scale$		:i $wait$${			StructInt 1			StructQBKey gameframes		}$				:i $obj_morphscaling$$target_scale$ = %GLOBAL%$start_scale$$blend_duration$ = %GLOBAL%$time$		:i loop_to 	:i else 		:i $AddPulseEvent$$events$ = %GLOBAL%$events$$amount$ = %GLOBAL%$amount$$time$ = %GLOBAL%$time$	:i endif	:i endfunction]Script Venue_PulseGreen 0x915cce29 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_green			]		}	}$		:i endfunction]Script Venue_PulseRed 0x6ac794e0 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_red			]		}	}$		:i endfunction]Script Venue_PulseYellow 0x208d21a1 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_yellow			]		}	}$		:i endfunction]Script Venue_PulseBlue d29f7ec7 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_blue			]		}	}$		:i endfunction]Script Venue_PulseOrange 0x6d27b865 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_orange			]		}	}$		:i endfunction]Script Venue_PulseOpen a179cc0e [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i endfunction]Script Venue_PulseDrumLeft cfe2d37f [	:i $SetSpawnInstanceLimits$${		StructInt max = 2		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				DrumKick_Left			]		}		StructFloat amount = 1.100000023841858		StructQBString delay = drum_kick_anim_delay	}$		:i endfunction]Script Venue_PulseDrumRight 0x62f57ffa [	:i $SetSpawnInstanceLimits$${		StructInt max = 2		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				DrumKick_Right			]		}		StructFloat amount = 1.100000023841858		StructQBString delay = drum_kick_anim_delay	}$		:i endfunction]Script Venue_PulseDrumBoth 0x6bbb6967 [	:i $SetSpawnInstanceLimits$${		StructInt max = 4		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				DrumKick_Left				DrumKick_Right			]		}		StructFloat amount = 1.100000023841858		StructQBString delay = drum_kick_anim_delay	}$		:i endfunction]Script Venue_PulseAny 0x6760c729 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_green				hitnote_red				hitnote_yellow				hitnote_blue				hitnote_orange			]		}	}$		:i endfunction]Script Venue_PulseGreenRed fd002a47 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_green				hitnote_red			]		}	}$		:i endfunction]Script Venue_PulseGreenYellow b74a9f06 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_green				hitnote_yellow			]		}	}$		:i endfunction]Script Venue_PulseGreenBlue 0x4558c060 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_green				hitnote_blue			]		}	}$		:i endfunction]Script Venue_PulseGreenOrange fae006c2 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_green				hitnote_orange			]		}	}$		:i endfunction]Script Venue_PulseGreenOpen 0x915cce29 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_green			]		}	}$		:i endfunction]Script Venue_PulseRedYellow f1f1950d [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_red				hitnote_yellow			]		}	}$		:i endfunction]Script Venue_PulseRedBlue 0x03e3ca6b [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_red				hitnote_blue			]		}	}$		:i endfunction]Script Venue_PulseRedOrange bc5b0cc9 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_red				hitnote_orange			]		}	}$		:i endfunction]Script Venue_PulseRedOpen 0x6ac794e0 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_red			]		}	}$		:i endfunction]Script Venue_PulseYellowBlue 0x3b47aaa3 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_yellow				hitnote_blue			]		}	}$		:i endfunction]Script Venue_PulseYellowOrange 0x84ff6c01 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_yellow				hitnote_orange			]		}	}$		:i endfunction]Script Venue_PulseYellowOpen 0x208d21a1 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_yellow			]		}	}$		:i endfunction]Script Venue_PulseBlueOrange 0x38cb0539 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_blue				hitnote_orange			]		}	}$		:i endfunction]Script Venue_PulseBlueOpen d29f7ec7 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_blue			]		}	}$		:i endfunction]Script Venue_PulseOrangeOpen 0x6d27b865 [	:i $SetSpawnInstanceLimits$${		StructInt max = 8		StructQBKey management = ignore_spawn_request	}$		:i $Venue_PulseOnEvents$${		StructArray events		{			ArrayQBKey			[				hitnote_orange			]		}	}$		:i endfunction]Script Visualizer_GenericMood_Enter 0x99678612 [	:i $LightShow_CycleNextSnapshot$${		StructQBKey usesnapshotpositions = true		StructQBKey save = true	}$		:i endfunction]Script Visualizer_GenericMood_Event 0x53dc7f93 [	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i switch %GLOBAL%$pak$		:i case $z_Visualizer$			:i $viewport$ = $bg_viewport$			:i endcase		default 			:i $viewport$ = $visualizer_viewport$	:i end_switch	:i $LightShow_GetParams$	:i $GetArraySize$%GLOBAL%$av_presets$	:i $i$ =  thaw_50 %vec2(-1.0,1.0)	:i while 	:i $i$ = (%GLOBAL%$i$ + %i(1))	:i if (%GLOBAL%$i$ >= %GLOBAL%$array_size$)		:i $i$ = %i(0)	:i endif	:i if $IsArray$(%GLOBAL%$av_presets$:a{%GLOBAL%$i$:a})		:i $create_avfx$$primitives$ = (%GLOBAL%$av_presets$:a{%GLOBAL%$i$:a})$viewport$ = %GLOBAL%$viewport$	:i else 		:i $create_avfx$$profile$ = (%GLOBAL%$av_presets$:a{%GLOBAL%$i$:a})$viewport$ = %GLOBAL%$viewport$	:i endif	:i $LightShow_CycleNextSnapshot$${		StructQBKey usesnapshotpositions = true		StructQBKey save = true	}$		:i $LightShow_WaitForNextEvent$${		StructArray events		{			ArrayQBKey			[				snapshotchange			]		}	}$		:i loop_to 	:i endfunction]Script Visualizer_GenericMood_Exit ffffffff [	:i endfunction]SectionInteger menu_last_mood_index -1Script menu_lightshow 0x9bbc81d7 [	:i if NOT (~$lightshow_debug_lighting_snapshot$ = $[00000000]$)		:i return 	:i endif	:i $LightShow_SetActive$${StructQBKey active = true}$	:i $LightShow_DummyLoop$	:i $GetArraySize$${StructQBString lightshow_menu_moods}$	:i while 	:i $getrandomvalue$$name$ = $mood_index$$a$ = %i(0)$b$ = (%GLOBAL%$array_size$%i(4294967294))$integer$	:i if (%GLOBAL%$mood_index$ = ~$menu_last_mood_index$)		:i $mood_index$ = (%GLOBAL%$mood_index$ + %i(1))	:i endif	:i $mood$ = (~$lightshow_menu_moods$:a{%GLOBAL%$mood_index$:a})	:i $getrandomvalue$${		StructQBKey name = wait_time		StructQBString a = lightshow_menu_min_time		StructQBString b = lightshow_menu_max_time	}$		:i $LightShow_SetTime$${StructQBString time = lightshow_menu_transition_time}$	:i $LightShow_SetParams$$mood$ = %GLOBAL%$mood$$performance$ = $medium$	:i $wait$%GLOBAL%$wait_time$$seconds$	:i $change$$menu_last_mood_index$ = %GLOBAL%$mood_index$	:i loop_to 	:i endfunction]Script lightshow_add_mood_override_reason 0x5df5e973 [	${Unknown [00012600c44777f36969696900000000]}$	:i if NOT (~$lightshow_debug_lighting_snapshot$ = $[00000000]$)		:i return 	:i endif	:i switch (%GLOBAL%$reason$)		:i case $debug$			:i $change$${StructQBKey lightshow_mood_override_debug = true}$			:i endcase		case $starpower$			:i $change$${StructQBKey lightshow_mood_override_starpower = true}$			:i endcase		case $blackout$			:i $change$${StructQBKey lightshow_mood_override_blackout = true}$			:i endcase		default 			:i $scriptassert$^[234bb110]^$s$ = %GLOBAL%$reason$	:i end_switch	:i if (~$lightshow_allow_mood_changes$ = $true$)		:i if $LightShow_GetParams$			:i $change$$lightshow_last_mood_requested$ = %GLOBAL%$mood$		:i else 			:i $change$${StructQBKey lightshow_last_mood_requested = 0x00000000}$		:i endif	:i endif	:i $change$${StructQBKey lightshow_allow_mood_changes = true}$	:i if (~$lightshow_mood_override_debug$ = $true$)	:i elseif (~$lightshow_mood_override_blackout$ = $true$)		:i $LightShow_SetParams$${StructQBKey mood = blackout}$	:i elseif (~$lightshow_mood_override_starpower$ = $true$)		:i $LightShow_SetParams$${StructQBKey mood = starpower}$	:i endif	:i $change$${StructQBKey lightshow_allow_mood_changes = false}$	:i endfunction]Script lightshow_remove_mood_override_reason 0x727103f3 [	${Unknown [00012600c44777f36969696900000000]}$	:i if NOT (~$lightshow_debug_lighting_snapshot$ = $[00000000]$)		:i return 	:i endif	:i switch (%GLOBAL%$reason$)		:i case $debug$			:i $change$${StructQBKey lightshow_mood_override_debug = false}$			:i endcase		case $starpower$			:i $change$${StructQBKey lightshow_mood_override_starpower = false}$			:i endcase		case $blackout$			:i $change$${StructQBKey lightshow_mood_override_blackout = false}$			:i endcase		default 			:i $scriptassert$^[234bb110]^$s$ = %GLOBAL%$reason$	:i end_switch	:i $change$${StructQBKey lightshow_allow_mood_changes = true}$	:i if (~$lightshow_mood_override_debug$ = $true$)		:i $change$${StructQBKey lightshow_allow_mood_changes = false}$		:i return 	:i endif	:i if (~$lightshow_mood_override_blackout$ = $true$)		:i $LightShow_SetParams$${StructQBKey mood = blackout}$		:i $change$${StructQBKey lightshow_allow_mood_changes = false}$		:i return 	:i endif	:i if (~$lightshow_mood_override_starpower$ = $true$)		:i $LightShow_SetParams$${StructQBKey mood = starpower}$		:i $change$${StructQBKey lightshow_allow_mood_changes = false}$		:i return 	:i endif	:i if (~$lightshow_last_mood_requested$ !== $[00000000]$)		:i $LightShow_SetParams$$mood$ = (~$lightshow_last_mood_requested$)		:i $change$${StructQBKey lightshow_last_mood_requested = 0x00000000}$	:i endif	:i endfunction]Script lightshow_clear_mood_override_reasons 0x810bc4c2 [	:i $change$${StructQBKey lightshow_allow_mood_changes = true}$	:i $change$${StructQBKey lightshow_last_mood_requested = 0x00000000}$	:i $change$${StructQBKey lightshow_mood_override_blackout = false}$	:i $change$${StructQBKey lightshow_mood_override_starpower = false}$	:i endfunction]Script lightshow_bypass_mood_overrides f62ea07e [	${Unknown [0001260010f7798b6969696900000000]}$	:i $change$$lightshow_allow_mood_changes$ = %GLOBAL%$bypass$	:i endfunction]Script lightshow_cinematic_blackout_start 0x03b12bd1 [	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i $extendcrc$%GLOBAL%$pak$%s("_GFX_LH_RotLight_01")$out$ = $object_id$	:i if NOT $IsCreated$%GLOBAL%$object_id$		:i return 	:i endif	:i $lightshow_add_mood_override_reason$${StructQBKey reason = blackout}$	:i endfunction]Script lightshow_cinematic_blackout_end ad7a00e5 [	:i $GetPakManCurrent$${StructQBKey map = zones}$	:i $extendcrc$%GLOBAL%$pak$%s("_GFX_LH_RotLight_01")$out$ = $object_id$	:i if NOT $IsCreated$%GLOBAL%$object_id$		:i return 	:i endif	:i $lightshow_remove_mood_override_reason$${StructQBKey reason = blackout}$	:i endfunction]Script CustomizedScript ceeccff8 [	:i $printf$${StructString 0x00000000 = "Customized LightShow animation."}$	:i endfunction]