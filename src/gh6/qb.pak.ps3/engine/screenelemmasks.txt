Unknown [1c000000000000000000027c0000000000000000]Script CreateMaskedScreenElements eb39e0e9 [	:i if NOT $GotParam$${StructQBKey mask_element}$		:i $script_assert$${StructQBStringQs 0x178b9b17}$	:i endif	:i if NOT $GotParam$${StructQBKey z_priority}$		:i %GLOBAL%$z_priority$ = %i(0)	:i endif	:i if NOT $GotParam$${StructQBKey elements}$		:i %GLOBAL%$elements$ = :a{:a}	:i endif	:i $GetScreenElementMaskParams$	:i if NOT $GotParam$${StructQBKey debug}$		:i $CreateScreenElement$:s{			:i %GLOBAL%$mask_element$			:i $type$ = $SpriteElement$			:i $rgba$ = %GLOBAL%$mask_rgba$			:i $alpha$ = %GLOBAL%$mask_alpha$			:i $Blend$ = $Add$			:i $z_priority$ = (%GLOBAL%$z_priority$ + %i(1))			:i $base_pass$		:i :s}	:i else 		:i $CreateScreenElement$:s{			:i %GLOBAL%$mask_element$			:i $z_priority$ = (%GLOBAL%$z_priority$ + %i(1))		:i :s}	:i endif	:i if $GotParam$${StructQBKey elements}$		:i $GetArraySize$${StructQBKey elements}$		:i %GLOBAL%$i$ = %i(0)		:i if (%GLOBAL%$array_size$ > %i(0))			:i while 			:i %GLOBAL%$element$ = (%GLOBAL%$elements$:a{%GLOBAL%$i$:a})			:i $CreateMaskedScreenElement$:s{				:i %GLOBAL%$element$				:i $z_priority$ = (%GLOBAL%$z_priority$ + %i(2))			:i :s}			:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))			:i loop_to %GLOBAL%$array_size$		:i endif	:i endif	:i endfunction]Script CreateMaskedScreenElement 0x5ba376cb [	:i if NOT $GotParam$${StructQBKey Blend}$		:i $GetScreenElementMaskParams$		:i %GLOBAL%$Blend$ = %GLOBAL%$multi_blend$	:i endif	:i $CreateScreenElement$:s{		:i isNull 		:i $no_zwrite$		:i $Blend$ = %GLOBAL%$Blend$		:i $second_pass$	:i :s}	:i endfunction]Script GetScreenElementMaskParams 0x233b0004 [	:i $GetPlatform$	:i switch %GLOBAL%$platform$		:i case $xenon$			:i endcase		case $ps3$			:i %GLOBAL%$mask_rgba$ = :a{%i(128)%i(128)%i(128)%i(0):a}			:i %GLOBAL%$mask_alpha$ = %f(0.0)			:i %GLOBAL%$multi_blend$ = $Blend$			:i endcase		default 			:i %GLOBAL%$mask_rgba$ = :a{%i(128)%i(128)%i(128)%i(128):a}			:i %GLOBAL%$mask_alpha$ = %f(1.0)			:i %GLOBAL%$multi_blend$ = $BlendPrev$	:i end_switch	:i return :s{$mask_rgba$ = %GLOBAL%$mask_rgba$		:i $mask_alpha$ = %GLOBAL%$mask_alpha$		:i $multi_blend$ = %GLOBAL%$multi_blend$	:i :s}	:i endfunction]