Unknown [1c00000000000000000031d00000000000000000]SectionInteger autotest_max_suites 1000SectionQBKey autotest_transition introSectionInteger autotest_next_test_screen_time 5SectionInteger autotest_next_suite_screen_time 5SectionInteger autotest_suite_list_index 0SectionInteger autotest_suite_index 0SectionQBKey autotest_suite_name NoneSectionInteger autotest_test_index 0SectionInteger autotest_initial_time 0SectionInteger autotest_total_time 0SectionInteger autotest_ingame 0SectionInteger autotest_starttime 0SectionInteger autotest_endtime 999999999SectionInteger autotest_has_starttime 0SectionInteger autotest_has_endtime 0SectionArray autotest_suite_list{	ArrayInteger	[		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295		4294967295	]}SectionInteger autotest_num_suites 0SectionInteger autotest_total_frames 0SectionInteger autotest_average_fps 0SectionInteger autotest_highest_fps 0SectionInteger autotest_highest_fps_time 0SectionInteger autotest_highest_fps_test -1SectionInteger autotest_lowest_fps 120SectionInteger autotest_lowest_fps_time 0SectionInteger autotest_lowest_fps_test -1SectionInteger autotest_log_gpu 0SectionInteger autotest_gpu_total_frames 0SectionInteger autotest_gpu_under_15ms 0SectionInteger autotest_gpu_15ms_to_16ms 0SectionInteger autotest_gpu_16ms_to_18ms 0SectionInteger autotest_gpu_18ms_to_20ms 0SectionInteger autotest_gpu_over_20ms 0SectionInteger autotest_gpu_spike 0SectionInteger autotest_gpu_spike_time 0SectionInteger autotest_num_worst_cams 5SectionArray autotest_worst_cam_strings{	ArrayQBKeyStringQs	[		0x1feb8bd8		0x1feb8bd8		0x1feb8bd8		0x1feb8bd8		0x1feb8bd8	]}SectionArray autotest_worst_cam_ms{	ArrayFloat	[		0.00000		0.00000		0.00000		0.00000		0.00000	]}SectionArray autotest_worst_cam_times{	ArrayFloat	[		0.00000		0.00000		0.00000		0.00000		0.00000	]}SectionInteger autotest_least_worst_cam_index 0SectionQBKey autotest_first_test trueSectionQBKey autotest_autolaunched falseSectionInteger autotest_fully_complete 0SectionQBKey autotest_targeted_challenge NoneSectionQBKey autotest_targetd_challenge_part NoneScript autotest_start 0x6d4652ab [	${StructInt autolaunch = 0}$	:i if (~$autotest_turbo_mode$ = %i(1))		:i $change$${StructInt autotest_next_test_screen_time = 1}$		:i $change$${StructQBKey autotest_transition = None}$	:i endif	:i if ((~$autotest_num_suites$) = %i(0) AND %GLOBAL%$autolaunch$ = %i(0))		:i return 	:i endif	:i if (%GLOBAL%$autolaunch$ = %i(1))		:i $change$${StructQBKey autotest_autolaunched = true}$	:i else 		:i $change$${StructQBKey autotest_autolaunched = false}$	:i endif	:i $destroy_autotest_menu$${StructInt still_testing = 1}$	:i if (~$autotest_suite_name$ = $None$)		:i $GetArraySize$(~$autotest_suite_list$)		:i %GLOBAL%$suite_list_size$ = %GLOBAL%$array_size$	:i else 		:i %GLOBAL%$suite_list_size$ = %i(1)	:i endif	:i $autotest_get_test$${		StructQBString suite_num = autotest_suite_index		StructQBString test_num = autotest_test_index	}$		:i $autotest_set_test_params$$test_struct$ = %GLOBAL%$test_struct$	:i if (~$autotest_first_test$ = $true$ AND ~$autotest_autolaunched$ = $true$)		:i $autolaunch$$song$ = (%GLOBAL%$test_struct$->$song$)$level$ = (%GLOBAL%$test_struct$->$level$)$part$ = (%GLOBAL%$test_struct$->$p1_part$)$part2$ = (%GLOBAL%$test_struct$->$p2_part$)$part3$ = (%GLOBAL%$test_struct$->$p3_part$)$part4$ = (%GLOBAL%$test_struct$->$p4_part$)$difficulty$ = (%GLOBAL%$test_struct$->$p1_difficulty$)$difficulty2$ = (%GLOBAL%$test_struct$->$p2_difficulty$)$difficulty3$ = (%GLOBAL%$test_struct$->$p3_difficulty$)$difficulty4$ = (%GLOBAL%$test_struct$->$p4_difficulty$)$game_mode$ = (%GLOBAL%$test_struct$->$game_mode$)	:i else 		:i $autotest_show_next_test_screen$$Length$ = (~$autotest_next_test_screen_time$)$test_struct$ = %GLOBAL%$test_struct$	:i endif	:i $GetTrueStartTime$	:i $change$$autotest_initial_time$ = %GLOBAL%$starttime$	:i if (~$autotest_first_test$ = $false$ OR ~$autotest_autolaunched$ = $false$)		:i $UI_SFX$${			StructQBKey menustate = generic			StructQBKey uitype = select		}$				:i $generic_event_choose$${			StructStruct Data			{				StructHeader				{					StructQBKey state = uistate_play_song					StructQBString starttime = autotest_starttime				}			}		}$			:i endif	:i $spawnscriptnow$${StructQBKey autotest_update_fps_info}$	:i if (~$autotest_log_gpu$ = %i(1))		:i $spawnscriptnow$${StructQBKey autotest_update_gpu_info}$	:i endif	:i if (~$autotest_has_endtime$)		:i $spawnscriptnow$${StructQBKey autotest_check_end_time}$	:i endif	:i if (~$autotest_hud_on$ = %i(1))		:i $spawnscriptnow$${StructQBKey autotest_create_hud}$	:i endif	:i $change$${StructInt autotest_ingame = 1}$	:i $change$${StructQBKey autotest_first_test = false}$	:i if (~$g_autotest_quickplay_challenges$ = $true$)		:i $spawnscriptnow$${StructQBKey quickplay_autotest_start}$	:i endif	:i endfunction]Script autotest_set_test_params a348d9a3 [	:i $Playlist_Clear$	:i $Playlist_SetCurrentSong$$song$ = (%GLOBAL%$test_struct$->$song$)	:i $change$$current_level$ = (%GLOBAL%$test_struct$->$level$)	:i %GLOBAL%$diff_array$ = :a{:a}	:i %GLOBAL%$num_players$ = %i(0)	:i if NOT (%GLOBAL%$test_struct$->$p1_part$ = $None$)		:i $SetPlayerInfo$(%GLOBAL%$num_players$ + %i(1))$part$ = (%GLOBAL%$test_struct$->$p1_part$)		:i $SetPlayerInfo$(%GLOBAL%$num_players$ + %i(1))$in_game$ = %i(1)		:i %GLOBAL%$num_players$ = (%GLOBAL%$num_players$ + %i(1))		:i %GLOBAL%$diff_array$ = (%GLOBAL%$diff_array$ + (%GLOBAL%$test_struct$->$p1_difficulty$))	:i endif	:i if NOT (%GLOBAL%$test_struct$->$p2_part$ = $None$)		:i $SetPlayerInfo$(%GLOBAL%$num_players$ + %i(1))$part$ = (%GLOBAL%$test_struct$->$p2_part$)		:i $SetPlayerInfo$(%GLOBAL%$num_players$ + %i(1))$in_game$ = %i(1)		:i %GLOBAL%$num_players$ = (%GLOBAL%$num_players$ + %i(1))		:i %GLOBAL%$diff_array$ = (%GLOBAL%$diff_array$ + (%GLOBAL%$test_struct$->$p2_difficulty$))	:i endif	:i if NOT (%GLOBAL%$test_struct$->$p3_part$ = $None$)		:i $SetPlayerInfo$(%GLOBAL%$num_players$ + %i(1))$part$ = (%GLOBAL%$test_struct$->$p3_part$)		:i $SetPlayerInfo$(%GLOBAL%$num_players$ + %i(1))$in_game$ = %i(1)		:i %GLOBAL%$num_players$ = (%GLOBAL%$num_players$ + %i(1))		:i %GLOBAL%$diff_array$ = (%GLOBAL%$diff_array$ + (%GLOBAL%$test_struct$->$p3_difficulty$))	:i endif	:i if NOT (%GLOBAL%$test_struct$->$p4_part$ = $None$)		:i $SetPlayerInfo$(%GLOBAL%$num_players$ + %i(1))$part$ = (%GLOBAL%$test_struct$->$p4_part$)		:i $SetPlayerInfo$(%GLOBAL%$num_players$ + %i(1))$in_game$ = %i(1)		:i %GLOBAL%$num_players$ = (%GLOBAL%$num_players$ + %i(1))		:i %GLOBAL%$diff_array$ = (%GLOBAL%$diff_array$ + (%GLOBAL%$test_struct$->$p4_difficulty$))	:i endif	:i $SetPlayerInfo$%i(1)$difficulty$ = (%GLOBAL%$diff_array$:a{%i(0):a})	:i if (%GLOBAL%$num_players$ > %i(1))		:i $SetPlayerInfo$%i(2)$difficulty$ = (%GLOBAL%$diff_array$:a{%i(1):a})	:i endif	:i if (%GLOBAL%$num_players$ > %i(2))		:i $SetPlayerInfo$%i(3)$difficulty$ = (%GLOBAL%$diff_array$:a{%i(2):a})	:i endif	:i if (%GLOBAL%$num_players$ > %i(3))		:i $SetPlayerInfo$%i(4)$difficulty$ = (%GLOBAL%$diff_array$:a{%i(3):a})	:i endif	:i %GLOBAL%$player$ = %i(1)	:i while 	:i $SetPlayerInfo$%GLOBAL%$player$$star_power_debug_mode$ = (%GLOBAL%$test_struct$->$star_power_always_on$)	:i %GLOBAL%$player$ = (%GLOBAL%$player$ + %i(1))	:i loop_to %i(4)	:i $change$$game_mode$ = (%GLOBAL%$test_struct$->$game_mode$)	:i $change$$use_worst_band$ = (%GLOBAL%$test_struct$->$worst_case_band$)	:i $change$${StructInt current_starttime = 0}$	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$start_time$		:i $change$$current_starttime$ = (%GLOBAL%$test_struct$->$start_time$)		:i $change$${StructInt autotest_has_starttime = 1}$	:i else 		:i $change$${StructInt autotest_starttime = 0}$		:i $change$${StructInt autotest_has_starttime = 0}$	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$end_time$		:i $change$$autotest_endtime$ = (%GLOBAL%$test_struct$->$end_time$)		:i $change$${StructInt autotest_has_endtime = 1}$	:i else 		:i $change$${StructInt autotest_endtime = 999999999}$		:i $change$${StructInt autotest_has_endtime = 0}$	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$speed_factor$		:i $change$$current_speedfactor$ = (%GLOBAL%$test_struct$->$speed_factor$)		:i $setslomo$${StructQBString current_speedfactor}$	:i else 		:i $end_practice_song_slomo$	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$force_score$		:i $change$$debug_forcescore$ = (%GLOBAL%$test_struct$->$force_score$)		:i $SpawnScriptLater$${StructQBKey autotest_force_crowd}$	:i else 		:i $change$${StructQBKey debug_forcescore = Off}$	:i endif	:i $bot_hit_percents$ = :a{%f(1.0)%f(1.0)%f(1.0)%f(1.0):a}	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$bot_hit_percents$		:i $bot_hit_percents$ = (%GLOBAL%$test_struct$->$bot_hit_percents$)		:i $player_index$ = %i(1)		:i while 		:i $SetPlayerInfo$%GLOBAL%$player_index$$bot_hit_percent$ = (%GLOBAL%$bot_hit_percents$:a{%GLOBAL%$player_index$%i(4294967295):a})		:i $player_index$ = (%GLOBAL%$player_index$ + %i(1))		:i loop_to %GLOBAL%$num_players$	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$autolaunch_quickplay_challenges$		:i $change$${StructQBKey game_mode = quickplay}$		:i $change$${StructQBKey g_autotest_quickplay_challenges = true}$		:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$target_challenge$			:i $change$$autotest_targeted_challenge$ = (%GLOBAL%$test_struct$->$target_challenge$)			:i $change$$autotest_targetd_challenge_part$ = (%GLOBAL%$test_struct$->$target_challenge_part$)		:i endif		:i $use_bot_coordinated_starpower$ = %i(0)		:i $num_bots_required_for_starpower$ = %i(0)		:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$use_bot_coordinated_starpower$			:i $use_bot_coordinated_starpower$ = (%GLOBAL%$test_struct$->$use_bot_coordinated_starpower$)		:i endif		:i $Playlist_GetCurrentSong$		:i $GMan_GetSongChallengeProps$$song_name$ = %GLOBAL%$current_song$$Instrument$ = $None$		:i $player_index$ = %i(1)		:i $final_array$ = :a{:a}		:i while 		:i $autotest_quickplay_build_bot_settings$:s{$player$ = %GLOBAL%$player_index$$challenge_props$ = %GLOBAL%$challenge_props$$force_accuracy$ = (%GLOBAL%$bot_hit_percents$:a{%GLOBAL%$player_index$%i(4294967295):a}):s}		:i $AddArrayElement$$array$ = %GLOBAL%$final_array$$element$ = %GLOBAL%$player_bot_rules$		:i $final_array$ = %GLOBAL%$array$		:i $player_index$ = (%GLOBAL%$player_index$ + %i(1))		:i loop_to %GLOBAL%$num_players$		:i if (%GLOBAL%$use_bot_coordinated_starpower$ = %i(1))			:i $SetBandInfo$${				StructInt 1				StructInt use_bot_coordinated_starpower = 1			}$					:i endif		:i $AddParam$$structure_name$ = $test_struct$$name$ = $bot_rules$$value$ = %GLOBAL%$final_array$	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$autolaunch_career_powers$		:i $change$${StructQBKey game_mode = quickplay}$		:i $change$$g_autotest_career_powers$ = (%GLOBAL%$test_struct$->$autolaunch_career_powers$)		:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$career_target_stars$			:i $change$$g_autotest_career_target_stars$ = (%GLOBAL%$test_struct$->$career_target_stars$)		:i endif		:i $getplayerinfo$%GLOBAL%$player$$band$		:i $SetBandInfo$${			StructInt 1			StructInt use_bot_coordinated_starpower = 1		}$			:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$bot_rules$		:i $bot_rules$ = (%GLOBAL%$test_struct$->$bot_rules$)		:i $player_index$ = %i(1)		:i while 		:i $player_rules$ = (%GLOBAL%$bot_rules$:a{(%GLOBAL%$player_index$ - %i(1)):a})		:i $GetArraySize$%GLOBAL%$player_rules$		:i if (%GLOBAL%$array_size$ > %i(0))			:i $setting_index$ = %i(0)			:i while 			:i $params$ = (%GLOBAL%$player_rules$:a{%GLOBAL%$setting_index$:a})			:i $SetPlayerInfo$%GLOBAL%$player_index$%GLOBAL%$params$			:i $setting_index$ = (%GLOBAL%$setting_index$ + %i(1))			:i loop_to %GLOBAL%$array_size$		:i endif		:i $player_index$ = (%GLOBAL%$player_index$ + %i(1))		:i loop_to %GLOBAL%$num_players$	:i endif	:i endfunction]Script autotest_force_crowd 0x50f724c8 [	:i while 	:i if (~$debug_forcescore$ = $medium$)		:i continue	:i endif	:i if (~$debug_forcescore$ = $good$)		:i $crowdincrease$${StructInt player = 1}$		:i $crowdincrease$${StructInt player = 2}$		:i $crowdincrease$${StructInt player = 3}$		:i $crowdincrease$${StructInt player = 4}$	:i elseif (~$debug_forcescore$ = $poor$)		:i $CrowdDecrease$${StructInt player = 1}$		:i $CrowdDecrease$${StructInt player = 2}$		:i $CrowdDecrease$${StructInt player = 3}$		:i $CrowdDecrease$${StructInt player = 4}$	:i endif	:i $wait$${		StructInt 1		StructQBKey seconds	}$		:i loop_to %i(10)	:i endfunction]Script autotest_next_test 0x75a6341d [	:i $change$${StructInt autotest_ingame = 0}$	:i $KillSpawnedScript$${StructQBKey name = autotest_update_gpu_info}$	:i if (~$autotest_autolaunched$ = $false$)		:i $ui_event_wait$${			StructQBKey event = menu_back			StructStruct Data			{				StructHeader				{					StructQBKey state = UIState_Gameplay				}			}		}$			:i endif	:i if (~$g_autotest_quickplay_challenges$ = $true$)		:i $quickplay_unload_challenges$	:i endif	:i $end_practice_song_slomo$	:i $autotest_write_song_data_to_file$	:i $autotest_write_accuracy_to_file$	:i $autotest_reset_gpu_info$	:i $autotest_reset_worst_cam_info$	:i $change$$autotest_test_index$ = (~$autotest_test_index$ + %i(1))	:i $autotest_get_suite$${		StructQBString suite_num = autotest_suite_index		StructQBKey FromSuiteList	}$		:i $GetArraySize$(%GLOBAL%$suite_struct$->$tests$)	:i %GLOBAL%$end_of_tests$ = %i(0)	:i if (~$autotest_test_index$ = %GLOBAL%$array_size$)		:i %GLOBAL%$end_of_tests$ = %i(1)		:i $autotest_show_next_suite_screen$$Length$ = (~$autotest_next_suite_screen_time$)$suite_struct$ = %GLOBAL%$suite_struct$	:i endif	:i %GLOBAL%$end_of_suites$ = %i(0)	:i if (%GLOBAL%$end_of_tests$ = %i(1))		:i $change$$autotest_suite_index$ = (~$autotest_suite_index$ + %i(1))		:i $change$${StructInt autotest_test_index = 0}$		:i %GLOBAL%$next_index$ = (~$autotest_suite_list$:a{(~$autotest_suite_index$):a})		:i if (%GLOBAL%$next_index$ = %i(4294967295))			:i %GLOBAL%$end_of_suites$ = %i(1)		:i endif	:i endif	:i if (%GLOBAL%$end_of_suites$ = %i(0))		:i $autotest_get_test$${			StructQBString suite_num = autotest_suite_index			StructQBString test_num = autotest_test_index		}$				:i $autotest_set_test_params$$test_struct$ = %GLOBAL%$test_struct$		:i $autotest_show_next_test_screen$$Length$ = (~$autotest_next_test_screen_time$)$test_struct$ = %GLOBAL%$test_struct$		:i $restart_song$		:i $KillSpawnedScript$${StructQBKey name = autotest_check_end_time}$		:i if (~$autotest_has_endtime$)			:i $spawnscriptnow$${StructQBKey autotest_check_end_time}$		:i endif		:i $change$${StructInt autotest_ingame = 1}$		:i return 	:i endif	:i $CreateScreenElement$${		StructQBKey parent = root_window		StructQBKey id = autotest_complete		StructQBKey type = descinterface		StructString desc = "autotest_complete"	}$		:i if $autotest_complete$.$desc_resolvealias$${StructQBKey name = continue_menu}$		:i $CreateScreenElement$:s{			:i $type$ = $TextElement$			:i $parent$ = %GLOBAL%$resolved_id$			:i $font$ = $fontgrid_text_a1$			:i $Scale$ = %f(1.0)			:i $rgba$ = :a{%i(250)%i(250)%i(250)%i(250):a}			:i $text$ = ^[ec3e1b52]^			:i $just$ = :a{$center$$center$:a}			:i $z_priority$ = %f(100.0)			:i $event_handlers$ = :a{				:i :s{$focus$$autotest_continue_menu_focus$:s}				:i :s{$unfocus$$autotest_continue_menu_unfocus$:s}				:i :s{$pad_choose$$autotest_finished$:s}			:i :a}		:i :s}		:i $LaunchEvent$$type$ = $focus$$target$ = %GLOBAL%$resolved_id$	:i endif	:i $autotest_write_end_file$	:i $KillSpawnedScript$${StructQBKey name = autotest_update_fps_info}$	:i $KillSpawnedScript$${StructQBKey name = autotest_check_end_time}$	:i $KillSpawnedScript$${StructQBKey name = autotest_update_gpu_info}$	:i endfunction]Script autotest_continue_menu_focus 0x56eb0de7 [	:i $obj_getid$	:i %GLOBAL%$id$ = %GLOBAL%$ObjID$	:i $printstruct$ isNull 	:i $SetScreenElementProps$$id$ = %GLOBAL%$id$$rgba$ = :a{%i(210)%i(130)%i(0)%i(250):a}	:i endfunction]Script autotest_continue_menu_unfocus 0x4fa5bb63 [	:i $obj_getid$	:i %GLOBAL%$id$ = %GLOBAL%$ObjID$	:i $SetScreenElementProps$$id$ = %GLOBAL%$id$$rgba$ = :a{%i(210)%i(210)%i(210)%i(250):a}	:i endfunction]Script autotest_get_suite 0x80c15340 [	${StructInt suite_num = 0}$	:i if (~$autotest_suite_name$ !== $None$)		:i %GLOBAL%$suite_name$ = (~$autotest_suite_name$)	:i else 		:i if $GotParam$${StructQBKey FromSuiteList}$			:i %GLOBAL%$suite_num$ = (~$autotest_suite_list$:a{%GLOBAL%$suite_num$:a})		:i endif		:i $FormatText$$checksumname$ = $suite_name$%s("autotest_suite%n")$n$ = %GLOBAL%$suite_num$	:i endif	:i if NOT $globalexists$$name$ = %GLOBAL%$suite_name$$type$ = $structure$		:i $FormatText$$textname$ = $text$^[ed1b72a8]^$s$ = %GLOBAL%$suite_name$$DontAssertForChecksums$		:i $scriptassert$%GLOBAL%$text$	:i endif	:i return $suite_struct$ = ~%GLOBAL%$suite_name$$suite_name$ = %GLOBAL%$suite_name$$resolved_suite_num$ = %GLOBAL%$suite_num$	:i endfunction]Script autotest_get_test 0x80f36b39 [	:i $autotest_get_suite$$suite_num$ = %GLOBAL%$suite_num$$FromSuiteList$	:i $GetArraySize$(%GLOBAL%$suite_struct$->$tests$)	:i if (~$autotest_suite_name$ = $None$)		:i if (%GLOBAL%$array_size$ < %i(1))			:i $scriptassert$^[cfcf94ba]^$n$ = %GLOBAL%$resolved_suite_num$		:i endif		:i if (%GLOBAL%$test_num$ >= %GLOBAL%$array_size$)			:i $scriptassert$^[99ec3137]^$n$ = %GLOBAL%$resolved_suite_num$$i$ = %GLOBAL%$test_num$$a$ = %GLOBAL%$array_size$		:i endif		:i if (%GLOBAL%$test_num$ < %i(0))			:i $scriptassert$^[8d2c7597]^$n$ = %GLOBAL%$resolved_suite_num$$i$ = %GLOBAL%$test_num$		:i endif	:i endif	:i return $test_struct$ = (%GLOBAL%$suite_struct$->$tests$:a{%GLOBAL%$test_num$:a})	:i endfunction]Script autotest_finished c51f542e [	:i $change$${StructInt autotest_on = 0}$	:i $autotest_destroy_hud$	:i $destroy_autotest_complete$	:i $ui_event$${		StructQBKey event = menu_change		StructQBKey state = uistate_mainmenu	}$		:i endfunction]Script autotest_update_fps_info cff70d2d [	:i $autotest_reset_fps_info$	:i while 	:i if (~$autotest_on$ = %i(0))		:i continue	:i endif	:i if NOT $ScreenElementExists$${StructQBKey id = loading_screen_container}$		:i $getsongtimems$		:i if (~$autotest_ingame$ = %i(1) AND ~$transition_playing$ = $false$)			:i $change$$autotest_total_frames$ = (~$autotest_total_frames$ + %i(1))			:i $change$$autotest_average_fps$ = (~$autotest_average_fps$ + ~$framerate_value$)			:i if ((~$framerate_value$) < (~$autotest_lowest_fps$))				:i $change$$autotest_lowest_fps$ = (~$framerate_value$)				:i $change$$autotest_lowest_fps_time$ = %GLOBAL%$time$				:i $change$$autotest_lowest_fps_test$ = (~$autotest_test_index$)			:i endif			:i if ((~$framerate_value$) > (~$autotest_highest_fps$))				:i $change$$autotest_highest_fps$ = (~$framerate_value$)				:i $change$$autotest_highest_fps_time$ = %GLOBAL%$time$				:i $change$$autotest_highest_fps_test$ = (~$autotest_test_index$)			:i endif		:i endif	:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i endfunction]Script autotest_reset_fps_info c7d30bbf [	:i $change$${StructInt autotest_total_frames = 0}$	:i $change$${StructInt autotest_average_fps = 0}$	:i $change$${StructInt autotest_highest_fps = 0}$	:i $change$${StructInt autotest_highest_fps_time = 0}$	:i $change$${StructInt autotest_highest_fps_test = -1}$	:i $change$${StructInt autotest_lowest_fps = 120}$	:i $change$${StructInt autotest_lowest_fps_time = 0}$	:i $change$${StructInt autotest_lowest_fps_time = -1}$	:i endfunction]Script autotest_check_end_time f3468dc2 [	:i $wait$${		StructInt 5		StructQBKey seconds	}$		:i $autotest_get_test$${		StructQBString suite_num = autotest_suite_index		StructQBString test_num = autotest_test_index	}$		:i while 	:i if (~$autotest_on$ = %i(0))		:i continue	:i endif	:i $getsongtimems$	:i if ((%GLOBAL%$time$ > (%GLOBAL%$test_struct$->$end_time$)) AND (~$transition_playing$ = $false$))		:i $GuitarEvent_SongWon$		:i $wait$${			StructInt 10			StructQBKey seconds		}$				:i $autotest_get_test$${			StructQBString suite_num = autotest_suite_index			StructQBString test_num = autotest_test_index		}$			:i endif	:i $wait$${		StructInt 1		StructQBKey gameframe	}$		:i loop_to 	:i endfunction]Script autotest_update_gpu_info dda064a8 [	:i while 	:i $GetProfileData$${		StructInt cpu = 6		StructQBKey name = gpu	}$		:i %GLOBAL%$ms$ = (%GLOBAL%$microseconds$ / %f(1000.0))	:i $getsongtimems$	:i if (%GLOBAL%$ms$ < %f(15.0))		:i $change$$autotest_gpu_under_15ms$ = (~$autotest_gpu_under_15ms$ + %i(1))	:i elseif (%GLOBAL%$ms$ <= %f(16.670000))		:i $change$$autotest_gpu_15ms_to_16ms$ = (~$autotest_gpu_15ms_to_16ms$ + %i(1))	:i elseif (%GLOBAL%$ms$ <= %f(18.0))		:i $change$$autotest_gpu_16ms_to_18ms$ = (~$autotest_gpu_16ms_to_18ms$ + %i(1))	:i elseif (%GLOBAL%$ms$ <= %f(20.0))		:i $change$$autotest_gpu_18ms_to_20ms$ = (~$autotest_gpu_18ms_to_20ms$ + %i(1))	:i else 		:i $change$$autotest_gpu_over_20ms$ = (~$autotest_gpu_over_20ms$ + %i(1))	:i endif	:i if (%GLOBAL%$ms$ > (~$autotest_gpu_spike$))		:i $change$$autotest_gpu_spike$ = %GLOBAL%$ms$		:i $change$$autotest_gpu_spike_time$ = %GLOBAL%$time$	:i endif	:i $autotest_update_worst_cam_info$$ms$ = %GLOBAL%$ms$$time$ = %GLOBAL%$time$	:i $change$$autotest_gpu_total_frames$ = (~$autotest_gpu_total_frames$ + %i(1))	:i $wait$${		StructInt 1		StructQBKey gameframes	}$		:i loop_to 	:i endfunction]Script autotest_reset_gpu_info 0x0640996a [	:i $change$${StructInt autotest_gpu_total_frames = 0}$	:i $change$${StructInt autotest_gpu_under_15ms = 0}$	:i $change$${StructInt autotest_gpu_15ms_to_16ms = 0}$	:i $change$${StructInt autotest_gpu_16ms_to_18ms = 0}$	:i $change$${StructInt autotest_gpu_18ms_to_20ms = 0}$	:i $change$${StructInt autotest_gpu_over_20ms = 0}$	:i $change$${StructInt autotest_gpu_spike = 0}$	:i $change$${StructInt autotest_gpu_spike_time = 0}$	:i endfunction]Script autotest_update_worst_cam_info 0x184285e0 [	:i %GLOBAL%$index$ = ~$autotest_least_worst_cam_index$	:i if (%GLOBAL%$ms$ < (~$autotest_worst_cam_ms$:a{%GLOBAL%$index$:a}))		:i return 	:i endif	:i $GetArraySize$${StructQBString cameracuts_lastarray}$	:i %GLOBAL%$new_cam_name$ = ^[e3f67499]^	:i if (%GLOBAL%$array_size$ > (~$cameracuts_lastindex$))		:i if $StructureContains$$structure$ = ((~$cameracuts_lastarray$):a{~$cameracuts_lastindex$:a})$name$			:i $FormatText$$textname$ = $new_cam_name$^[39f26b60]^$c$ = (~$cameracuts_lastarray$:a{~$cameracuts_lastindex$:a}->$name$)$DontAssertForChecksums$		:i elseif $StructureContains$$structure$ = ((~$cameracuts_lastarray$):a{~$cameracuts_lastindex$:a})$params$			:i if $StructureContains$$structure$ = ((~$cameracuts_lastarray$):a{~$cameracuts_lastindex$:a}->$params$)$name$				:i $FormatText$$textname$ = $new_cam_name$^[39f26b60]^$c$ = (~$cameracuts_lastarray$:a{~$cameracuts_lastindex$:a}->$params$->$name$)$DontAssertForChecksums$			:i endif		:i endif	:i endif	:i %GLOBAL%$new_cam_ms$ = %GLOBAL%$ms$	:i %GLOBAL%$new_cam_time$ = %GLOBAL%$time$	:i %GLOBAL%$match_found$ = %i(0)	:i %GLOBAL%$i$ = %i(0)	:i while 	:i if ((~$autotest_worst_cam_strings$:a{%GLOBAL%$i$:a}) = %GLOBAL%$new_cam_name$)		:i %GLOBAL%$match_found$ = %i(1)		:i if ((~$autotest_worst_cam_ms$:a{%GLOBAL%$i$:a}) < %GLOBAL%$new_cam_ms$)			:i %GLOBAL%$index$ = %GLOBAL%$i$			:i continue		:i endif	:i endif	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to ~$autotest_num_worst_cams$	:i %GLOBAL%$new_worst_cam$ = %i(0)	:i if (%GLOBAL%$match_found$ = %i(0))		:i %GLOBAL%$temp_array$ = ~$autotest_worst_cam_strings$		:i $SetArrayElement$:s{			:i $arrayName$ = $temp_array$			:i $index$ = %GLOBAL%$index$			:i $newValue$ = %GLOBAL%$new_cam_name$		:i :s}		:i $change$$autotest_worst_cam_strings$ = %GLOBAL%$temp_array$		:i %GLOBAL%$temp_array$ = ~$autotest_worst_cam_ms$		:i $SetArrayElement$:s{			:i $arrayName$ = $temp_array$			:i $index$ = %GLOBAL%$index$			:i $newValue$ = %GLOBAL%$new_cam_ms$		:i :s}		:i $change$$autotest_worst_cam_ms$ = %GLOBAL%$temp_array$		:i %GLOBAL%$temp_array$ = ~$autotest_worst_cam_times$		:i $SetArrayElement$:s{			:i $arrayName$ = $temp_array$			:i $index$ = %GLOBAL%$index$			:i $newValue$ = %GLOBAL%$new_cam_time$		:i :s}		:i $change$$autotest_worst_cam_times$ = %GLOBAL%$temp_array$		:i %GLOBAL%$new_worst_cam$ = %i(1)	:i endif	:i if (%GLOBAL%$new_worst_cam$ = %i(1))		:i %GLOBAL%$new_cam_index$ = %i(0)		:i %GLOBAL%$i$ = %i(1)		:i while 		:i if ((~$autotest_worst_cam_ms$:a{%GLOBAL%$i$:a}) < (~$autotest_worst_cam_ms$:a{%GLOBAL%$new_cam_index$:a}))			:i %GLOBAL%$new_cam_index$ = %GLOBAL%$i$		:i endif		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to (~$autotest_num_worst_cams$ - %i(1))		:i $change$$autotest_least_worst_cam_index$ = %GLOBAL%$new_cam_index$	:i endif	:i endfunction]Script autotest_reset_worst_cam_info 0x52b2a83d [	:i $change$${		StructArray autotest_worst_cam_strings		{			ArrayQBKeyStringQs			[				0x1feb8bd8				0x1feb8bd8				0x1feb8bd8				0x1feb8bd8				0x1feb8bd8			]		}	}$		:i $change$${		StructArray autotest_worst_cam_ms		{			ArrayFloat			[				0.00000				0.00000				0.00000				0.00000				0.00000			]		}	}$		:i $change$${		StructArray autotest_worst_cam_times		{			ArrayFloat			[				0.00000				0.00000				0.00000				0.00000				0.00000			]		}	}$		:i $change$${StructInt autotest_least_worst_cam_index = 0}$	:i endfunction]Script autotest_update_in_game_hud 0x7d0378eb [	:i if (~$autotest_hud_on$)		:i $autotest_get_suite$${			StructQBString suite_num = autotest_suite_index			StructQBKey FromSuiteList		}$				:i $autotest_get_test$${			StructQBString suite_num = autotest_suite_index			StructQBString test_num = autotest_test_index		}$				:i $autotest_hud$.$se_setprops$$test_suite_text$ = (%GLOBAL%$suite_struct$->$name$)		:i $FormatText$${			StructQBKey textname = test_number			StructQBStringQs 0x3c71eff6			StructQBString t = autotest_test_index		}$				:i $autotest_hud$.$se_setprops$$test_text$ = %GLOBAL%$test_number$		:i while 		:i if (~$autotest_on$ = %i(0))			:i continue		:i endif		:i if NOT $ScreenElementExists$${StructQBKey id = loading_screen_container}$			:i if (~$autotest_ingame$ = %i(1))				:i $getsongtimems$				:i $autotest_format_time$$time$ = %GLOBAL%$time$$mode$ = $minutes_seconds_ms$				:i $autotest_hud$.$se_setprops$$song_time_text$ = %GLOBAL%$formatted_time$			:i endif		:i endif		:i $wait$${			StructInt 1			StructQBKey gameframe		}$				:i loop_to 	:i endif	:i endfunction]Script autotest_push_test_suite 0x9c6b0d7f [	:i $GetArraySize$(~$autotest_suite_list$)	:i if ((~$autotest_num_suites$) = %GLOBAL%$array_size$)		:i return 	:i endif	:i %GLOBAL%$temp_array$ = (~$autotest_suite_list$)	:i $SetArrayElement$:s{$arrayName$ = $temp_array$$index$ = (~$autotest_num_suites$)$newValue$ = %GLOBAL%$suite_num$:s}	:i $change$$autotest_suite_list$ = %GLOBAL%$temp_array$	:i $autotest_get_suite$$suite_num$ = %GLOBAL%$suite_num$	:i $FormatText$$checksumname$ = $suite_id$%s("suite_%s_at_%i")$s$ = %GLOBAL%$suite_num$$i$ = (~$autotest_num_suites$)	:i $CreateScreenElement$:s{		:i $type$ = $TextElement$		:i $id$ = %GLOBAL%$suite_id$		:i $parent$ = $test_suite_list$		:i $font$ = $debug$		:i $Scale$ = %f(0.75)		:i $rgba$ = :a{%i(210)%i(210)%i(210)%i(250):a}		:i $text$ = (%GLOBAL%$suite_struct$->$name$)		:i $just$ = :a{$left$$top$:a}		:i $z_priority$ = %f(100.0)	:i :s}	:i $FormatText$$textname$ = $text$^[843f16d0]^$s$ = %GLOBAL%$suite_num$$i$ = (~$autotest_num_suites$)	:i $change$$autotest_num_suites$ = (~$autotest_num_suites$ + %i(1))	:i endfunction]Script autotest_pop_test_suite 0x8ae52d3f [	:i if ((~$autotest_num_suites$) = %i(0))		:i return 	:i endif	:i %GLOBAL%$temp_array$ = (~$autotest_suite_list$)	:i %GLOBAL%$index$ = (~$autotest_num_suites$ - %i(1))	:i %GLOBAL%$suite_num$ = (~$autotest_suite_list$:a{%GLOBAL%$index$:a})	:i $SetArrayElement$:s{$arrayName$ = $temp_array$$index$ = %GLOBAL%$index$$newValue$ = %i(4294967295):s}	:i $change$$autotest_suite_list$ = %GLOBAL%$temp_array$	:i $change$$autotest_num_suites$ = (~$autotest_num_suites$ - %i(1))	:i $FormatText$$checksumname$ = $suite_id$%s("suite_%s_at_%i")$s$ = %GLOBAL%$suite_num$$i$ = (~$autotest_num_suites$)	:i if $ScreenElementExists$$id$ = %GLOBAL%$suite_id$		:i $DestroyScreenElement$$id$ = %GLOBAL%$suite_id$	:i endif	:i $FormatText$$textname$ = $text$^[843f16d0]^$s$ = %GLOBAL%$suite_num$$i$ = (~$autotest_num_suites$)	:i if $ScreenElementExists$${StructQBKey id = test_suite_list}$		:i $DestroyScreenElement$${StructQBKey id = test_suite_list}$	:i endif	:i $autotest_create_suite_list$	:i endfunction]Script autotest_populate_test_suite_list 0x34ef0dc1 [	:i $GetArraySize$(~$autotest_suite_list$)	:i %GLOBAL%$i$ = %i(0)	:i while 	:i if ((~$autotest_suite_list$:a{%GLOBAL%$i$:a}) = %i(4294967295))		:i continue	:i endif	:i $autotest_get_suite$$suite_num$ = %GLOBAL%$i$$FromSuiteList$	:i $FormatText$$checksumname$ = $suite_id$%s("suite_%s_at_%i")$s$ = %GLOBAL%$suite_num$$i$ = %GLOBAL%$i$	:i $CreateScreenElement$:s{		:i $type$ = $TextElement$		:i $id$ = %GLOBAL%$suite_id$		:i $parent$ = $test_suite_list$		:i $font$ = $debug$		:i $Scale$ = %f(0.75)		:i $rgba$ = :a{%i(210)%i(210)%i(210)%i(250):a}		:i $text$ = (%GLOBAL%$suite_struct$->$name$)		:i $just$ = :a{$left$$top$:a}		:i $z_priority$ = %f(100.0)	:i :s}	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i endfunction]Script autotest_show_next_test_screen 0x2a24ae5e [	${StructInt Length = 5}$	:i if (%GLOBAL%$Length$ <= %i(0))		:i return 	:i endif	:i %GLOBAL%$save_speed$ = (~$current_speedfactor$)	:i $end_practice_song_slomo$	:i $CreateScreenElement$${		StructQBKey parent = root_window		StructQBKey id = autotest_transition		StructQBKey type = descinterface		StructString desc = "autotest_transition"	}$		:i $autotest_transition_set_props$$test_struct$ = %GLOBAL%$test_struct$$autotest_transition$ = %GLOBAL%$autotest_transition$$Speed$ = %GLOBAL%$save_speed$	:i if (~$autotest_turbo_mode$ = %i(1))		:i %GLOBAL%$wait_time$ = %f(0.5)	:i else 		:i %GLOBAL%$wait_time$ = %f(1.0)	:i endif	:i %GLOBAL%$cur_count$ = %GLOBAL%$Length$	:i while 	:i $FormatText$$textname$ = $countdown_text$^[39f26b60]^$c$ = %GLOBAL%$cur_count$	:i $autotest_transition$.$se_setprops$$countdown_text$ = %GLOBAL%$countdown_text$	:i $wait$${		StructInt 1		StructQBKey seconds	}$		:i %GLOBAL%$cur_count$ = (%GLOBAL%$cur_count$ - %i(1))	:i loop_to %GLOBAL%$Length$	:i if $ScreenElementExists$${StructQBKey id = autotest_transition}$		:i $DestroyScreenElement$${StructQBKey id = autotest_transition}$	:i endif	:i $change$$current_speedfactor$ = %GLOBAL%$save_speed$	:i $setslomo$${StructQBString current_speedfactor}$	:i endfunction]Script autotest_show_next_suite_screen ffb9a7ac [	${StructInt Length = 5}$	:i if (%GLOBAL%$Length$ <= %i(0))		:i return 	:i endif	:i %GLOBAL%$save_speed$ = (~$current_speedfactor$)	:i $end_practice_song_slomo$	:i $CreateScreenElement$${		StructQBKey parent = root_window		StructQBKey id = autotest_suite_transition		StructQBKey type = descinterface		StructString desc = "autotest_suite_transition"	}$		:i $autotest_suite_transition_set_props$$suite_struct$ = %GLOBAL%$suite_struct$	:i %GLOBAL%$cur_count$ = %GLOBAL%$Length$	:i while 	:i $FormatText$$textname$ = $countdown_text$^[39f26b60]^$c$ = %GLOBAL%$cur_count$	:i $autotest_suite_transition$.$se_setprops$$countdown_text$ = %GLOBAL%$countdown_text$	:i $wait$${		StructInt 1		StructQBKey seconds	}$		:i %GLOBAL%$cur_count$ = (%GLOBAL%$cur_count$ - %i(1))	:i loop_to %GLOBAL%$Length$	:i if $ScreenElementExists$${StructQBKey id = autotest_suite_transition}$		:i $DestroyScreenElement$${StructQBKey id = autotest_suite_transition}$	:i endif	:i $change$$current_speedfactor$ = %GLOBAL%$save_speed$	:i $setslomo$${StructQBString current_speedfactor}$	:i endfunction]Script autotest_format_time 0x795e5bfb [	${StructQBKey mode = minutes_seconds_ms}$	:i %GLOBAL%$sign$ = ^[03ac90f0]^	:i if (%GLOBAL%$time$ < %i(0))		:i %GLOBAL%$time$ = (%GLOBAL%$time$ * %i(4294967295))		:i %GLOBAL%$sign$ = ^[c4992bba]^	:i endif	:i %GLOBAL%$pure_seconds$ = (%GLOBAL%$time$ / %i(1000))	:i $CastToInteger$${StructQBKey pure_seconds}$	:i $mod$$a$ = %GLOBAL%$pure_seconds$$b$ = %i(60)	:i %GLOBAL%$seconds$ = %GLOBAL%$mod$	:i %GLOBAL%$pure_minutes$ = (%GLOBAL%$pure_seconds$ / %i(60))	:i $mod$$a$ = %GLOBAL%$pure_minutes$$b$ = %i(60)	:i %GLOBAL%$minutes$ = %GLOBAL%$mod$	:i %GLOBAL%$hours$ = ((%GLOBAL%$pure_seconds$ / %i(60)) / %i(60))	:i %GLOBAL%$pure_ms$ = %GLOBAL%$time$	:i $CastToInteger$${StructQBKey pure_ms}$	:i $mod$$a$ = %GLOBAL%$pure_ms$$b$ = %i(1000)	:i %GLOBAL%$ms$ = %GLOBAL%$mod$	:i if (%GLOBAL%$ms$ < %i(10))		:i $FormatText$$textname$ = $ms_text$^[ffd5d705]^$m$ = %GLOBAL%$ms$	:i elseif (%GLOBAL%$ms$ < %i(100))		:i $FormatText$$textname$ = $ms_text$^[82aa6ba6]^$m$ = %GLOBAL%$ms$	:i else 		:i $FormatText$$textname$ = $ms_text$^[a77146ee]^$m$ = %GLOBAL%$ms$	:i endif	:i if (%GLOBAL%$seconds$ < %i(10))		:i $FormatText$$textname$ = $seconds_text$^[56eb5479]^$s$ = %GLOBAL%$seconds$	:i else 		:i $FormatText$$textname$ = $seconds_text$^[73307931]^$s$ = %GLOBAL%$seconds$	:i endif	:i if (%GLOBAL%$minutes$ < %i(10))		:i $FormatText$$textname$ = $minutes_text$^[82aa6ba6]^$m$ = %GLOBAL%$minutes$	:i else 		:i $FormatText$$textname$ = $minutes_text$^[a77146ee]^$m$ = %GLOBAL%$minutes$	:i endif	:i if (%GLOBAL%$hours$ < %i(10))		:i $FormatText$$textname$ = $hours_text$^[ffdd9fe3]^$h$ = %GLOBAL%$hours$	:i else 		:i $FormatText$$textname$ = $hours_text$^[da06b2ab]^$h$ = %GLOBAL%$hours$	:i endif	:i switch (%GLOBAL%$mode$)		:i case $minutes_seconds_ms$			:i $FormatText$$textname$ = $formatted_time$^[e4a7f04c]^$n$ = %GLOBAL%$sign$$m$ = %GLOBAL%$minutes_text$$s$ = %GLOBAL%$seconds_text$$f$ = %GLOBAL%$ms_text$			:i endcase		case $hours_minutes_seconds$			:i $FormatText$$textname$ = $formatted_time$^[a6c71ba1]^$n$ = %GLOBAL%$sign$$h$ = %GLOBAL%$hours_text$$m$ = %GLOBAL%$minutes_text$$s$ = %GLOBAL%$seconds_text$			:i endcase		case $hours_minutes_seconds_ms$			:i $FormatText$$textname$ = $formatted_time$^[6af264de]^$n$ = %GLOBAL%$sign$$h$ = %GLOBAL%$hours_text$$m$ = %GLOBAL%$minutes_text$$s$ = %GLOBAL%$seconds_text$$f$ = %GLOBAL%$ms_text$			:i endcase		default 			:i $FormatText$${				StructQBKey textname = formatted_time				StructQBStringQs 0x03ac90f0			}$				:i end_switch	:i return $formatted_time$ = %GLOBAL%$formatted_time$	:i endfunction]Script autotest_write_song_data_to_file cad76764 [	:i $autotest_get_test$${		StructQBString suite_num = autotest_suite_index		StructQBString test_num = autotest_test_index	}$		:i $autotest_get_suite$${		StructQBString suite_num = autotest_suite_index		StructQBKey FromSuiteList	}$		:i $FormatText$$textname$ = $filename$%s("%s_test%t_stats")$s$ = %GLOBAL%$suite_name$$t$ = (~$autotest_test_index$)$DoNotResolve$$DontAssertForChecksums$	:i $TextOutputStart$$filename$ = %GLOBAL%$filename$	:i if (~$autotest_log_gpu$ = %i(1))		:i %GLOBAL%$gpu_under_15ms$ = ((~$autotest_gpu_under_15ms$) * %f(1.0))		:i %GLOBAL%$gpu_15ms16mss$ = ((~$autotest_gpu_15ms_to_16ms$) * %f(1.0))		:i %GLOBAL%$gpu_16ms18ms$ = ((~$autotest_gpu_16ms_to_18ms$) * %f(1.0))		:i %GLOBAL%$gpu_18ms20ms$ = ((~$autotest_gpu_18ms_to_20ms$) * %f(1.0))		:i %GLOBAL%$gpu_over_20ms$ = ((~$autotest_gpu_over_20ms$) * %f(1.0))		:i %GLOBAL%$percent_under_15ms$ = ((%GLOBAL%$gpu_under_15ms$ / (~$autotest_gpu_total_frames$)) * %i(100))		:i %GLOBAL%$percent_15ms16ms$ = ((%GLOBAL%$gpu_15ms16mss$ / (~$autotest_gpu_total_frames$)) * %i(100))		:i %GLOBAL%$percent_16ms18ms$ = ((%GLOBAL%$gpu_16ms18ms$ / (~$autotest_gpu_total_frames$)) * %i(100))		:i %GLOBAL%$percent_18ms20ms$ = ((%GLOBAL%$gpu_18ms20ms$ / (~$autotest_gpu_total_frames$)) * %i(100))		:i %GLOBAL%$percent_over_20ms$ = ((%GLOBAL%$gpu_over_20ms$ / (~$autotest_gpu_total_frames$)) * %i(100))		:i $FormatText$$textname$ = $text$^[7ae4314a]^$p$ = %GLOBAL%$percent_under_15ms$$f$ = (~$autotest_gpu_under_15ms$)$t$ = (~$autotest_gpu_total_frames$)		:i $TextOutput$$text$ = %GLOBAL%$text$		:i $FormatText$$textname$ = $text$^[29f6586b]^$p$ = %GLOBAL%$percent_15ms16ms$$f$ = (~$autotest_gpu_15ms_to_16ms$)$t$ = (~$autotest_gpu_total_frames$)		:i $TextOutput$$text$ = %GLOBAL%$text$		:i $FormatText$$textname$ = $text$^[8315ca36]^$p$ = %GLOBAL%$percent_16ms18ms$$f$ = (~$autotest_gpu_16ms_to_18ms$)$t$ = (~$autotest_gpu_total_frames$)		:i $TextOutput$$text$ = %GLOBAL%$text$		:i $FormatText$$textname$ = $text$^[7a922000]^$p$ = %GLOBAL%$percent_18ms20ms$$f$ = (~$autotest_gpu_18ms_to_20ms$)$t$ = (~$autotest_gpu_total_frames$)		:i $TextOutput$$text$ = %GLOBAL%$text$		:i $FormatText$$textname$ = $text$^[0b4b04b9]^$p$ = %GLOBAL%$percent_over_20ms$$f$ = (~$autotest_gpu_over_20ms$)$t$ = (~$autotest_gpu_total_frames$)		:i $TextOutput$$text$ = %GLOBAL%$text$		:i $autotest_format_time$$time$ = (~$autotest_gpu_spike_time$)$mode$ = $minutes_seconds_ms$		:i $FormatText$$textname$ = $text$^[74b58814]^$g$ = (~$autotest_gpu_spike$)$t$ = %GLOBAL%$formatted_time$		:i $TextOutput$$text$ = %GLOBAL%$text$		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$		:i %GLOBAL%$i$ = %i(0)		:i while 		:i $autotest_format_time$$time$ = (~$autotest_worst_cam_times$:a{%GLOBAL%$i$:a})$mode$ = $minutes_seconds_ms$		:i $FormatText$$textname$ = $text$^[299b069d]^$c$ = (~$autotest_worst_cam_strings$:a{%GLOBAL%$i$:a})$m$ = (~$autotest_worst_cam_ms$:a{%GLOBAL%$i$:a})$t$ = %GLOBAL%$formatted_time$		:i $TextOutput$$text$ = %GLOBAL%$text$		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to ~$autotest_num_worst_cams$		:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i endif	:i $autotest_output_test_info$	:i $TextOutputEnd$$output_text$$filename$ = %GLOBAL%$filename$	:i endfunction]Script autotest_output_test_info cb833580 [	:i $autotest_get_test$${		StructQBString suite_num = autotest_suite_index		StructQBString test_num = autotest_test_index	}$		:i $autotest_get_suite$${		StructQBString suite_num = autotest_suite_index		StructQBKey FromSuiteList	}$		:i $props_struct$ = (~$gh_songlist_props$)	:i %GLOBAL%$song_struct$ = ((%GLOBAL%$props_struct$)->(%GLOBAL%$test_struct$->$song$))	:i %GLOBAL%$song_string$ = (%GLOBAL%$song_struct$->$Title$)	:i $FormatText$$textname$ = $text$^[200b7e9e]^$s$ = %GLOBAL%$song_string$	:i $TextOutput$$text$ = %GLOBAL%$text$	:i %GLOBAL%$venue_struct$ = (~$LevelZones$->(%GLOBAL%$test_struct$->$level$))	:i %GLOBAL%$venue_string$ = (%GLOBAL%$venue_struct$->$Title$)	:i $FormatText$$textname$ = $text$^[65b06b3d]^$v$ = %GLOBAL%$venue_string$	:i $TextOutput$$text$ = %GLOBAL%$text$	:i $GetNumPlayersInGame$${StructQBKey on_screen}$	:i %GLOBAL%$player$ = %i(1)	:i while 	:i $FormatText$$checksumname$ = $player_part$%s("p%n_part")$n$ = %GLOBAL%$player$	:i %GLOBAL%$part_string$ = (~$autotest_part_strings$->(%GLOBAL%$test_struct$->%GLOBAL%$player_part$))	:i $FormatText$$textname$ = $text$^[064820a5]^$p$ = %GLOBAL%$player$$s$ = %GLOBAL%$part_string$	:i $TextOutput$$text$ = %GLOBAL%$text$	:i %GLOBAL%$player$ = (%GLOBAL%$player$ + %i(1))	:i loop_to %GLOBAL%$num_players_shown$	:i %GLOBAL%$player$ = %i(1)	:i while 	:i $FormatText$$checksumname$ = $player_diff$%s("p%n_difficulty")$n$ = %GLOBAL%$player$	:i %GLOBAL%$diff_string$ = (~$autotest_difficulty_strings$->(%GLOBAL%$test_struct$->%GLOBAL%$player_diff$))	:i $FormatText$$textname$ = $text$^[05b060f7]^$p$ = %GLOBAL%$player$$d$ = %GLOBAL%$diff_string$	:i $TextOutput$$text$ = %GLOBAL%$text$	:i %GLOBAL%$player$ = (%GLOBAL%$player$ + %i(1))	:i loop_to %GLOBAL%$num_players_shown$	:i $FormatText$$textname$ = $text$^[54bf2f1e]^$s$ = (%GLOBAL%$test_struct$->$star_power_always_on$)	:i $TextOutput$$text$ = %GLOBAL%$text$	:i %GLOBAL%$mode_string$ = (~$autotest_game_mode_names$->(%GLOBAL%$test_struct$->$game_mode$))	:i $FormatText$$textname$ = $text$^[330c6169]^$m$ = %GLOBAL%$mode_string$	:i $TextOutput$$text$ = %GLOBAL%$text$	:i $FormatText$$textname$ = $text$^[6ffeab32]^$w$ = (%GLOBAL%$test_struct$->$worst_case_band$)	:i $TextOutput$$text$ = %GLOBAL%$text$	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$start_time$		:i $FormatText$$textname$ = $text$^[a72bcb96]^$s$ = (%GLOBAL%$test_struct$->$start_time$)	:i else 		:i %GLOBAL%$text$ = ^[6d8100ac]^	:i endif	:i $TextOutput$$text$ = %GLOBAL%$text$	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$end_time$		:i $FormatText$$textname$ = $text$^[a6f49151]^$e$ = (%GLOBAL%$test_struct$->$end_time$)	:i else 		:i %GLOBAL%$text$ = ^[facc4fcb]^	:i endif	:i $TextOutput$$text$ = %GLOBAL%$text$	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$speed_factor$		:i $FormatText$$textname$ = $text$^[87248511]^$s$ = (%GLOBAL%$test_struct$->$speed_factor$)	:i else 		:i $FormatText$${			StructQBKey textname = text			StructQBStringQs 0x87248511			StructFloat s = 1.00		}$			:i endif	:i $TextOutput$$text$ = %GLOBAL%$text$	:i endfunction]Script autotest_write_accuracy_to_file e4c8fe5d [	:i $filename$ = %s("autotest_100_percent_complete")	:i $TextOutputStart$$filename$ = %GLOBAL%$filename$	:i $GetNumPlayersInGame$${StructQBKey on_screen}$	:i $player$ = %i(1)	:i while 	:i $getplayerinfo$%GLOBAL%$player$$part$	:i if (%GLOBAL%$part$ = $guitar$ OR 		:i %GLOBAL%$part$ = $Bass$ OR 		:i %GLOBAL%$part$ = $drum$)		:i $getplayerinfo$%GLOBAL%$player$$notes_hit$		:i $getplayerinfo$%GLOBAL%$player$$max_notes$		:i $getplayerinfo$%GLOBAL%$player$$part$		:i %GLOBAL%$part_string$ = (~$autotest_part_strings$->%GLOBAL%$part$)		:i $FormatText$$textname$ = $notes_hit_text$^[31a218f7]^$p$ = %GLOBAL%$player$$i$ = %GLOBAL%$part_string$$n$ = %GLOBAL%$notes_hit$		:i $FormatText$$textname$ = $max_notes_text$^[45ccf5a9]^$p$ = %GLOBAL%$player$$i$ = %GLOBAL%$part_string$$m$ = %GLOBAL%$max_notes$		:i $TextOutput$$text$ = %GLOBAL%$notes_hit_text$		:i $TextOutput$$text$ = %GLOBAL%$max_notes_text$		:i if (%GLOBAL%$notes_hit$ < %GLOBAL%$max_notes$)			:i %GLOBAL%$filename$ = %s("autotest_100_percent_failed")		:i endif	:i endif	:i %GLOBAL%$player$ = (%GLOBAL%$player$ + %i(1))	:i loop_to %GLOBAL%$num_players_shown$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i $autotest_output_test_info$	:i $TextOutputEnd$$output_text$$filename$ = %GLOBAL%$filename$	:i endfunction]Script autotest_write_end_file b1a49655 [	:i $autotest_get_suite$${StructQBString suite_num = autotest_suite_index}$	:i $FormatText$${		StructQBKey textname = filename		StructString 0x00000000 = "autotest_complete"	}$		:i $TextOutputStart$$filename$ = %GLOBAL%$filename$	:i $TextOutput$${StructQBStringQs text = d81e006a}$	:i $TextOutput$${StructQBStringQs text = 0x03ac90f0}$	:i if (~$autotest_suite_name$ = $None$)		:i $GetArraySize$(~$autotest_suite_list$)		:i %GLOBAL%$i$ = %i(0)		:i while 		:i if ((~$autotest_suite_list$:a{%GLOBAL%$i$:a}) = %i(4294967295))			:i continue		:i endif		:i $autotest_get_suite$$suite_num$ = %GLOBAL%$i$$FromSuiteList$		:i $FormatText$$textname$ = $text$^[73307931]^$s$ = %GLOBAL%$suite_name$$DoNotResolve$$DontAssertForChecksums$		:i $TextOutput$$text$ = %GLOBAL%$text$		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %GLOBAL%$array_size$	:i else 		:i $autotest_get_suite$		:i $FormatText$$textname$ = $text$^[73307931]^$s$ = %GLOBAL%$suite_name$$DoNotResolve$$DontAssertForChecksums$		:i $TextOutput$$text$ = %GLOBAL%$text$	:i endif	:i $Output_Camera_Sync_Warnings$	:i $TextOutputEnd$$output_text$$filename$ = %GLOBAL%$filename$	:i endfunction]Script autotest_autolaunch bb9e1e67 [	${		StructInt suite_index = -1		StructQBKey suite_name = None		StructInt hud_on = 0		StructInt log_gpu = 0		StructInt fully_complete = 0	}$		:i $change$$autotest_log_gpu$ = %GLOBAL%$log_gpu$	:i if ((%GLOBAL%$suite_index$ < %i(0)) AND ($suite_name$ = $None$))		:i $scriptassert$${StructQBStringQs 0x2fc0ebd2}$	:i endif	:i $change$${StructInt show_gpu_time = 1}$	:i $change$${StructInt autotest_on = 1}$	:i $change$$autotest_suite_index$ = %GLOBAL%$suite_index$	:i $change$$autotest_suite_name$ = %GLOBAL%$suite_name$	:i $change$${StructInt autotest_test_index = 0}$	:i $change$$autotest_hud_on$ = %GLOBAL%$hud_on$	:i $change$${StructInt autolaunch_startnow = 0}$	:i $change$${StructInt autotest_restore_globals = 1}$	:i $change$${StructInt skip_signin = 1}$	:i $change$${StructInt Autolaunch_ShowStorageSelector = 0}$	:i $ThreadSafeSetGlobalInteger$${		StructQBKey global_name = primary_controller		StructInt new_value = 0	}$		:i $ThreadSafeSetGlobalInteger$${		StructQBKey global_name = primary_controller_assigned		StructInt new_value = 1	}$		:i $change$$autotest_fully_complete$ = %GLOBAL%$fully_complete$	:i $SetPlayerInfo$${		StructInt 1		StructInt bot_play = 1	}$		:i $SetPlayerInfo$${		StructInt 2		StructInt bot_play = 1	}$		:i $SetPlayerInfo$${		StructInt 3		StructInt bot_play = 1	}$		:i $SetPlayerInfo$${		StructInt 4		StructInt bot_play = 1	}$		:i if $ScreenElementExists$${StructQBKey id = current_menu}$		:i $LaunchEvent$${			StructQBKey type = unfocus			StructQBKey target = current_menu		}$			:i endif	:i if $ScreenElementExists$${StructQBKey id = MotdInterface}$		:i $LaunchEvent$${			StructQBKey type = unfocus			StructQBKey target = MotdInterface		}$			:i endif	:i $autotest_start$${StructInt autolaunch = 1}$	:i endfunction]Script startup_generate_profile_reports ae28b92b [	:i if $GotParam$${StructQBKey song}$		:i if (%GLOBAL%$song$ = $Demon$)			:i $change$${StructInt debug_encore = 1}$		:i endif	:i endif	:i $change$${StructInt output_gpu_log = 1}$	:i $change$${StructInt use_worst_band = 1}$	:i $change$${StructInt Autolaunch_ShowStorageSelector = 0}$	:i $change$${StructString GPULog_OutputFilename = "output_gpu"}$	:i $SetPlayerInfo$${		StructInt 1		StructInt star_power_debug_mode = 2	}$		:i $SetPlayerInfo$${		StructInt 2		StructInt star_power_debug_mode = 2	}$		:i $SetPlayerInfo$${		StructInt 3		StructInt star_power_debug_mode = 2	}$		:i $SetPlayerInfo$${		StructInt 4		StructInt star_power_debug_mode = 2	}$		:i $setup_4_player_bot$	:i endfunction]Script dump_memory_generate_memory_reports 0x888f51c4 [	:i $wait$${		StructInt 20		StructQBKey seconds	}$		:i $DumpHeaps$${		StructString file = "memory.txt"		StructQBKey profile_to_file	}$		:i endfunction]Script startup_generate_memory_reports e6b68b24 [	:i $BotPlayOn$${StructInt player = 1}$	:i $BotPlayOn$${StructInt player = 2}$	:i $BotPlayOn$${StructInt player = 3}$	:i $BotPlayOn$${StructInt player = 4}$	:i $SetPlayerInfo$${		StructInt 1		StructQBKey part = guitar	}$		:i $SetPlayerInfo$${		StructInt 2		StructQBKey part = drum	}$		:i $SetPlayerInfo$${		StructInt 3		StructQBKey part = Vocals	}$		:i $SetPlayerInfo$${		StructInt 4		StructQBKey part = Bass	}$		:i $SetPlayerInfo$${		StructInt 1		StructQBKey difficulty = expert	}$		:i $SetPlayerInfo$${		StructInt 2		StructQBKey difficulty = expert	}$		:i $SetPlayerInfo$${		StructInt 3		StructQBKey difficulty = expert	}$		:i $SetPlayerInfo$${		StructInt 4		StructQBKey difficulty = expert	}$		:i $change$${StructInt override_band_members = 1}$	:i $change$${		StructStruct default_band_members		{			StructHeader			{				StructQBKey member0 = GH_Rocker_Clive				StructQBKey member1 = GH_Rocker_Izzy				StructQBKey member2 = GH_Rocker_Pandora				StructQBKey member3 = GH_Rocker_Judy			}		}	}$		:i $SpawnScript$${StructQBKey dump_memory_generate_memory_reports}$	:i endfunction]