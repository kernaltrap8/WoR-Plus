Unknown [1c00000000000000000008c40000000000000000]Script autotest_check_test_params a075bea6 [	:i $autotest_get_test$$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i %GLOBAL%$suite_num$ = (~$autotest_suite_list$:a{%GLOBAL%$suite_num$:a})	:i $autotest_check_song$$song$ = (%GLOBAL%$test_struct$->$song$)$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i if (%GLOBAL%$check_song_passed$ = %i(0))		:i return ${StructInt check_passed = 0}$	:i endif	:i $autotest_check_venue$$venue$ = (%GLOBAL%$test_struct$->$level$)$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i if (%GLOBAL%$check_venue_passed$ = %i(0))		:i return ${StructInt check_passed = 0}$	:i endif	:i $autotest_check_part_names$$test_struct$ = %GLOBAL%$test_struct$$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i if (%GLOBAL%$check_part_names_passed$ = %i(0))		:i return ${StructInt check_passed = 0}$	:i endif	:i $autotest_check_difficulty_names$$test_struct$ = %GLOBAL%$test_struct$$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i if (%GLOBAL%$check_difficulty_names_passed$ = %i(0))		:i return ${StructInt check_passed = 0}$	:i endif	:i $autotest_check_mode$$game_mode$ = (%GLOBAL%$test_struct$->$game_mode$)$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i if (%GLOBAL%$check_mode_passed$ = %i(0))		:i return ${StructInt check_passed = 0}$	:i endif	:i $autotest_check_part_combos$$versus$ = %GLOBAL%$versus$$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i if (%GLOBAL%$check_part_combos_passed$ = %i(0))		:i return ${StructInt check_passed = 0}$	:i endif	:i $autotest_check_start_end_times$$test_struct$ = %GLOBAL%$test_struct$$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i if (%GLOBAL%$check_start_end_times_passed$ = %i(0))		:i return ${StructInt check_passed = 0}$	:i endif	:i $autotest_check_force_score$$test_struct$ = %GLOBAL%$test_struct$$suite_num$ = %GLOBAL%$suite_num$$test_num$ = %GLOBAL%$test_num$	:i if (%GLOBAL%$check_force_score_passed$ = %i(0))		:i return ${StructInt check_passed = 0}$	:i endif	:i return ${StructInt check_passed = 1}$	:i endfunction]Script autotest_check_song 0x530030de [	:i $GetSonglistSize$	:i %GLOBAL%$found_match$ = %i(0)	:i %GLOBAL%$i$ = %i(0)	:i while 	:i $GetSonglistChecksum$$index$ = %GLOBAL%$i$	:i if (%GLOBAL%$song$ = %GLOBAL%$song_checksum$)		:i %GLOBAL%$found_match$ = %i(1)		:i return ${StructInt check_song_passed = 1}$	:i endif	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i $softassert$^[8a126ef5]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$	:i return ${StructInt check_song_passed = 0}$	:i endfunction]Script autotest_check_venue 0x1ebe1c63 [	:i $GetArraySize$${StructQBString levelzonearray}$	:i %GLOBAL%$found_match$ = %i(0)	:i %GLOBAL%$i$ = %i(0)	:i while 	:i if (%GLOBAL%$venue$ = (~$levelzonearray$:a{%GLOBAL%$i$:a}))		:i %GLOBAL%$found_match$ = %i(1)		:i return ${StructInt check_venue_passed = 1}$	:i endif	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %GLOBAL%$array_size$	:i $softassert$^[dbaaaf15]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$	:i return ${StructInt check_venue_passed = 0}$	:i endfunction]Script autotest_check_part_names 0x608cc2d9 [	:i %GLOBAL%$player$ = %i(1)	:i while 	:i $FormatText$$checksumname$ = $player_part$%s("p%n_part")$n$ = %GLOBAL%$player$	:i %GLOBAL%$part$ = (%GLOBAL%$test_struct$->%GLOBAL%$player_part$)	:i if NOT $StructureContains$$structure$ = ~$autotest_part_strings$%GLOBAL%$part$		:i $softassert$^[719d7047]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$$n$ = %GLOBAL%$player$		:i return ${StructInt check_part_names_passed = 0}$	:i endif	:i %GLOBAL%$player$ = (%GLOBAL%$player$ + %i(1))	:i loop_to %i(4)	:i return ${StructInt check_part_names_passed = 1}$	:i endfunction]Script autotest_check_difficulty_names 0x627fa9b8 [	:i %GLOBAL%$player$ = %i(1)	:i while 	:i $FormatText$$checksumname$ = $player_diff$%s("p%n_difficulty")$n$ = %GLOBAL%$player$	:i %GLOBAL%$diff$ = (%GLOBAL%$test_struct$->%GLOBAL%$player_diff$)	:i if NOT $StructureContains$$structure$ = ~$autotest_difficulty_strings$%GLOBAL%$diff$		:i $softassert$^[8f5fd047]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$$n$ = %GLOBAL%$player$		:i return ${StructInt check_difficulty_names_passed = 0}$	:i endif	:i %GLOBAL%$player$ = (%GLOBAL%$player$ + %i(1))	:i loop_to %i(4)	:i return ${StructInt check_difficulty_names_passed = 1}$	:i endfunction]Script autotest_check_mode 0x9491d3dc [	:i %GLOBAL%$versus$ = %i(0)	:i $GetNumPlayersInGame$	:i switch (%GLOBAL%$game_mode$)		:i case $career$			:i $softassert$^[53dd07b3]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$			:i return ${StructInt check_mode_passed = 0}$			:i if NOT (%GLOBAL%$num_players$ = %i(1))				:i $softassert$^[a72946ee]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$				:i return ${StructInt check_mode_passed = 0}$			:i endif			:i %GLOBAL%$versus$ = %i(0)			:i endcase		case $quickplay$			:i if NOT (%GLOBAL%$num_players$ >= %i(1) AND %GLOBAL%$num_players$ <= %i(4))				:i $softassert$^[7b9b319f]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$				:i return ${StructInt check_mode_passed = 0}$			:i endif			:i %GLOBAL%$versus$ = %i(0)			:i endcase		default 			:i $softassert$^[a38dd44b]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$			:i return ${StructInt check_mode_passed = 0}$	:i end_switch	:i return $check_mode_passed$ = %i(1)$versus$ = %GLOBAL%$versus$	:i endfunction]Script autotest_check_part_combos c5746aca [	:i if (%GLOBAL%$versus$ = %i(1))		:i %GLOBAL%$i$ = %i(1)		:i while 		:i %GLOBAL%$j$ = (%GLOBAL%$i$ + %i(1))		:i while 		:i $autotest_get_suite$$suite_num$ = %GLOBAL%$suite_num$		:i %GLOBAL%$test_struct$ = (%GLOBAL%$suite_struct$->$tests$:a{%GLOBAL%$test_num$:a})		:i $FormatText$$checksumname$ = $playerA_part$%s("p%n_part")$n$ = %GLOBAL%$i$		:i $FormatText$$checksumname$ = $playerB_part$%s("p%n_part")$n$ = %GLOBAL%$j$		:i if NOT (%GLOBAL%$test_struct$->%GLOBAL%$playerA_part$ = $None$ OR %GLOBAL%$test_struct$->%GLOBAL%$playerB_part$ = $None$)			:i if NOT ((%GLOBAL%$test_struct$->%GLOBAL%$playerA_part$) = (%GLOBAL%$test_struct$->%GLOBAL%$playerB_part$))				:i $softassert$^[53365c7e]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$				:i return ${StructInt check_part_combos_passed = 0}$			:i endif		:i endif		:i %GLOBAL%$j$ = (%GLOBAL%$j$ + %i(1))		:i loop_to (%i(3) - (%GLOBAL%$i$ - %i(1)))		:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))		:i loop_to %i(3)		:i return ${StructInt check_part_combos_passed = 1}$	:i endif	:i %GLOBAL%$i$ = %i(1)	:i while 	:i %GLOBAL%$j$ = (%GLOBAL%$i$ + %i(1))	:i while 	:i $autotest_get_suite$$suite_num$ = %GLOBAL%$suite_num$	:i %GLOBAL%$test_struct$ = (%GLOBAL%$suite_struct$->$tests$:a{%GLOBAL%$test_num$:a})	:i $FormatText$$checksumname$ = $playerA_part$%s("p%n_part")$n$ = %GLOBAL%$i$	:i $FormatText$$checksumname$ = $playerB_part$%s("p%n_part")$n$ = %GLOBAL%$j$	:i if NOT (%GLOBAL%$test_struct$->%GLOBAL%$playerA_part$ = $None$ OR %GLOBAL%$test_struct$->%GLOBAL%$playerB_part$ = $None$)		:i if ((%GLOBAL%$test_struct$->%GLOBAL%$playerA_part$) = (%GLOBAL%$test_struct$->%GLOBAL%$playerB_part$))			:i $softassert$^[5c595801]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$			:i return ${StructInt check_part_combos_passed = 0}$		:i endif	:i endif	:i %GLOBAL%$j$ = (%GLOBAL%$j$ + %i(1))	:i loop_to (%i(3) - (%GLOBAL%$i$ - %i(1)))	:i %GLOBAL%$i$ = (%GLOBAL%$i$ + %i(1))	:i loop_to %i(3)	:i return ${StructInt check_part_combos_passed = 1}$	:i endfunction]Script autotest_check_start_end_times c8aa7ec6 [	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$start_time$		:i if (%GLOBAL%$test_struct$->$start_time$ < %i(0))			:i $softassert$^[1d63d5b9]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$			:i return ${StructInt check_start_end_times_passed = 0}$		:i endif	:i endif	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$end_time$		:i if (%GLOBAL%$test_struct$->$end_time$ < %i(0))			:i $softassert$^[3762b742]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$			:i return ${StructInt check_start_end_times_passed = 0}$		:i endif		:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$start_time$			:i if ((%GLOBAL%$test_struct$->$end_time$) < (%GLOBAL%$test_struct$->$start_time$))				:i $softassert$^[bd1e35a3]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$				:i return ${StructInt check_start_end_times_passed = 0}$			:i endif		:i endif	:i endif	:i return ${StructInt check_start_end_times_passed = 1}$	:i endfunction]Script autotest_check_force_score 0x3888bcaa [	:i if $StructureContains$$structure$ = %GLOBAL%$test_struct$$force_score$		:i if (%GLOBAL%$test_struct$->$force_score$ !== $Off$ AND 			:i %GLOBAL%$test_struct$->$force_score$ !== $poor$ AND 			:i %GLOBAL%$test_struct$->$force_score$ !== $medium$ AND 			:i %GLOBAL%$test_struct$->$force_score$ !== $good$)			:i $softassert$^[6bf828b7]^$s$ = %GLOBAL%$suite_num$$t$ = %GLOBAL%$test_num$			:i return ${StructInt check_force_score_passed = 0}$		:i endif	:i endif	:i return ${StructInt check_force_score_passed = 1}$	:i endfunction]